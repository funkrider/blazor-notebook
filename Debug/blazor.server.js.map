{"version":3,"file":"blazor.server.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///../../../JSInterop/Microsoft.JSInterop.JS/src/dist/Microsoft.JSInterop.js","webpack:///./Rendering/RenderBatch/RenderBatch.ts","webpack:///webpack/runtime/global","webpack:///./Rendering/Events/EventFieldInfo.ts","webpack:///./Rendering/Events/EventTypes.ts","webpack:///./Rendering/JSRootComponents.ts","webpack:///./Rendering/WebRendererInteropMethods.ts","webpack:///./Rendering/Events/EventDelegator.ts","webpack:///./Rendering/LogicalElements.ts","webpack:///./Rendering/ElementReferenceCapture.ts","webpack:///./Rendering/BrowserRenderer.ts","webpack:///./Services/NavigationManager.ts","webpack:///./Rendering/Renderer.ts","webpack:///./DomWrapper.ts","webpack:///./Virtualize.ts","webpack:///./PageTitle.ts","webpack:///./InputFile.ts","webpack:///./NavigationLock.ts","webpack:///./StreamingInterop.ts","webpack:///./GlobalExports.ts","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/DefaultReconnectPolicy.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/HeaderNames.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/HttpClient.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/AccessTokenHttpClient.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/Errors.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/ILogger.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/Loggers.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/Utils.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/FetchHttpClient.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/XhrHttpClient.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/DefaultHttpClient.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/ITransport.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/IHubProtocol.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/HubConnection.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/AbortController.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/LongPollingTransport.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/ServerSentEventsTransport.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/WebSocketTransport.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/HttpConnection.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/TextMessageFormat.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/HandshakeProtocol.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/Subject.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/JsonHubProtocol.js","webpack:///../../../SignalR/clients/ts/signalr/dist/esm/HubConnectionBuilder.js","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/utils/int.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/utils/utf8.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/DecodeError.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/ExtData.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/timestamp.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/ExtensionCodec.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/utils/typedArrays.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/Encoder.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/utils/prettyByte.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/CachedKeyDecoder.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/node_modules/@msgpack/msgpack/dist.es5+esm/Decoder.mjs","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/dist/esm/BinaryMessageFormat.js","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/dist/esm/MessagePackHubProtocol.js","webpack:///../../../SignalR/clients/ts/signalr-protocol-msgpack/dist/esm/Utils.js","webpack:///./BootErrors.ts","webpack:///./Utf8Decoder.ts","webpack:///./BinaryDecoder.ts","webpack:///./Rendering/RenderBatch/OutOfProcessRenderBatch.ts","webpack:///./Platform/Logging/Logger.ts","webpack:///./Platform/Circuits/RenderQueue.ts","webpack:///./Platform/Logging/Loggers.ts","webpack:///./Platform/Circuits/CircuitManager.ts","webpack:///./Platform/Circuits/CircuitStartOptions.ts","webpack:///./Platform/Circuits/DefaultReconnectDisplay.ts","webpack:///./Platform/Circuits/UserSpecifiedDisplay.ts","webpack:///./Platform/Circuits/DefaultReconnectionHandler.ts","webpack:///./Services/ComponentDescriptorDiscovery.ts","webpack:///./JSInitializers/JSInitializers.ts","webpack:///./Boot.Server.Common.ts","webpack:///./JSInitializers/JSInitializers.Server.ts","webpack:///./Platform/Circuits/CircuitStreamingInterop.ts","webpack:///./Boot.Server.ts","webpack:///./BootCommon.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// This is a single-file self-contained module to avoid the need for a Webpack build\nexport var DotNet;\n(function (DotNet) {\n    const jsonRevivers = [];\n    const jsObjectIdKey = \"__jsObjectId\";\n    const dotNetObjectRefKey = \"__dotNetObject\";\n    const byteArrayRefKey = \"__byte[]\";\n    const dotNetStreamRefKey = \"__dotNetStream\";\n    const jsStreamReferenceLengthKey = \"__jsStreamReferenceLength\";\n    // If undefined, no dispatcher has been attached yet.\n    // If null, this means more than one dispatcher was attached, so no default can be determined.\n    // Otherwise, there was only one dispatcher registered. We keep track of this instance to keep legacy APIs working.\n    let defaultCallDispatcher;\n    // Provides access to the \"current\" call dispatcher without having to flow it through nested function calls.\n    let currentCallDispatcher;\n    class JSObject {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        constructor(_jsObject) {\n            this._jsObject = _jsObject;\n            this._cachedFunctions = new Map();\n        }\n        findFunction(identifier) {\n            const cachedFunction = this._cachedFunctions.get(identifier);\n            if (cachedFunction) {\n                return cachedFunction;\n            }\n            let result = this._jsObject;\n            let lastSegmentValue;\n            identifier.split(\".\").forEach(segment => {\n                if (segment in result) {\n                    lastSegmentValue = result;\n                    result = result[segment];\n                }\n                else {\n                    throw new Error(`Could not find '${identifier}' ('${segment}' was undefined).`);\n                }\n            });\n            if (result instanceof Function) {\n                result = result.bind(lastSegmentValue);\n                this._cachedFunctions.set(identifier, result);\n                return result;\n            }\n            throw new Error(`The value '${identifier}' is not a function.`);\n        }\n        getWrappedObject() {\n            return this._jsObject;\n        }\n    }\n    const windowJSObjectId = 0;\n    const cachedJSObjectsById = {\n        [windowJSObjectId]: new JSObject(window)\n    };\n    cachedJSObjectsById[windowJSObjectId]._cachedFunctions.set(\"import\", (url) => {\n        // In most cases developers will want to resolve dynamic imports relative to the base HREF.\n        // However since we're the one calling the import keyword, they would be resolved relative to\n        // this framework bundle URL. Fix this by providing an absolute URL.\n        if (typeof url === \"string\" && url.startsWith(\"./\")) {\n            url = new URL(url.substr(2), document.baseURI).toString();\n        }\n        return import(/* webpackIgnore: true */ url);\n    });\n    let nextJsObjectId = 1; // Start at 1 because zero is reserved for \"window\"\n    /**\n     * Creates a .NET call dispatcher to use for handling invocations between JavaScript and a .NET runtime.\n     *\n     * @param dotNetCallDispatcher An object that can dispatch calls from JavaScript to a .NET runtime.\n     */\n    function attachDispatcher(dotNetCallDispatcher) {\n        const result = new CallDispatcher(dotNetCallDispatcher);\n        if (defaultCallDispatcher === undefined) {\n            // This was the first dispatcher registered, so it becomes the default. This exists purely for\n            // backwards compatibility.\n            defaultCallDispatcher = result;\n        }\n        else if (defaultCallDispatcher) {\n            // There is already a default dispatcher. Now that there are multiple to choose from, there can\n            // be no acceptable default, so we nullify the default dispatcher.\n            defaultCallDispatcher = null;\n        }\n        return result;\n    }\n    DotNet.attachDispatcher = attachDispatcher;\n    /**\n     * Adds a JSON reviver callback that will be used when parsing arguments received from .NET.\n     * @param reviver The reviver to add.\n     */\n    function attachReviver(reviver) {\n        jsonRevivers.push(reviver);\n    }\n    DotNet.attachReviver = attachReviver;\n    /**\n     * Invokes the specified .NET public method synchronously. Not all hosting scenarios support\n     * synchronous invocation, so if possible use invokeMethodAsync instead.\n     *\n     * @deprecated Use DotNetObject to invoke instance methods instead.\n     * @param assemblyName The short name (without key/version or .dll extension) of the .NET assembly containing the method.\n     * @param methodIdentifier The identifier of the method to invoke. The method must have a [JSInvokable] attribute specifying this identifier.\n     * @param args Arguments to pass to the method, each of which must be JSON-serializable.\n     * @returns The result of the operation.\n     */\n    function invokeMethod(assemblyName, methodIdentifier, ...args) {\n        const dispatcher = getDefaultCallDispatcher();\n        return dispatcher.invokeDotNetStaticMethod(assemblyName, methodIdentifier, ...args);\n    }\n    DotNet.invokeMethod = invokeMethod;\n    /**\n     * Invokes the specified .NET public method asynchronously.\n     *\n     * @deprecated Use DotNetObject to invoke instance methods instead.\n     * @param assemblyName The short name (without key/version or .dll extension) of the .NET assembly containing the method.\n     * @param methodIdentifier The identifier of the method to invoke. The method must have a [JSInvokable] attribute specifying this identifier.\n     * @param args Arguments to pass to the method, each of which must be JSON-serializable.\n     * @returns A promise representing the result of the operation.\n     */\n    function invokeMethodAsync(assemblyName, methodIdentifier, ...args) {\n        const dispatcher = getDefaultCallDispatcher();\n        return dispatcher.invokeDotNetStaticMethodAsync(assemblyName, methodIdentifier, ...args);\n    }\n    DotNet.invokeMethodAsync = invokeMethodAsync;\n    /**\n     * Creates a JavaScript object reference that can be passed to .NET via interop calls.\n     *\n     * @param jsObject The JavaScript Object used to create the JavaScript object reference.\n     * @returns The JavaScript object reference (this will be the same instance as the given object).\n     * @throws Error if the given value is not an Object.\n     */\n    function createJSObjectReference(jsObject) {\n        if (jsObject && typeof jsObject === \"object\") {\n            cachedJSObjectsById[nextJsObjectId] = new JSObject(jsObject);\n            const result = {\n                [jsObjectIdKey]: nextJsObjectId\n            };\n            nextJsObjectId++;\n            return result;\n        }\n        throw new Error(`Cannot create a JSObjectReference from the value '${jsObject}'.`);\n    }\n    DotNet.createJSObjectReference = createJSObjectReference;\n    /**\n     * Creates a JavaScript data reference that can be passed to .NET via interop calls.\n     *\n     * @param streamReference The ArrayBufferView or Blob used to create the JavaScript stream reference.\n     * @returns The JavaScript data reference (this will be the same instance as the given object).\n     * @throws Error if the given value is not an Object or doesn't have a valid byteLength.\n     */\n    function createJSStreamReference(streamReference) {\n        let length = -1;\n        // If we're given a raw Array Buffer, we interpret it as a `Uint8Array` as\n        // ArrayBuffers' aren't directly readable.\n        if (streamReference instanceof ArrayBuffer) {\n            streamReference = new Uint8Array(streamReference);\n        }\n        if (streamReference instanceof Blob) {\n            length = streamReference.size;\n        }\n        else if (streamReference.buffer instanceof ArrayBuffer) {\n            if (streamReference.byteLength === undefined) {\n                throw new Error(`Cannot create a JSStreamReference from the value '${streamReference}' as it doesn't have a byteLength.`);\n            }\n            length = streamReference.byteLength;\n        }\n        else {\n            throw new Error(\"Supplied value is not a typed array or blob.\");\n        }\n        const result = {\n            [jsStreamReferenceLengthKey]: length\n        };\n        try {\n            const jsObjectReference = createJSObjectReference(streamReference);\n            result[jsObjectIdKey] = jsObjectReference[jsObjectIdKey];\n        }\n        catch (error) {\n            throw new Error(`Cannot create a JSStreamReference from the value '${streamReference}'.`);\n        }\n        return result;\n    }\n    DotNet.createJSStreamReference = createJSStreamReference;\n    /**\n     * Disposes the given JavaScript object reference.\n     *\n     * @param jsObjectReference The JavaScript Object reference.\n     */\n    function disposeJSObjectReference(jsObjectReference) {\n        const id = jsObjectReference && jsObjectReference[jsObjectIdKey];\n        if (typeof id === \"number\") {\n            disposeJSObjectReferenceById(id);\n        }\n    }\n    DotNet.disposeJSObjectReference = disposeJSObjectReference;\n    function parseJsonWithRevivers(callDispatcher, json) {\n        currentCallDispatcher = callDispatcher;\n        const result = json ? JSON.parse(json, (key, initialValue) => {\n            // Invoke each reviver in order, passing the output from the previous reviver,\n            // so that each one gets a chance to transform the value\n            return jsonRevivers.reduce((latestValue, reviver) => reviver(key, latestValue), initialValue);\n        }) : null;\n        currentCallDispatcher = undefined;\n        return result;\n    }\n    function getDefaultCallDispatcher() {\n        if (defaultCallDispatcher === undefined) {\n            throw new Error(\"No call dispatcher has been set.\");\n        }\n        else if (defaultCallDispatcher === null) {\n            throw new Error(\"There are multiple .NET runtimes present, so a default dispatcher could not be resolved. Use DotNetObject to invoke .NET instance methods.\");\n        }\n        else {\n            return defaultCallDispatcher;\n        }\n    }\n    /**\n     * Represents the type of result expected from a JS interop call.\n     */\n    // eslint-disable-next-line no-shadow\n    let JSCallResultType;\n    (function (JSCallResultType) {\n        JSCallResultType[JSCallResultType[\"Default\"] = 0] = \"Default\";\n        JSCallResultType[JSCallResultType[\"JSObjectReference\"] = 1] = \"JSObjectReference\";\n        JSCallResultType[JSCallResultType[\"JSStreamReference\"] = 2] = \"JSStreamReference\";\n        JSCallResultType[JSCallResultType[\"JSVoidResult\"] = 3] = \"JSVoidResult\";\n    })(JSCallResultType = DotNet.JSCallResultType || (DotNet.JSCallResultType = {}));\n    class CallDispatcher {\n        // eslint-disable-next-line no-empty-function\n        constructor(_dotNetCallDispatcher) {\n            this._dotNetCallDispatcher = _dotNetCallDispatcher;\n            this._byteArraysToBeRevived = new Map();\n            this._pendingDotNetToJSStreams = new Map();\n            this._pendingAsyncCalls = {};\n            this._nextAsyncCallId = 1; // Start at 1 because zero signals \"no response needed\"\n        }\n        getDotNetCallDispatcher() {\n            return this._dotNetCallDispatcher;\n        }\n        invokeJSFromDotNet(identifier, argsJson, resultType, targetInstanceId) {\n            const args = parseJsonWithRevivers(this, argsJson);\n            const jsFunction = findJSFunction(identifier, targetInstanceId);\n            const returnValue = jsFunction(...(args || []));\n            const result = createJSCallResult(returnValue, resultType);\n            return result === null || result === undefined\n                ? null\n                : stringifyArgs(this, result);\n        }\n        beginInvokeJSFromDotNet(asyncHandle, identifier, argsJson, resultType, targetInstanceId) {\n            // Coerce synchronous functions into async ones, plus treat\n            // synchronous exceptions the same as async ones\n            const promise = new Promise(resolve => {\n                const args = parseJsonWithRevivers(this, argsJson);\n                const jsFunction = findJSFunction(identifier, targetInstanceId);\n                const synchronousResultOrPromise = jsFunction(...(args || []));\n                resolve(synchronousResultOrPromise);\n            });\n            // We only listen for a result if the caller wants to be notified about it\n            if (asyncHandle) {\n                // On completion, dispatch result back to .NET\n                // Not using \"await\" because it codegens a lot of boilerplate\n                promise.\n                    then(result => stringifyArgs(this, [\n                    asyncHandle,\n                    true,\n                    createJSCallResult(result, resultType)\n                ])).\n                    then(result => this._dotNetCallDispatcher.endInvokeJSFromDotNet(asyncHandle, true, result), error => this._dotNetCallDispatcher.endInvokeJSFromDotNet(asyncHandle, false, JSON.stringify([\n                    asyncHandle,\n                    false,\n                    formatError(error)\n                ])));\n            }\n        }\n        endInvokeDotNetFromJS(asyncCallId, success, resultJsonOrExceptionMessage) {\n            const resultOrError = success\n                ? parseJsonWithRevivers(this, resultJsonOrExceptionMessage)\n                : new Error(resultJsonOrExceptionMessage);\n            this.completePendingCall(parseInt(asyncCallId, 10), success, resultOrError);\n        }\n        invokeDotNetStaticMethod(assemblyName, methodIdentifier, ...args) {\n            return this.invokeDotNetMethod(assemblyName, methodIdentifier, null, args);\n        }\n        invokeDotNetStaticMethodAsync(assemblyName, methodIdentifier, ...args) {\n            return this.invokeDotNetMethodAsync(assemblyName, methodIdentifier, null, args);\n        }\n        invokeDotNetMethod(assemblyName, methodIdentifier, dotNetObjectId, args) {\n            if (this._dotNetCallDispatcher.invokeDotNetFromJS) {\n                const argsJson = stringifyArgs(this, args);\n                const resultJson = this._dotNetCallDispatcher.invokeDotNetFromJS(assemblyName, methodIdentifier, dotNetObjectId, argsJson);\n                return resultJson ? parseJsonWithRevivers(this, resultJson) : null;\n            }\n            throw new Error(\"The current dispatcher does not support synchronous calls from JS to .NET. Use invokeDotNetMethodAsync instead.\");\n        }\n        invokeDotNetMethodAsync(assemblyName, methodIdentifier, dotNetObjectId, args) {\n            if (assemblyName && dotNetObjectId) {\n                throw new Error(`For instance method calls, assemblyName should be null. Received '${assemblyName}'.`);\n            }\n            const asyncCallId = this._nextAsyncCallId++;\n            const resultPromise = new Promise((resolve, reject) => {\n                this._pendingAsyncCalls[asyncCallId] = { resolve, reject };\n            });\n            try {\n                const argsJson = stringifyArgs(this, args);\n                this._dotNetCallDispatcher.beginInvokeDotNetFromJS(asyncCallId, assemblyName, methodIdentifier, dotNetObjectId, argsJson);\n            }\n            catch (ex) {\n                // Synchronous failure\n                this.completePendingCall(asyncCallId, false, ex);\n            }\n            return resultPromise;\n        }\n        receiveByteArray(id, data) {\n            this._byteArraysToBeRevived.set(id, data);\n        }\n        processByteArray(id) {\n            const result = this._byteArraysToBeRevived.get(id);\n            if (!result) {\n                return null;\n            }\n            this._byteArraysToBeRevived.delete(id);\n            return result;\n        }\n        supplyDotNetStream(streamId, stream) {\n            if (this._pendingDotNetToJSStreams.has(streamId)) {\n                // The receiver is already waiting, so we can resolve the promise now and stop tracking this\n                const pendingStream = this._pendingDotNetToJSStreams.get(streamId);\n                this._pendingDotNetToJSStreams.delete(streamId);\n                pendingStream.resolve(stream);\n            }\n            else {\n                // The receiver hasn't started waiting yet, so track a pre-completed entry it can attach to later\n                const pendingStream = new PendingStream();\n                pendingStream.resolve(stream);\n                this._pendingDotNetToJSStreams.set(streamId, pendingStream);\n            }\n        }\n        getDotNetStreamPromise(streamId) {\n            // We might already have started receiving the stream, or maybe it will come later.\n            // We have to handle both possible orderings, but we can count on it coming eventually because\n            // it's not something the developer gets to control, and it would be an error if it doesn't.\n            let result;\n            if (this._pendingDotNetToJSStreams.has(streamId)) {\n                // We've already started receiving the stream, so no longer need to track it as pending\n                result = this._pendingDotNetToJSStreams.get(streamId).streamPromise;\n                this._pendingDotNetToJSStreams.delete(streamId);\n            }\n            else {\n                // We haven't started receiving it yet, so add an entry to track it as pending\n                const pendingStream = new PendingStream();\n                this._pendingDotNetToJSStreams.set(streamId, pendingStream);\n                result = pendingStream.streamPromise;\n            }\n            return result;\n        }\n        completePendingCall(asyncCallId, success, resultOrError) {\n            if (!this._pendingAsyncCalls.hasOwnProperty(asyncCallId)) {\n                throw new Error(`There is no pending async call with ID ${asyncCallId}.`);\n            }\n            const asyncCall = this._pendingAsyncCalls[asyncCallId];\n            delete this._pendingAsyncCalls[asyncCallId];\n            if (success) {\n                asyncCall.resolve(resultOrError);\n            }\n            else {\n                asyncCall.reject(resultOrError);\n            }\n        }\n    }\n    function formatError(error) {\n        if (error instanceof Error) {\n            return `${error.message}\\n${error.stack}`;\n        }\n        return error ? error.toString() : \"null\";\n    }\n    function findJSFunction(identifier, targetInstanceId) {\n        const targetInstance = cachedJSObjectsById[targetInstanceId];\n        if (targetInstance) {\n            return targetInstance.findFunction(identifier);\n        }\n        throw new Error(`JS object instance with ID ${targetInstanceId} does not exist (has it been disposed?).`);\n    }\n    DotNet.findJSFunction = findJSFunction;\n    function disposeJSObjectReferenceById(id) {\n        delete cachedJSObjectsById[id];\n    }\n    DotNet.disposeJSObjectReferenceById = disposeJSObjectReferenceById;\n    class DotNetObject {\n        // eslint-disable-next-line no-empty-function\n        constructor(_id, _callDispatcher) {\n            this._id = _id;\n            this._callDispatcher = _callDispatcher;\n        }\n        invokeMethod(methodIdentifier, ...args) {\n            return this._callDispatcher.invokeDotNetMethod(null, methodIdentifier, this._id, args);\n        }\n        invokeMethodAsync(methodIdentifier, ...args) {\n            return this._callDispatcher.invokeDotNetMethodAsync(null, methodIdentifier, this._id, args);\n        }\n        dispose() {\n            const promise = this._callDispatcher.invokeDotNetMethodAsync(null, \"__Dispose\", this._id, null);\n            promise.catch(error => console.error(error));\n        }\n        serializeAsArg() {\n            return { [dotNetObjectRefKey]: this._id };\n        }\n    }\n    DotNet.DotNetObject = DotNetObject;\n    attachReviver(function reviveReference(key, value) {\n        if (value && typeof value === \"object\") {\n            if (value.hasOwnProperty(dotNetObjectRefKey)) {\n                return new DotNetObject(value[dotNetObjectRefKey], currentCallDispatcher);\n            }\n            else if (value.hasOwnProperty(jsObjectIdKey)) {\n                const id = value[jsObjectIdKey];\n                const jsObject = cachedJSObjectsById[id];\n                if (jsObject) {\n                    return jsObject.getWrappedObject();\n                }\n                throw new Error(`JS object instance with Id '${id}' does not exist. It may have been disposed.`);\n            }\n            else if (value.hasOwnProperty(byteArrayRefKey)) {\n                const index = value[byteArrayRefKey];\n                const byteArray = currentCallDispatcher.processByteArray(index);\n                if (byteArray === undefined) {\n                    throw new Error(`Byte array index '${index}' does not exist.`);\n                }\n                return byteArray;\n            }\n            else if (value.hasOwnProperty(dotNetStreamRefKey)) {\n                const streamId = value[dotNetStreamRefKey];\n                const streamPromise = currentCallDispatcher.getDotNetStreamPromise(streamId);\n                return new DotNetStream(streamPromise);\n            }\n        }\n        // Unrecognized - let another reviver handle it\n        return value;\n    });\n    class DotNetStream {\n        // eslint-disable-next-line no-empty-function\n        constructor(_streamPromise) {\n            this._streamPromise = _streamPromise;\n        }\n        /**\n         * Supplies a readable stream of data being sent from .NET.\n         */\n        stream() {\n            return this._streamPromise;\n        }\n        /**\n         * Supplies a array buffer of data being sent from .NET.\n         * Note there is a JavaScript limit on the size of the ArrayBuffer equal to approximately 2GB.\n         */\n        async arrayBuffer() {\n            return new Response(await this.stream()).arrayBuffer();\n        }\n    }\n    class PendingStream {\n        constructor() {\n            this.streamPromise = new Promise((resolve, reject) => {\n                this.resolve = resolve;\n                this.reject = reject;\n            });\n        }\n    }\n    function createJSCallResult(returnValue, resultType) {\n        switch (resultType) {\n            case JSCallResultType.Default:\n                return returnValue;\n            case JSCallResultType.JSObjectReference:\n                return createJSObjectReference(returnValue);\n            case JSCallResultType.JSStreamReference:\n                return createJSStreamReference(returnValue);\n            case JSCallResultType.JSVoidResult:\n                return null;\n            default:\n                throw new Error(`Invalid JS call result type '${resultType}'.`);\n        }\n    }\n    let nextByteArrayIndex = 0;\n    function stringifyArgs(callDispatcher, args) {\n        nextByteArrayIndex = 0;\n        currentCallDispatcher = callDispatcher;\n        const result = JSON.stringify(args, argReplacer);\n        currentCallDispatcher = undefined;\n        return result;\n    }\n    function argReplacer(key, value) {\n        if (value instanceof DotNetObject) {\n            return value.serializeAsArg();\n        }\n        else if (value instanceof Uint8Array) {\n            const dotNetCallDispatcher = currentCallDispatcher.getDotNetCallDispatcher();\n            dotNetCallDispatcher.sendByteArray(nextByteArrayIndex, value);\n            const jsonValue = { [byteArrayRefKey]: nextByteArrayIndex };\n            nextByteArrayIndex++;\n            return jsonValue;\n        }\n        return value;\n    }\n})(DotNet || (DotNet = {}));\n//# sourceMappingURL=Microsoft.JSInterop.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nexport interface RenderBatch {\n  updatedComponents(): ArrayRange<RenderTreeDiff>;\n  referenceFrames(): ArrayRange<RenderTreeFrame>;\n  disposedComponentIds(): ArrayRange<number>;\n  disposedEventHandlerIds(): ArrayRange<number>;\n\n  updatedComponentsEntry(values: ArrayValues<RenderTreeDiff>, index: number): RenderTreeDiff;\n  referenceFramesEntry(values: ArrayValues<RenderTreeFrame>, index: number): RenderTreeFrame;\n  disposedComponentIdsEntry(values: ArrayValues<number>, index: number): number;\n  disposedEventHandlerIdsEntry(values: ArrayValues<number>, index: number): number;\n\n  diffReader: RenderTreeDiffReader;\n  editReader: RenderTreeEditReader;\n  frameReader: RenderTreeFrameReader;\n  arrayRangeReader: ArrayRangeReader;\n  arrayBuilderSegmentReader: ArrayBuilderSegmentReader;\n}\n\nexport interface ArrayRangeReader {\n  count<T>(arrayRange: ArrayRange<T>): number;\n  values<T>(arrayRange: ArrayRange<T>): ArrayValues<T>;\n}\n\nexport interface ArrayBuilderSegmentReader {\n  offset<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): number;\n  count<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): number;\n  values<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): ArrayValues<T>;\n}\n\nexport interface RenderTreeDiffReader {\n  componentId(diff: RenderTreeDiff): number;\n  edits(diff: RenderTreeDiff): ArrayBuilderSegment<RenderTreeEdit>;\n  editsEntry(values: ArrayValues<RenderTreeEdit>, index: number): RenderTreeEdit;\n}\n\nexport interface RenderTreeEditReader {\n  editType(edit: RenderTreeEdit): EditType;\n  siblingIndex(edit: RenderTreeEdit): number;\n  newTreeIndex(edit: RenderTreeEdit): number;\n  moveToSiblingIndex(edit: RenderTreeEdit): number;\n  removedAttributeName(edit: RenderTreeEdit): string | null;\n}\n\nexport interface RenderTreeFrameReader {\n  frameType(frame: RenderTreeFrame): FrameType;\n  subtreeLength(frame: RenderTreeFrame): number;\n  elementReferenceCaptureId(frame: RenderTreeFrame): string | null;\n  componentId(frame: RenderTreeFrame): number;\n  elementName(frame: RenderTreeFrame): string | null;\n  textContent(frame: RenderTreeFrame): string | null;\n  markupContent(frame: RenderTreeFrame): string;\n  attributeName(frame: RenderTreeFrame): string | null;\n  attributeValue(frame: RenderTreeFrame): string | null;\n  attributeEventHandlerId(frame: RenderTreeFrame): number;\n}\n\nexport interface ArrayRange<T> { ArrayRange__DO_NOT_IMPLEMENT: unknown }\nexport interface ArrayBuilderSegment<T> { ArrayBuilderSegment__DO_NOT_IMPLEMENT: unknown }\nexport interface ArrayValues<T> { ArrayValues__DO_NOT_IMPLEMENT: unknown }\n\nexport interface RenderTreeDiff { RenderTreeDiff__DO_NOT_IMPLEMENT: unknown }\nexport interface RenderTreeFrame { RenderTreeFrame__DO_NOT_IMPLEMENT: unknown }\nexport interface RenderTreeEdit { RenderTreeEdit__DO_NOT_IMPLEMENT: unknown }\n\nexport enum EditType {\n  // The values must be kept in sync with the .NET equivalent in RenderTreeEditType.cs\n  prependFrame = 1,\n  removeFrame = 2,\n  setAttribute = 3,\n  removeAttribute = 4,\n  updateText = 5,\n  stepIn = 6,\n  stepOut = 7,\n  updateMarkup = 8,\n  permutationListEntry = 9,\n  permutationListEnd = 10,\n}\n\nexport enum FrameType {\n  // The values must be kept in sync with the .NET equivalent in RenderTreeFrameType.cs\n  element = 1,\n  text = 2,\n  attribute = 3,\n  component = 4,\n  region = 5,\n  elementReferenceCapture = 6,\n  markup = 8,\n}\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nexport class EventFieldInfo {\n  constructor(public componentId: number, public fieldValue: string | boolean) {\n  }\n\n  public static fromEvent(componentId: number, event: Event): EventFieldInfo | null {\n    const elem = event.target;\n    if (elem instanceof Element) {\n      const fieldData = getFormFieldData(elem);\n      if (fieldData) {\n        return new EventFieldInfo(componentId, fieldData.value);\n      }\n    }\n\n    // This event isn't happening on a form field that we can reverse-map back to some incoming attribute\n    return null;\n  }\n}\n\nfunction getFormFieldData(elem: Element) {\n  // The logic in here should be the inverse of the logic in BrowserRenderer's tryApplySpecialProperty.\n  // That is, we're doing the reverse mapping, starting from an HTML property and reconstructing which\n  // \"special\" attribute would have been mapped to that property.\n  if (elem instanceof HTMLInputElement) {\n    return (elem.type && elem.type.toLowerCase() === 'checkbox')\n      ? { value: elem.checked }\n      : { value: elem.value };\n  }\n\n  if (elem instanceof HTMLSelectElement || elem instanceof HTMLTextAreaElement) {\n    return { value: elem.value };\n  }\n\n  return null;\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nexport interface EventTypeOptions {\n  browserEventName?: string;\n  createEventArgs?: (event: Event) => unknown;\n}\n\nconst eventTypeRegistry: Map<string, EventTypeOptions> = new Map();\nconst browserEventNamesToAliases: Map<string, string[]> = new Map();\nconst createBlankEventArgsOptions: EventTypeOptions = { createEventArgs: () => ({}) };\n\nexport const eventNameAliasRegisteredCallbacks: ((aliasEventName: string, browserEventName) => void)[] = [];\n\nexport function registerCustomEventType(eventName: string, options: EventTypeOptions): void {\n  if (!options) {\n    throw new Error('The options parameter is required.');\n  }\n\n  // There can't be more than one registration for the same event name because then we wouldn't\n  // know which eventargs data to supply.\n  if (eventTypeRegistry.has(eventName)) {\n    throw new Error(`The event '${eventName}' is already registered.`);\n  }\n\n  // If applicable, register this as an alias of the given browserEventName\n  if (options.browserEventName) {\n    const aliasGroup = browserEventNamesToAliases.get(options.browserEventName);\n    if (aliasGroup) {\n      aliasGroup.push(eventName);\n    } else {\n      browserEventNamesToAliases.set(options.browserEventName, [eventName]);\n    }\n\n    // For developer convenience, it's allowed to register the custom event type *after*\n    // some listeners for it are already present. Once the event name alias gets registered,\n    // we have to notify any existing event delegators so they can update their delegated\n    // events list.\n    eventNameAliasRegisteredCallbacks.forEach(callback => callback(eventName, options.browserEventName));\n  }\n\n  eventTypeRegistry.set(eventName, options);\n}\n\nexport function getEventTypeOptions(eventName: string): EventTypeOptions | undefined {\n  return eventTypeRegistry.get(eventName);\n}\n\nexport function getEventNameAliases(eventName: string): string[] | undefined {\n  return browserEventNamesToAliases.get(eventName);\n}\n\nexport function getBrowserEventName(possibleAliasEventName: string): string {\n  const eventOptions = eventTypeRegistry.get(possibleAliasEventName);\n  return eventOptions?.browserEventName || possibleAliasEventName;\n}\n\nfunction registerBuiltInEventType(eventNames: string[], options: EventTypeOptions) {\n  eventNames.forEach(eventName => eventTypeRegistry.set(eventName, options));\n}\n\nregisterBuiltInEventType(['input', 'change'], {\n  createEventArgs: parseChangeEvent,\n});\n\nregisterBuiltInEventType([\n  'copy',\n  'cut',\n  'paste',\n], {\n  createEventArgs: e => parseClipboardEvent(e as ClipboardEvent),\n});\n\nregisterBuiltInEventType([\n  'drag',\n  'dragend',\n  'dragenter',\n  'dragleave',\n  'dragover',\n  'dragstart',\n  'drop',\n], {\n  createEventArgs: e => parseDragEvent(e as DragEvent),\n});\n\nregisterBuiltInEventType([\n  'focus',\n  'blur',\n  'focusin',\n  'focusout',\n], {\n  createEventArgs: e => parseFocusEvent(e as FocusEvent),\n});\n\nregisterBuiltInEventType([\n  'keydown',\n  'keyup',\n  'keypress',\n], {\n  createEventArgs: e => parseKeyboardEvent(e as KeyboardEvent),\n});\n\nregisterBuiltInEventType([\n  'contextmenu',\n  'click',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'mousedown',\n  'mouseup',\n  'mouseleave',\n  'mouseenter',\n  'dblclick',\n], {\n  createEventArgs: e => parseMouseEvent(e as MouseEvent),\n});\n\nregisterBuiltInEventType(['error'], {\n  createEventArgs: e => parseErrorEvent(e as ErrorEvent),\n});\n\nregisterBuiltInEventType([\n  'loadstart',\n  'timeout',\n  'abort',\n  'load',\n  'loadend',\n  'progress',\n], {\n  createEventArgs: e => parseProgressEvent(e as ProgressEvent),\n});\n\nregisterBuiltInEventType([\n  'touchcancel',\n  'touchend',\n  'touchmove',\n  'touchenter',\n  'touchleave',\n  'touchstart',\n], {\n  createEventArgs: e => parseTouchEvent(e as TouchEvent),\n});\n\nregisterBuiltInEventType([\n  'gotpointercapture',\n  'lostpointercapture',\n  'pointercancel',\n  'pointerdown',\n  'pointerenter',\n  'pointerleave',\n  'pointermove',\n  'pointerout',\n  'pointerover',\n  'pointerup',\n], {\n  createEventArgs: e => parsePointerEvent(e as PointerEvent),\n});\n\nregisterBuiltInEventType(['wheel', 'mousewheel'], {\n  createEventArgs: e => parseWheelEvent(e as WheelEvent),\n});\n\nregisterBuiltInEventType(['toggle'], createBlankEventArgsOptions);\n\nfunction parseChangeEvent(event: Event): ChangeEventArgs {\n  const element = event.target as Element;\n  if (isTimeBasedInput(element)) {\n    const normalizedValue = normalizeTimeBasedValue(element);\n    return { value: normalizedValue };\n  } else if (isMultipleSelectInput(element)) {\n    const selectElement = element as HTMLSelectElement;\n    const selectedValues = Array.from(selectElement.options)\n      .filter(option => option.selected)\n      .map(option => option.value);\n    return { value: selectedValues };\n  } else {\n    const targetIsCheckbox = isCheckbox(element);\n    const newValue = targetIsCheckbox ? !!element['checked'] : element['value'];\n    return { value: newValue };\n  }\n}\n\nfunction parseWheelEvent(event: WheelEvent): WheelEventArgs {\n  return {\n    ...parseMouseEvent(event),\n    deltaX: event.deltaX,\n    deltaY: event.deltaY,\n    deltaZ: event.deltaZ,\n    deltaMode: event.deltaMode,\n  };\n}\n\nfunction parsePointerEvent(event: PointerEvent): PointerEventArgs {\n  return {\n    ...parseMouseEvent(event),\n    pointerId: event.pointerId,\n    width: event.width,\n    height: event.height,\n    pressure: event.pressure,\n    tiltX: event.tiltX,\n    tiltY: event.tiltY,\n    pointerType: event.pointerType,\n    isPrimary: event.isPrimary,\n  };\n}\n\nfunction parseTouchEvent(event: TouchEvent): TouchEventArgs {\n  return {\n    detail: event.detail,\n    touches: parseTouch(event.touches),\n    targetTouches: parseTouch(event.targetTouches),\n    changedTouches: parseTouch(event.changedTouches),\n    ctrlKey: event.ctrlKey,\n    shiftKey: event.shiftKey,\n    altKey: event.altKey,\n    metaKey: event.metaKey,\n    type: event.type,\n  };\n}\n\nfunction parseFocusEvent(event: FocusEvent): FocusEventArgs {\n  return {\n    type: event.type,\n  };\n}\n\nfunction parseClipboardEvent(event: ClipboardEvent): ClipboardEventArgs {\n  return {\n    type: event.type,\n  };\n}\n\nfunction parseProgressEvent(event: ProgressEvent<EventTarget>): ProgressEventArgs {\n  return {\n    lengthComputable: event.lengthComputable,\n    loaded: event.loaded,\n    total: event.total,\n    type: event.type,\n  };\n}\n\nfunction parseErrorEvent(event: ErrorEvent): ErrorEventArgs {\n  return {\n    message: event.message,\n    filename: event.filename,\n    lineno: event.lineno,\n    colno: event.colno,\n    type: event.type,\n  };\n}\n\nfunction parseKeyboardEvent(event: KeyboardEvent): KeyboardEventArgs {\n  return {\n    key: event.key,\n    code: event.code,\n    location: event.location,\n    repeat: event.repeat,\n    ctrlKey: event.ctrlKey,\n    shiftKey: event.shiftKey,\n    altKey: event.altKey,\n    metaKey: event.metaKey,\n    type: event.type,\n  };\n}\n\nfunction parseDragEvent(event: DragEvent): DragEventArgs {\n  return {\n    ...parseMouseEvent(event),\n    dataTransfer: event.dataTransfer ? {\n      dropEffect: event.dataTransfer.dropEffect,\n      effectAllowed: event.dataTransfer.effectAllowed,\n      files: Array.from(event.dataTransfer.files).map(f => f.name),\n      items: Array.from(event.dataTransfer.items).map(i => ({ kind: i.kind, type: i.type })),\n      types: event.dataTransfer.types,\n    } : null,\n  };\n}\n\nfunction parseTouch(touchList: TouchList): TouchPoint[] {\n  const touches: TouchPoint[] = [];\n\n  for (let i = 0; i < touchList.length; i++) {\n    const touch = touchList[i];\n    touches.push({\n      identifier: touch.identifier,\n      clientX: touch.clientX,\n      clientY: touch.clientY,\n      screenX: touch.screenX,\n      screenY: touch.screenY,\n      pageX: touch.pageX,\n      pageY: touch.pageY,\n    });\n  }\n  return touches;\n}\n\nfunction parseMouseEvent(event: MouseEvent): MouseEventArgs {\n  return {\n    detail: event.detail,\n    screenX: event.screenX,\n    screenY: event.screenY,\n    clientX: event.clientX,\n    clientY: event.clientY,\n    offsetX: event.offsetX,\n    offsetY: event.offsetY,\n    pageX: event.pageX,\n    pageY: event.pageY,\n    movementX: event.movementX,\n    movementY: event.movementY,\n    button: event.button,\n    buttons: event.buttons,\n    ctrlKey: event.ctrlKey,\n    shiftKey: event.shiftKey,\n    altKey: event.altKey,\n    metaKey: event.metaKey,\n    type: event.type,\n  };\n}\n\nfunction isCheckbox(element: Element | null): boolean {\n  return !!element && element.tagName === 'INPUT' && element.getAttribute('type') === 'checkbox';\n}\n\nconst timeBasedInputs = [\n  'date',\n  'datetime-local',\n  'month',\n  'time',\n  'week',\n];\n\nfunction isTimeBasedInput(element: Element): element is HTMLInputElement {\n  return timeBasedInputs.indexOf(element.getAttribute('type')!) !== -1;\n}\n\nfunction isMultipleSelectInput(element: Element): element is HTMLSelectElement {\n  return element instanceof HTMLSelectElement && element.type === 'select-multiple';\n}\n\nfunction normalizeTimeBasedValue(element: HTMLInputElement): string {\n  const value = element.value;\n  const type = element.type;\n  switch (type) {\n    case 'date':\n    case 'month':\n      return value;\n    case 'datetime-local':\n      return value.length === 16 ? value + ':00' : value; // Convert yyyy-MM-ddTHH:mm to yyyy-MM-ddTHH:mm:00\n    case 'time':\n      return value.length === 5 ? value + ':00' : value; // Convert hh:mm to hh:mm:00\n    case 'week':\n      // For now we are not going to normalize input type week as it is not trivial\n      return value;\n  }\n\n  throw new Error(`Invalid element type '${type}'.`);\n}\n\n// The following interfaces must be kept in sync with the EventArgs C# classes\n\ninterface ChangeEventArgs {\n  value: string | boolean | string[];\n}\n\ninterface DragEventArgs {\n  detail: number;\n  dataTransfer: DataTransferEventArgs | null;\n  screenX: number;\n  screenY: number;\n  clientX: number;\n  clientY: number;\n  button: number;\n  buttons: number;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\ninterface DataTransferEventArgs {\n  dropEffect: string;\n  effectAllowed: string;\n  files: readonly string[];\n  items: readonly DataTransferItem[];\n  types: readonly string[];\n}\n\ninterface DataTransferItem {\n  kind: string;\n  type: string;\n}\n\ninterface ErrorEventArgs {\n  message: string;\n  filename: string;\n  lineno: number;\n  colno: number;\n  type: string;\n\n  // omitting 'error' here since we'd have to serialize it, and it's not clear we will want to\n  // do that. https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n}\n\ninterface KeyboardEventArgs {\n  key: string;\n  code: string;\n  location: number;\n  repeat: boolean;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n  type: string;\n}\n\ninterface MouseEventArgs {\n  detail: number;\n  screenX: number;\n  screenY: number;\n  clientX: number;\n  clientY: number;\n  offsetX: number;\n  offsetY: number;\n  pageX: number;\n  pageY: number;\n  movementX: number;\n  movementY: number;\n  button: number;\n  buttons: number;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n  type: string;\n}\n\ninterface PointerEventArgs extends MouseEventArgs {\n  pointerId: number;\n  width: number;\n  height: number;\n  pressure: number;\n  tiltX: number;\n  tiltY: number;\n  pointerType: string;\n  isPrimary: boolean;\n}\n\ninterface ProgressEventArgs {\n  lengthComputable: boolean;\n  loaded: number;\n  total: number;\n  type: string;\n}\n\ninterface TouchEventArgs {\n  detail: number;\n  touches: TouchPoint[];\n  targetTouches: TouchPoint[];\n  changedTouches: TouchPoint[];\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n  type: string;\n}\n\ninterface TouchPoint {\n  identifier: number;\n  screenX: number;\n  screenY: number;\n  clientX: number;\n  clientY: number;\n  pageX: number;\n  pageY: number;\n}\n\ninterface WheelEventArgs extends MouseEventArgs {\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n  deltaMode: number;\n}\n\ninterface FocusEventArgs {\n  type: string;\n}\n\ninterface ClipboardEventArgs {\n  type: string;\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { DotNet } from '@microsoft/dotnet-js-interop';\n\nconst pendingRootComponentContainerNamePrefix = '__bl-dynamic-root:';\nconst pendingRootComponentContainers = new Map<string, Element>();\nlet nextPendingDynamicRootComponentIdentifier = 0;\n\ntype ComponentParameters = object | null | undefined;\n\nlet manager: DotNet.DotNetObject | undefined;\nlet jsComponentParametersByIdentifier: JSComponentParametersByIdentifier;\n\n// These are the public APIs at Blazor.rootComponents.*\nexport const RootComponentsFunctions = {\n  async add(toElement: Element, componentIdentifier: string, initialParameters: ComponentParameters): Promise<DynamicRootComponent> {\n    if (!initialParameters) {\n      throw new Error('initialParameters must be an object, even if empty.');\n    }\n\n    // Track the container so we can use it when the component gets attached to the document via a selector\n    const containerIdentifier = pendingRootComponentContainerNamePrefix + (++nextPendingDynamicRootComponentIdentifier).toString();\n    pendingRootComponentContainers.set(containerIdentifier, toElement);\n\n    // Instruct .NET to add and render the new root component\n    const componentId = await getRequiredManager().invokeMethodAsync<number>('AddRootComponent', componentIdentifier, containerIdentifier);\n    const component = new DynamicRootComponent(componentId, jsComponentParametersByIdentifier[componentIdentifier]);\n    await component.setParameters(initialParameters);\n    return component;\n  },\n};\n\nexport function getAndRemovePendingRootComponentContainer(containerIdentifier: string): Element | undefined {\n  const container = pendingRootComponentContainers.get(containerIdentifier);\n  if (container) {\n    pendingRootComponentContainers.delete(containerIdentifier);\n    return container;\n  }\n}\n\nclass EventCallbackWrapper {\n  private _callback: any;\n\n  private _selfJSObjectReference: unknown;\n\n  invoke(arg: unknown) {\n    return this._callback(arg);\n  }\n\n  setCallback(callback: unknown): void {\n    if (!this._selfJSObjectReference) {\n      this._selfJSObjectReference = DotNet.createJSObjectReference(this);\n    }\n\n    this._callback = callback;\n  }\n\n  getJSObjectReference() {\n    return this._selfJSObjectReference;\n  }\n\n  dispose() {\n    if (this._selfJSObjectReference) {\n      DotNet.disposeJSObjectReference(this._selfJSObjectReference);\n    }\n  }\n}\n\nclass DynamicRootComponent {\n  private _componentId: number | null;\n\n  private readonly _jsEventCallbackWrappers = new Map<string, EventCallbackWrapper>();\n\n  constructor(componentId: number, parameters: JSComponentParameter[]) {\n    this._componentId = componentId;\n\n    for (const parameter of parameters) {\n      if (parameter.type === 'eventcallback') {\n        this._jsEventCallbackWrappers.set(parameter.name.toLowerCase(), new EventCallbackWrapper());\n      }\n    }\n  }\n\n  setParameters(parameters: ComponentParameters) {\n    const mappedParameters = {};\n    const entries = Object.entries(parameters || {});\n    const parameterCount = entries.length;\n\n    for (const [key, value] of entries) {\n      const callbackWrapper = this._jsEventCallbackWrappers.get(key.toLowerCase());\n\n      if (!callbackWrapper || !value) {\n        mappedParameters[key] = value;\n        continue;\n      }\n\n      callbackWrapper.setCallback(value);\n      mappedParameters[key] = callbackWrapper.getJSObjectReference();\n    }\n\n    return getRequiredManager().invokeMethodAsync('SetRootComponentParameters', this._componentId, parameterCount, mappedParameters);\n  }\n\n  async dispose() {\n    if (this._componentId !== null) {\n      await getRequiredManager().invokeMethodAsync('RemoveRootComponent', this._componentId);\n      this._componentId = null; // Ensure it can't be used again\n\n      for (const jsEventCallbackWrapper of this._jsEventCallbackWrappers.values()) {\n        jsEventCallbackWrapper.dispose();\n      }\n    }\n  }\n}\n\n// Called by the framework\nexport function enableJSRootComponents(\n  managerInstance: DotNet.DotNetObject,\n  jsComponentParameters: JSComponentParametersByIdentifier,\n  jsComponentInitializers: JSComponentIdentifiersByInitializer\n): void {\n  if (manager) {\n    // This will only happen in very nonstandard cases where someone has multiple hosts.\n    // It's up to the developer to ensure that only one of them enables dynamic root components.\n    throw new Error('Dynamic root components have already been enabled.');\n  }\n\n  manager = managerInstance;\n  jsComponentParametersByIdentifier = jsComponentParameters;\n\n  // Call the registered initializers. This is an arbitrary subset of the JS component types that are registered\n  // on the .NET side - just those of them that require some JS-side initialization (e.g., to register them\n  // as custom elements).\n  for (const [initializerIdentifier, componentIdentifiers] of Object.entries(jsComponentInitializers)) {\n    const initializerFunc = DotNet.findJSFunction(initializerIdentifier, 0) as JSComponentInitializerCallback;\n    for (const componentIdentifier of componentIdentifiers) {\n      const parameters = jsComponentParameters[componentIdentifier];\n      initializerFunc(componentIdentifier, parameters);\n    }\n  }\n}\n\nfunction getRequiredManager(): DotNet.DotNetObject {\n  if (!manager) {\n    throw new Error('Dynamic root components have not been enabled in this application.');\n  }\n\n  return manager;\n}\n\n// Keep in sync with equivalent in JSComponentConfigurationStore.cs\n// These are an internal implementation detail not exposed in the registration APIs.\nexport type JSComponentParametersByIdentifier = { [identifier: string]: JSComponentParameter[] };\nexport type JSComponentIdentifiersByInitializer = { [initializer: string]: string[] };\n\n// The following is public API\nexport interface JSComponentInitializerCallback {\n  (identifier: string, parameters: JSComponentParameter[]): void;\n}\n\nexport interface JSComponentParameter {\n  name: string;\n  type: JSComponentParameterType;\n}\n\n// JSON-primitive types, plus for those whose .NET equivalent isn't nullable, a '?' to indicate nullability\n// This allows custom element authors to coerce attribute strings into the appropriate type\nexport type JSComponentParameterType = 'string' | 'boolean' | 'boolean?' | 'number' | 'number?' | 'object' | 'eventcallback';\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { DotNet } from '@microsoft/dotnet-js-interop';\nimport { EventDescriptor } from './Events/EventDelegator';\nimport { enableJSRootComponents, JSComponentParametersByIdentifier, JSComponentIdentifiersByInitializer } from './JSRootComponents';\n\nconst interopMethodsByRendererId: DotNet.DotNetObject[] = [];\n\nlet resolveRendererAttached : () => void;\n\nexport const rendererAttached = new Promise<void>((resolve) => {\n  resolveRendererAttached = resolve;\n});\n\nexport function attachWebRendererInterop(\n  interopMethods: DotNet.DotNetObject,\n  jsComponentParameters: JSComponentParametersByIdentifier,\n  jsComponentInitializers: JSComponentIdentifiersByInitializer,\n): number {\n  const rendererId = interopMethodsByRendererId.length;\n  interopMethodsByRendererId.push(interopMethods);\n\n  if (Object.keys(jsComponentParameters).length > 0) {\n    const manager = getInteropMethods(rendererId);\n    enableJSRootComponents(manager, jsComponentParameters, jsComponentInitializers);\n  }\n\n  resolveRendererAttached();\n  return rendererId;\n}\n\nexport function dispatchEvent(browserRendererId: number, eventDescriptor: EventDescriptor, eventArgs: any): void {\n  return dispatchEventMiddleware(browserRendererId, eventDescriptor.eventHandlerId, () => {\n    const interopMethods = getInteropMethods(browserRendererId);\n    return interopMethods.invokeMethodAsync('DispatchEventAsync', eventDescriptor, eventArgs);\n  });\n}\n\nfunction getInteropMethods(rendererId: number): DotNet.DotNetObject {\n  const interopMethods = interopMethodsByRendererId[rendererId];\n  if (!interopMethods) {\n    throw new Error(`No interop methods are registered for renderer ${rendererId}`);\n  }\n\n  return interopMethods;\n}\n\n// On some hosting platforms, we may need to defer the event dispatch, so they can register this middleware to do so\ntype DispatchEventMiddlware = (browserRendererId: number, eventHandlerId: number, continuation: () => void) => void;\n\nlet dispatchEventMiddleware: DispatchEventMiddlware = (browserRendererId, eventHandlerId, continuation) => continuation();\nexport function addDispatchEventMiddleware(middleware: DispatchEventMiddlware): void {\n  const next = dispatchEventMiddleware;\n  dispatchEventMiddleware = (browserRendererId, eventHandlerId, continuation) => {\n    middleware(browserRendererId, eventHandlerId, () => next(browserRendererId, eventHandlerId, continuation));\n  };\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { EventFieldInfo } from './EventFieldInfo';\nimport { eventNameAliasRegisteredCallbacks, getBrowserEventName, getEventNameAliases, getEventTypeOptions } from './EventTypes';\nimport { dispatchEvent } from '../WebRendererInteropMethods';\n\nconst nonBubblingEvents = toLookup([\n  'abort',\n  'blur',\n  'canplay',\n  'canplaythrough',\n  'change',\n  'cuechange',\n  'durationchange',\n  'emptied',\n  'ended',\n  'error',\n  'focus',\n  'load',\n  'loadeddata',\n  'loadedmetadata',\n  'loadend',\n  'loadstart',\n  'mouseenter',\n  'mouseleave',\n  'pointerenter',\n  'pointerleave',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'reset',\n  'scroll',\n  'seeked',\n  'seeking',\n  'stalled',\n  'submit',\n  'suspend',\n  'timeupdate',\n  'toggle',\n  'unload',\n  'volumechange',\n  'waiting',\n  'DOMNodeInsertedIntoDocument',\n  'DOMNodeRemovedFromDocument',\n]);\n\nconst alwaysPreventDefaultEvents: { [eventType: string]: boolean } = { submit: true };\n\nconst disableableEventNames = toLookup([\n  'click',\n  'dblclick',\n  'mousedown',\n  'mousemove',\n  'mouseup',\n]);\n\n// Responsible for adding/removing the eventInfo on an expando property on DOM elements, and\n// calling an EventInfoStore that deals with registering/unregistering the underlying delegated\n// event listeners as required (and also maps actual events back to the given callback).\nexport class EventDelegator {\n  private static nextEventDelegatorId = 0;\n\n  private readonly eventsCollectionKey: string;\n\n  private readonly afterClickCallbacks: ((event: MouseEvent) => void)[] = [];\n\n  private eventInfoStore: EventInfoStore;\n\n  constructor(private browserRendererId: number) {\n    const eventDelegatorId = ++EventDelegator.nextEventDelegatorId;\n    this.eventsCollectionKey = `_blazorEvents_${eventDelegatorId}`;\n    this.eventInfoStore = new EventInfoStore(this.onGlobalEvent.bind(this));\n  }\n\n  public setListener(element: Element, eventName: string, eventHandlerId: number, renderingComponentId: number): void {\n    const infoForElement = this.getEventHandlerInfosForElement(element, true)!;\n    const existingHandler = infoForElement.getHandler(eventName);\n\n    if (existingHandler) {\n      // We can cheaply update the info on the existing object and don't need any other housekeeping\n      // Note that this also takes care of updating the eventHandlerId on the existing handler object\n      this.eventInfoStore.update(existingHandler.eventHandlerId, eventHandlerId);\n    } else {\n      // Go through the whole flow which might involve registering a new global handler\n      const newInfo = { element, eventName, eventHandlerId, renderingComponentId };\n      this.eventInfoStore.add(newInfo);\n      infoForElement.setHandler(eventName, newInfo);\n    }\n  }\n\n  public getHandler(eventHandlerId: number): EventHandlerInfo {\n    return this.eventInfoStore.get(eventHandlerId);\n  }\n\n  public removeListener(eventHandlerId: number): void {\n    // This method gets called whenever the .NET-side code reports that a certain event handler\n    // has been disposed. However we will already have disposed the info about that handler if\n    // the eventHandlerId for the (element,eventName) pair was replaced during diff application.\n    const info = this.eventInfoStore.remove(eventHandlerId);\n    if (info) {\n      // Looks like this event handler wasn't already disposed\n      // Remove the associated data from the DOM element\n      const element = info.element;\n      const elementEventInfos = this.getEventHandlerInfosForElement(element, false);\n      if (elementEventInfos) {\n        elementEventInfos.removeHandler(info.eventName);\n      }\n    }\n  }\n\n  public notifyAfterClick(callback: (event: MouseEvent) => void): void {\n    // This is extremely special-case. It's needed so that navigation link click interception\n    // can be sure to run *after* our synthetic bubbling process. If a need arises, we can\n    // generalise this, but right now it's a purely internal detail.\n    this.afterClickCallbacks.push(callback);\n    this.eventInfoStore.addGlobalListener('click'); // Ensure we always listen for this\n  }\n\n  public setStopPropagation(element: Element, eventName: string, value: boolean): void {\n    const infoForElement = this.getEventHandlerInfosForElement(element, true)!;\n    infoForElement.stopPropagation(eventName, value);\n  }\n\n  public setPreventDefault(element: Element, eventName: string, value: boolean): void {\n    const infoForElement = this.getEventHandlerInfosForElement(element, true)!;\n    infoForElement.preventDefault(eventName, value);\n  }\n\n  private onGlobalEvent(evt: Event) {\n    if (!(evt.target instanceof Element)) {\n      return;\n    }\n\n    // Always dispatch to any listeners for the original underlying browser event name\n    this.dispatchGlobalEventToAllElements(evt.type, evt);\n\n    // If this event name has aliases, dispatch for those listeners too\n    const eventNameAliases = getEventNameAliases(evt.type);\n    eventNameAliases && eventNameAliases.forEach(alias =>\n      this.dispatchGlobalEventToAllElements(alias, evt));\n\n    // Special case for navigation interception\n    if (evt.type === 'click') {\n      this.afterClickCallbacks.forEach(callback => callback(evt as MouseEvent));\n    }\n  }\n\n  private dispatchGlobalEventToAllElements(eventName: string, browserEvent: Event) {\n    // Note that 'eventName' can be an alias. For example, eventName may be 'click.special'\n    // while browserEvent.type may be 'click'.\n\n    // Use the event's 'path' rather than the chain of parent nodes, since the path gives\n    // visibility into shadow roots.\n    const path = browserEvent.composedPath();\n\n    // Scan up the element hierarchy, looking for any matching registered event handlers\n    let candidateEventTarget = path.shift();\n    let eventArgs: unknown = null; // Populate lazily\n    let eventArgsIsPopulated = false;\n    const eventIsNonBubbling = Object.prototype.hasOwnProperty.call(nonBubblingEvents, eventName);\n    let stopPropagationWasRequested = false;\n    while (candidateEventTarget) {\n      const candidateElement = candidateEventTarget as Element;\n      const handlerInfos = this.getEventHandlerInfosForElement(candidateElement, false);\n      if (handlerInfos) {\n        const handlerInfo = handlerInfos.getHandler(eventName);\n        if (handlerInfo && !eventIsDisabledOnElement(candidateElement, browserEvent.type)) {\n          // We are going to raise an event for this element, so prepare info needed by the .NET code\n          if (!eventArgsIsPopulated) {\n            const eventOptionsIfRegistered = getEventTypeOptions(eventName);\n            // For back-compat, if there's no registered createEventArgs, we supply empty event args (not null).\n            // But if there is a registered createEventArgs, it can supply anything (including null).\n            eventArgs = eventOptionsIfRegistered?.createEventArgs\n              ? eventOptionsIfRegistered.createEventArgs(browserEvent)\n              : {};\n            eventArgsIsPopulated = true;\n          }\n\n          // For certain built-in events, having any .NET handler implicitly means we will prevent\n          // the browser's default behavior. This has to be based on the original browser event type name,\n          // not any alias (e.g., if you create a custom 'submit' variant, it should still preventDefault).\n          if (Object.prototype.hasOwnProperty.call(alwaysPreventDefaultEvents, browserEvent.type)) {\n            browserEvent.preventDefault();\n          }\n\n          dispatchEvent(this.browserRendererId, {\n            eventHandlerId: handlerInfo.eventHandlerId,\n            eventName: eventName,\n            eventFieldInfo: EventFieldInfo.fromEvent(handlerInfo.renderingComponentId, browserEvent),\n          }, eventArgs);\n        }\n\n        if (handlerInfos.stopPropagation(eventName)) {\n          stopPropagationWasRequested = true;\n        }\n\n        if (handlerInfos.preventDefault(eventName)) {\n          browserEvent.preventDefault();\n        }\n      }\n\n      candidateEventTarget = (eventIsNonBubbling || stopPropagationWasRequested) ? undefined : path.shift();\n    }\n  }\n\n  private getEventHandlerInfosForElement(element: Element, createIfNeeded: boolean): EventHandlerInfosForElement | null {\n    if (Object.prototype.hasOwnProperty.call(element, this.eventsCollectionKey)) {\n      return element[this.eventsCollectionKey];\n    } else if (createIfNeeded) {\n      return (element[this.eventsCollectionKey] = new EventHandlerInfosForElement());\n    } else {\n      return null;\n    }\n  }\n}\n\n// Responsible for adding and removing the global listener when the number of listeners\n// for a given event name changes between zero and nonzero\nclass EventInfoStore {\n  private infosByEventHandlerId: { [eventHandlerId: number]: EventHandlerInfo } = {};\n\n  private countByEventName: { [eventName: string]: number } = {};\n\n  constructor(private globalListener: EventListener) {\n    eventNameAliasRegisteredCallbacks.push(this.handleEventNameAliasAdded.bind(this));\n  }\n\n  public add(info: EventHandlerInfo) {\n    if (this.infosByEventHandlerId[info.eventHandlerId]) {\n      // Should never happen, but we want to know if it does\n      throw new Error(`Event ${info.eventHandlerId} is already tracked`);\n    }\n\n    this.infosByEventHandlerId[info.eventHandlerId] = info;\n\n    this.addGlobalListener(info.eventName);\n  }\n\n  public get(eventHandlerId: number) {\n    return this.infosByEventHandlerId[eventHandlerId];\n  }\n\n  public addGlobalListener(eventName: string) {\n    // If this event name is an alias, update the global listener for the corresponding browser event\n    eventName = getBrowserEventName(eventName);\n\n    if (Object.prototype.hasOwnProperty.call(this.countByEventName, eventName)) {\n      this.countByEventName[eventName]++;\n    } else {\n      this.countByEventName[eventName] = 1;\n\n      // To make delegation work with non-bubbling events, register a 'capture' listener.\n      // We preserve the non-bubbling behavior by only dispatching such events to the targeted element.\n      const useCapture = Object.prototype.hasOwnProperty.call(nonBubblingEvents, eventName);\n      document.addEventListener(eventName, this.globalListener, useCapture);\n    }\n  }\n\n  public update(oldEventHandlerId: number, newEventHandlerId: number) {\n    if (Object.prototype.hasOwnProperty.call(this.infosByEventHandlerId, newEventHandlerId)) {\n      // Should never happen, but we want to know if it does\n      throw new Error(`Event ${newEventHandlerId} is already tracked`);\n    }\n\n    // Since we're just updating the event handler ID, there's no need to update the global counts\n    const info = this.infosByEventHandlerId[oldEventHandlerId];\n    delete this.infosByEventHandlerId[oldEventHandlerId];\n    info.eventHandlerId = newEventHandlerId;\n    this.infosByEventHandlerId[newEventHandlerId] = info;\n  }\n\n  public remove(eventHandlerId: number): EventHandlerInfo {\n    const info = this.infosByEventHandlerId[eventHandlerId];\n    if (info) {\n      delete this.infosByEventHandlerId[eventHandlerId];\n\n      // If this event name is an alias, update the global listener for the corresponding browser event\n      const eventName = getBrowserEventName(info.eventName);\n\n      if (--this.countByEventName[eventName] === 0) {\n        delete this.countByEventName[eventName];\n        document.removeEventListener(eventName, this.globalListener);\n      }\n    }\n\n    return info;\n  }\n\n  private handleEventNameAliasAdded(aliasEventName, browserEventName) {\n    // If an event name alias gets registered later, we need to update the global listener\n    // registrations to match. This makes it equivalent to the alias having been registered\n    // before the elements with event handlers got rendered.\n    if (Object.prototype.hasOwnProperty.call(this.countByEventName, aliasEventName)) {\n      // Delete old\n      const countByAliasEventName = this.countByEventName[aliasEventName];\n      delete this.countByEventName[aliasEventName];\n      document.removeEventListener(aliasEventName, this.globalListener);\n\n      // Ensure corresponding count is added to new\n      this.addGlobalListener(browserEventName);\n      this.countByEventName[browserEventName] += countByAliasEventName - 1;\n    }\n  }\n}\n\nclass EventHandlerInfosForElement {\n  // Although we *could* track multiple event handlers per (element, eventName) pair\n  // (since they have distinct eventHandlerId values), there's no point doing so because\n  // our programming model is that you declare event handlers as attributes. An element\n  // can only have one attribute with a given name, hence only one event handler with\n  // that name at any one time.\n  // So to keep things simple, only track one EventHandlerInfo per (element, eventName)\n  private handlers: { [eventName: string]: EventHandlerInfo } = {};\n\n  private preventDefaultFlags: { [eventName: string]: boolean } | null = null;\n\n  private stopPropagationFlags: { [eventName: string]: boolean } | null = null;\n\n  public getHandler(eventName: string): EventHandlerInfo | null {\n    return Object.prototype.hasOwnProperty.call(this.handlers, eventName) ? this.handlers[eventName] : null;\n  }\n\n  public setHandler(eventName: string, handler: EventHandlerInfo) {\n    this.handlers[eventName] = handler;\n  }\n\n  public removeHandler(eventName: string) {\n    delete this.handlers[eventName];\n  }\n\n  public preventDefault(eventName: string, setValue?: boolean): boolean {\n    if (setValue !== undefined) {\n      this.preventDefaultFlags = this.preventDefaultFlags || {};\n      this.preventDefaultFlags[eventName] = setValue;\n    }\n\n    return this.preventDefaultFlags ? this.preventDefaultFlags[eventName] : false;\n  }\n\n  public stopPropagation(eventName: string, setValue?: boolean): boolean {\n    if (setValue !== undefined) {\n      this.stopPropagationFlags = this.stopPropagationFlags || {};\n      this.stopPropagationFlags[eventName] = setValue;\n    }\n\n    return this.stopPropagationFlags ? this.stopPropagationFlags[eventName] : false;\n  }\n}\n\nexport interface EventDescriptor {\n  eventHandlerId: number;\n  eventName: string;\n  eventFieldInfo: EventFieldInfo | null;\n}\n\ninterface EventHandlerInfo {\n  element: Element;\n  eventName: string;\n  eventHandlerId: number;\n\n  // The component whose tree includes the event handler attribute frame, *not* necessarily the\n  // same component that will be re-rendered after the event is handled (since we re-render the\n  // component that supplied the delegate, not the one that rendered the event handler frame)\n  renderingComponentId: number;\n}\n\nfunction toLookup(items: string[]): { [key: string]: boolean } {\n  const result = {};\n  items.forEach(value => {\n    result[value] = true;\n  });\n  return result;\n}\n\nfunction eventIsDisabledOnElement(element: Element, rawBrowserEventName: string): boolean {\n  // We want to replicate the normal DOM event behavior that, for 'interactive' elements\n  // with a 'disabled' attribute, certain mouse events are suppressed\n  return (element instanceof HTMLButtonElement || element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement || element instanceof HTMLSelectElement)\n    && Object.prototype.hasOwnProperty.call(disableableEventNames, rawBrowserEventName)\n    && element.disabled;\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\n/*\n  A LogicalElement plays the same role as an Element instance from the point of view of the\n  API consumer. Inserting and removing logical elements updates the browser DOM just the same.\n\n  The difference is that, unlike regular DOM mutation APIs, the LogicalElement APIs don't use\n  the underlying DOM structure as the data storage for the element hierarchy. Instead, the\n  LogicalElement APIs take care of tracking hierarchical relationships separately. The point\n  of this is to permit a logical tree structure in which parent/child relationships don't\n  have to be materialized in terms of DOM element parent/child relationships. And the reason\n  why we want that is so that hierarchies of Razor components can be tracked even when those\n  components' render output need not be a single literal DOM element.\n\n  Consumers of the API don't need to know about the implementation, but how it's done is:\n  - Each LogicalElement is materialized in the DOM as either:\n    - A Node instance, for actual Node instances inserted using 'insertLogicalChild' or\n      for Element instances promoted to LogicalElement via 'toLogicalElement'\n    - A Comment instance, for 'logical container' instances inserted using 'createAndInsertLogicalContainer'\n  - Then, on that instance (i.e., the Node or Comment), we store an array of 'logical children'\n    instances, e.g.,\n      [firstChild, secondChild, thirdChild, ...]\n    ... plus we store a reference to the 'logical parent' (if any)\n  - The 'logical children' array means we can look up in O(1):\n    - The number of logical children (not currently implemented because not required, but trivial)\n    - The logical child at any given index\n  - Whenever a logical child is added or removed, we update the parent's array of logical children\n*/\n\nconst logicalChildrenPropname = createSymbolOrFallback('_blazorLogicalChildren');\nconst logicalParentPropname = createSymbolOrFallback('_blazorLogicalParent');\nconst logicalEndSiblingPropname = createSymbolOrFallback('_blazorLogicalEnd');\n\nexport function toLogicalRootCommentElement(start: Comment, end: Comment): LogicalElement {\n  // Now that we support start/end comments as component delimiters we are going to be setting up\n  // adding the components rendered output as siblings of the start/end tags (between).\n  // For that to work, we need to appropriately configure the parent element to be a logical element\n  // with all their children being the child elements.\n  // For example, imagine you have\n  // <app>\n  // <div><p>Static content</p></div>\n  // <!-- start component\n  // <!-- end component\n  // <footer>Some other content</footer>\n  // <app>\n  // We want the parent element to be something like\n  // *app\n  // |- *div\n  // |- *component\n  // |- *footer\n  if (!start.parentNode) {\n    throw new Error(`Comment not connected to the DOM ${start.textContent}`);\n  }\n\n  const parent = start.parentNode;\n  const parentLogicalElement = toLogicalElement(parent, /* allow existing contents */ true);\n  const children = getLogicalChildrenArray(parentLogicalElement);\n  Array.from(parent.childNodes).forEach(n => children.push(n as unknown as LogicalElement));\n\n  start[logicalParentPropname] = parentLogicalElement;\n  // We might not have an end comment in the case of non-prerendered components.\n  if (end) {\n    start[logicalEndSiblingPropname] = end;\n    toLogicalElement(end);\n  }\n  return toLogicalElement(start);\n}\n\nexport function toLogicalElement(element: Node, allowExistingContents?: boolean): LogicalElement {\n  // Normally it's good to assert that the element has started empty, because that's the usual\n  // situation and we probably have a bug if it's not. But for the element that contain prerendered\n  // root components, we want to let them keep their content until we replace it.\n  if (element.childNodes.length > 0 && !allowExistingContents) {\n    throw new Error('New logical elements must start empty, or allowExistingContents must be true');\n  }\n\n  if (!(logicalChildrenPropname in element)) { // If it's already a logical element, leave it alone\n    element[logicalChildrenPropname] = [];\n  }\n\n  return element as unknown as LogicalElement;\n}\n\nexport function emptyLogicalElement(element: LogicalElement): void {\n  const childrenArray = getLogicalChildrenArray(element);\n  while (childrenArray.length) {\n    removeLogicalChild(element, 0);\n  }\n}\n\nexport function createAndInsertLogicalContainer(parent: LogicalElement, childIndex: number): LogicalElement {\n  const containerElement = document.createComment('!');\n  insertLogicalChild(containerElement, parent, childIndex);\n  return containerElement as unknown as LogicalElement;\n}\n\nexport function insertLogicalChild(child: Node, parent: LogicalElement, childIndex: number): void {\n  const childAsLogicalElement = child as unknown as LogicalElement;\n  if (child instanceof Comment) {\n    const existingGrandchildren = getLogicalChildrenArray(childAsLogicalElement);\n    if (existingGrandchildren && getLogicalChildrenArray(childAsLogicalElement).length > 0) {\n      // There's nothing to stop us implementing support for this scenario, and it's not difficult\n      // (after inserting 'child' itself, also iterate through its logical children and physically\n      // put them as following-siblings in the DOM). However there's no scenario that requires it\n      // presently, so if we did implement it there'd be no good way to have tests for it.\n      throw new Error('Not implemented: inserting non-empty logical container');\n    }\n  }\n\n  if (getLogicalParent(childAsLogicalElement)) {\n    // Likewise, we could easily support this scenario too (in this 'if' block, just splice\n    // out 'child' from the logical children array of its previous logical parent by using\n    // Array.prototype.indexOf to determine its previous sibling index).\n    // But again, since there's not currently any scenario that would use it, we would not\n    // have any test coverage for such an implementation.\n    throw new Error('Not implemented: moving existing logical children');\n  }\n\n  const newSiblings = getLogicalChildrenArray(parent);\n  if (childIndex < newSiblings.length) {\n    // Insert\n    const nextSibling = newSiblings[childIndex] as any as Node;\n    nextSibling.parentNode!.insertBefore(child, nextSibling);\n    newSiblings.splice(childIndex, 0, childAsLogicalElement);\n  } else {\n    // Append\n    appendDomNode(child, parent);\n    newSiblings.push(childAsLogicalElement);\n  }\n\n  childAsLogicalElement[logicalParentPropname] = parent;\n  if (!(logicalChildrenPropname in childAsLogicalElement)) {\n    childAsLogicalElement[logicalChildrenPropname] = [];\n  }\n}\n\nexport function removeLogicalChild(parent: LogicalElement, childIndex: number): void {\n  const childrenArray = getLogicalChildrenArray(parent);\n  const childToRemove = childrenArray.splice(childIndex, 1)[0];\n\n  // If it's a logical container, also remove its descendants\n  if (childToRemove instanceof Comment) {\n    const grandchildrenArray = getLogicalChildrenArray(childToRemove);\n    if (grandchildrenArray) {\n      while (grandchildrenArray.length > 0) {\n        removeLogicalChild(childToRemove, 0);\n      }\n    }\n  }\n\n  // Finally, remove the node itself\n  const domNodeToRemove = childToRemove as any as Node;\n  domNodeToRemove.parentNode!.removeChild(domNodeToRemove);\n}\n\nexport function getLogicalParent(element: LogicalElement): LogicalElement | null {\n  return (element[logicalParentPropname] as LogicalElement) || null;\n}\n\nexport function getLogicalSiblingEnd(element: LogicalElement): LogicalElement | null {\n  return (element[logicalEndSiblingPropname] as LogicalElement) || null;\n}\n\nexport function getLogicalChild(parent: LogicalElement, childIndex: number): LogicalElement {\n  return getLogicalChildrenArray(parent)[childIndex];\n}\n\n// SVG elements support `foreignObject` children that can hold arbitrary HTML.\n// For these scenarios, the parent SVG and `foreignObject` elements should\n// be rendered under the SVG namespace, while the HTML content should be rendered\n// under the XHTML namespace. If the correct namespaces are not provided, most\n// browsers will fail to render the foreign object content. Here, we ensure that if\n// we encounter a `foreignObject` in the SVG, then all its children will be placed\n// under the XHTML namespace.\nexport function isSvgElement(element: LogicalElement): boolean {\n  // Note: This check is intentionally case-sensitive since we expect this element\n  // to appear as a child of an SVG element and SVGs are case-sensitive.\n  const closestElement = getClosestDomElement(element) as any;\n  return closestElement.namespaceURI === 'http://www.w3.org/2000/svg' && closestElement['tagName'] !== 'foreignObject';\n}\n\nexport function getLogicalChildrenArray(element: LogicalElement): LogicalElement[] {\n  return element[logicalChildrenPropname] as LogicalElement[];\n}\n\nexport function permuteLogicalChildren(parent: LogicalElement, permutationList: PermutationListEntry[]): void {\n  // The permutationList must represent a valid permutation, i.e., the list of 'from' indices\n  // is distinct, and the list of 'to' indices is a permutation of it. The algorithm here\n  // relies on that assumption.\n\n  // Each of the phases here has to happen separately, because each one is designed not to\n  // interfere with the indices or DOM entries used by subsequent phases.\n\n  // Phase 1: track which nodes we will move\n  const siblings = getLogicalChildrenArray(parent);\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\n    listEntry.moveRangeStart = siblings[listEntry.fromSiblingIndex];\n    listEntry.moveRangeEnd = findLastDomNodeInRange(listEntry.moveRangeStart);\n  });\n\n  // Phase 2: insert markers\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\n    const marker = document.createComment('marker');\n    listEntry.moveToBeforeMarker = marker;\n    const insertBeforeNode = siblings[listEntry.toSiblingIndex + 1] as any as Node;\n    if (insertBeforeNode) {\n      insertBeforeNode.parentNode!.insertBefore(marker, insertBeforeNode);\n    } else {\n      appendDomNode(marker, parent);\n    }\n  });\n\n  // Phase 3: move descendants & remove markers\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\n    const insertBefore = listEntry.moveToBeforeMarker!;\n    const parentDomNode = insertBefore.parentNode!;\n    const elementToMove = listEntry.moveRangeStart!;\n    const moveEndNode = listEntry.moveRangeEnd!;\n    let nextToMove = elementToMove as unknown as Node | null;\n    while (nextToMove) {\n      const nextNext = nextToMove.nextSibling;\n      parentDomNode.insertBefore(nextToMove, insertBefore);\n\n      if (nextToMove === moveEndNode) {\n        break;\n      } else {\n        nextToMove = nextNext;\n      }\n    }\n\n    parentDomNode.removeChild(insertBefore);\n  });\n\n  // Phase 4: update siblings index\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\n    siblings[listEntry.toSiblingIndex] = listEntry.moveRangeStart!;\n  });\n}\n\nexport function getClosestDomElement(logicalElement: LogicalElement): Element | (LogicalElement & DocumentFragment) {\n  if (logicalElement instanceof Element || logicalElement instanceof DocumentFragment) {\n    return logicalElement;\n  } else if (logicalElement instanceof Comment) {\n    return logicalElement.parentNode! as Element;\n  } else {\n    throw new Error('Not a valid logical element');\n  }\n}\n\nexport interface PermutationListEntry {\n  fromSiblingIndex: number,\n  toSiblingIndex: number,\n}\n\ninterface PermutationListEntryWithTrackingData extends PermutationListEntry {\n  // These extra properties are used internally when processing the permutation list\n  moveRangeStart?: LogicalElement,\n  moveRangeEnd?: Node,\n  moveToBeforeMarker?: Node,\n}\n\nfunction getLogicalNextSibling(element: LogicalElement): LogicalElement | null {\n  const siblings = getLogicalChildrenArray(getLogicalParent(element)!);\n  const siblingIndex = Array.prototype.indexOf.call(siblings, element);\n  return siblings[siblingIndex + 1] || null;\n}\n\nfunction appendDomNode(child: Node, parent: LogicalElement) {\n  // This function only puts 'child' into the DOM in the right place relative to 'parent'\n  // It does not update the logical children array of anything\n  if (parent instanceof Element || parent instanceof DocumentFragment) {\n    parent.appendChild(child);\n  } else if (parent instanceof Comment) {\n    const parentLogicalNextSibling = getLogicalNextSibling(parent) as any as Node;\n    if (parentLogicalNextSibling) {\n      // Since the parent has a logical next-sibling, its appended child goes right before that\n      parentLogicalNextSibling.parentNode!.insertBefore(child, parentLogicalNextSibling);\n    } else {\n      // Since the parent has no logical next-sibling, keep recursing upwards until we find\n      // a logical ancestor that does have a next-sibling or is a physical element.\n      appendDomNode(child, getLogicalParent(parent)!);\n    }\n  } else {\n    // Should never happen\n    throw new Error(`Cannot append node because the parent is not a valid logical element. Parent: ${parent}`);\n  }\n}\n\n// Returns the final node (in depth-first evaluation order) that is a descendant of the logical element.\n// As such, the entire subtree is between 'element' and 'findLastDomNodeInRange(element)' inclusive.\nfunction findLastDomNodeInRange(element: LogicalElement) {\n  if (element instanceof Element || element instanceof DocumentFragment) {\n    return element;\n  }\n\n  const nextSibling = getLogicalNextSibling(element);\n  if (nextSibling) {\n    // Simple case: not the last logical sibling, so take the node before the next sibling\n    return (nextSibling as any as Node).previousSibling;\n  } else {\n    // Harder case: there's no logical next-sibling, so recurse upwards until we find\n    // a logical ancestor that does have one, or a physical element\n    const logicalParent = getLogicalParent(element)!;\n    return logicalParent instanceof Element || logicalParent instanceof DocumentFragment\n      ? logicalParent.lastChild\n      : findLastDomNodeInRange(logicalParent);\n  }\n}\n\nfunction createSymbolOrFallback(fallback: string): symbol | string {\n  return typeof Symbol === 'function' ? Symbol() : fallback;\n}\n\n// Nominal type to represent a logical element without needing to allocate any object for instances\nexport interface LogicalElement { LogicalElement__DO_NOT_IMPLEMENT: any }\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { DotNet } from '@microsoft/dotnet-js-interop';\n\nexport function applyCaptureIdToElement(element: Element, referenceCaptureId: string): void {\n  element.setAttribute(getCaptureIdAttributeName(referenceCaptureId), '');\n}\n\nfunction getElementByCaptureId(referenceCaptureId: string) {\n  const selector = `[${getCaptureIdAttributeName(referenceCaptureId)}]`;\n  return document.querySelector(selector);\n}\n\nfunction getCaptureIdAttributeName(referenceCaptureId: string) {\n  return `_bl_${referenceCaptureId}`;\n}\n\n// Support receiving ElementRef instances as args in interop calls\nconst elementRefKey = '__internalId'; // Keep in sync with ElementRef.cs\nDotNet.attachReviver((key, value) => {\n  if (value && typeof value === 'object' && Object.prototype.hasOwnProperty.call(value, elementRefKey) && typeof value[elementRefKey] === 'string') {\n    return getElementByCaptureId(value[elementRefKey]);\n  } else {\n    return value;\n  }\n});\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { RenderBatch, ArrayBuilderSegment, RenderTreeEdit, RenderTreeFrame, EditType, FrameType, ArrayValues } from './RenderBatch/RenderBatch';\nimport { EventDelegator } from './Events/EventDelegator';\nimport { LogicalElement, PermutationListEntry, toLogicalElement, insertLogicalChild, removeLogicalChild, getLogicalParent, getLogicalChild, createAndInsertLogicalContainer, isSvgElement, getLogicalChildrenArray, getLogicalSiblingEnd, permuteLogicalChildren, getClosestDomElement, emptyLogicalElement } from './LogicalElements';\nimport { applyCaptureIdToElement } from './ElementReferenceCapture';\nimport { attachToEventDelegator as attachNavigationManagerToEventDelegator } from '../Services/NavigationManager';\nconst deferredValuePropname = '_blazorDeferredValue';\nconst sharedTemplateElemForParsing = document.createElement('template');\nconst sharedSvgElemForParsing = document.createElementNS('http://www.w3.org/2000/svg', 'g');\nconst elementsToClearOnRootComponentRender: { [componentId: number]: LogicalElement } = {};\nconst internalAttributeNamePrefix = '__internal_';\nconst eventPreventDefaultAttributeNamePrefix = 'preventDefault_';\nconst eventStopPropagationAttributeNamePrefix = 'stopPropagation_';\n\nexport class BrowserRenderer {\n  public eventDelegator: EventDelegator;\n\n  private rootComponentIds = new Set<number>();\n\n  private childComponentLocations: { [componentId: number]: LogicalElement } = {};\n\n  public constructor(browserRendererId: number) {\n    this.eventDelegator = new EventDelegator(browserRendererId);\n\n    // We don't yet know whether or not navigation interception will be enabled, but in case it will be,\n    // we wire up the navigation manager to the event delegator so it has the option to participate\n    // in the synthetic event bubbling process later\n    attachNavigationManagerToEventDelegator(this.eventDelegator);\n  }\n\n  public attachRootComponentToLogicalElement(componentId: number, element: LogicalElement, appendContent: boolean): void {\n    this.attachComponentToElement(componentId, element);\n    this.rootComponentIds.add(componentId);\n\n    // If we want to preserve existing HTML content of the root element, we don't apply the mechanism for\n    // clearing existing children. Rendered content will then append rather than replace the existing HTML content.\n    if (!appendContent) {\n      elementsToClearOnRootComponentRender[componentId] = element;\n    }\n  }\n\n  public updateComponent(batch: RenderBatch, componentId: number, edits: ArrayBuilderSegment<RenderTreeEdit>, referenceFrames: ArrayValues<RenderTreeFrame>): void {\n    const element = this.childComponentLocations[componentId];\n    if (!element) {\n      throw new Error(`No element is currently associated with component ${componentId}`);\n    }\n\n    // On the first render for each root component, clear any existing content (e.g., prerendered)\n    const rootElementToClear = elementsToClearOnRootComponentRender[componentId];\n    if (rootElementToClear) {\n      const rootElementToClearEnd = getLogicalSiblingEnd(rootElementToClear);\n      delete elementsToClearOnRootComponentRender[componentId];\n\n      if (!rootElementToClearEnd) {\n        clearElement(rootElementToClear as unknown as Element);\n      } else {\n        clearBetween(rootElementToClear as unknown as Node, rootElementToClearEnd as unknown as Comment);\n      }\n    }\n\n    const ownerDocument = getClosestDomElement(element)?.getRootNode() as Document;\n    const activeElementBefore = ownerDocument && ownerDocument.activeElement;\n\n    this.applyEdits(batch, componentId, element, 0, edits, referenceFrames);\n\n    // Try to restore focus in case it was lost due to an element move\n    if ((activeElementBefore instanceof HTMLElement) && ownerDocument && ownerDocument.activeElement !== activeElementBefore) {\n      activeElementBefore.focus();\n    }\n  }\n\n  public disposeComponent(componentId: number): void {\n    if (this.rootComponentIds.delete(componentId)) {\n      // When disposing a root component, the container element won't be removed from the DOM (because there's\n      // no parent to remove that child), so we empty it to restore it to the state it was in before the root\n      // component was added.\n      emptyLogicalElement(this.childComponentLocations[componentId]);\n    }\n\n    delete this.childComponentLocations[componentId];\n  }\n\n  public disposeEventHandler(eventHandlerId: number): void {\n    this.eventDelegator.removeListener(eventHandlerId);\n  }\n\n  private attachComponentToElement(componentId: number, element: LogicalElement) {\n    this.childComponentLocations[componentId] = element;\n  }\n\n  private applyEdits(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, edits: ArrayBuilderSegment<RenderTreeEdit>, referenceFrames: ArrayValues<RenderTreeFrame>) {\n    let currentDepth = 0;\n    let childIndexAtCurrentDepth = childIndex;\n    let permutationList: PermutationListEntry[] | undefined;\n\n    const arrayBuilderSegmentReader = batch.arrayBuilderSegmentReader;\n    const editReader = batch.editReader;\n    const frameReader = batch.frameReader;\n    const editsValues = arrayBuilderSegmentReader.values(edits);\n    const editsOffset = arrayBuilderSegmentReader.offset(edits);\n    const editsLength = arrayBuilderSegmentReader.count(edits);\n    const maxEditIndexExcl = editsOffset + editsLength;\n\n    for (let editIndex = editsOffset; editIndex < maxEditIndexExcl; editIndex++) {\n      const edit = batch.diffReader.editsEntry(editsValues, editIndex);\n      const editType = editReader.editType(edit);\n      switch (editType) {\n        case EditType.prependFrame: {\n          const frameIndex = editReader.newTreeIndex(edit);\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\n          const siblingIndex = editReader.siblingIndex(edit);\n          this.insertFrame(batch, componentId, parent, childIndexAtCurrentDepth + siblingIndex, referenceFrames, frame, frameIndex);\n          break;\n        }\n        case EditType.removeFrame: {\n          const siblingIndex = editReader.siblingIndex(edit);\n          removeLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          break;\n        }\n        case EditType.setAttribute: {\n          const frameIndex = editReader.newTreeIndex(edit);\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\n          const siblingIndex = editReader.siblingIndex(edit);\n          const element = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          if (element instanceof Element) {\n            this.applyAttribute(batch, componentId, element, frame);\n          } else {\n            throw new Error('Cannot set attribute on non-element child');\n          }\n          break;\n        }\n        case EditType.removeAttribute: {\n          // Note that we don't have to dispose the info we track about event handlers here, because the\n          // disposed event handler IDs are delivered separately (in the 'disposedEventHandlerIds' array)\n          const siblingIndex = editReader.siblingIndex(edit);\n          const element = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          if (element instanceof Element) {\n            const attributeName = editReader.removedAttributeName(edit)!;\n            // First try to remove any special property we use for this attribute\n            if (!this.tryApplySpecialProperty(batch, element, attributeName, null)) {\n              // If that's not applicable, it's a regular DOM attribute so remove that\n              element.removeAttribute(attributeName);\n            }\n          } else {\n            throw new Error('Cannot remove attribute from non-element child');\n          }\n          break;\n        }\n        case EditType.updateText: {\n          const frameIndex = editReader.newTreeIndex(edit);\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\n          const siblingIndex = editReader.siblingIndex(edit);\n          const textNode = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          if (textNode instanceof Text) {\n            textNode.textContent = frameReader.textContent(frame);\n          } else {\n            throw new Error('Cannot set text content on non-text child');\n          }\n          break;\n        }\n        case EditType.updateMarkup: {\n          const frameIndex = editReader.newTreeIndex(edit);\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\n          const siblingIndex = editReader.siblingIndex(edit);\n          removeLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          this.insertMarkup(batch, parent, childIndexAtCurrentDepth + siblingIndex, frame);\n          break;\n        }\n        case EditType.stepIn: {\n          const siblingIndex = editReader.siblingIndex(edit);\n          parent = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          currentDepth++;\n          childIndexAtCurrentDepth = 0;\n          break;\n        }\n        case EditType.stepOut: {\n          parent = getLogicalParent(parent)!;\n          currentDepth--;\n          childIndexAtCurrentDepth = currentDepth === 0 ? childIndex : 0; // The childIndex is only ever nonzero at zero depth\n          break;\n        }\n        case EditType.permutationListEntry: {\n          permutationList = permutationList || [];\n          permutationList.push({\n            fromSiblingIndex: childIndexAtCurrentDepth + editReader.siblingIndex(edit),\n            toSiblingIndex: childIndexAtCurrentDepth + editReader.moveToSiblingIndex(edit),\n          });\n          break;\n        }\n        case EditType.permutationListEnd: {\n          permuteLogicalChildren(parent, permutationList!);\n          permutationList = undefined;\n          break;\n        }\n        default: {\n          const unknownType: never = editType; // Compile-time verification that the switch was exhaustive\n          throw new Error(`Unknown edit type: ${unknownType}`);\n        }\n      }\n    }\n  }\n\n  private insertFrame(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, frames: ArrayValues<RenderTreeFrame>, frame: RenderTreeFrame, frameIndex: number): number {\n    const frameReader = batch.frameReader;\n    const frameType = frameReader.frameType(frame);\n    switch (frameType) {\n      case FrameType.element:\n        this.insertElement(batch, componentId, parent, childIndex, frames, frame, frameIndex);\n        return 1;\n      case FrameType.text:\n        this.insertText(batch, parent, childIndex, frame);\n        return 1;\n      case FrameType.attribute:\n        throw new Error('Attribute frames should only be present as leading children of element frames.');\n      case FrameType.component:\n        this.insertComponent(batch, parent, childIndex, frame);\n        return 1;\n      case FrameType.region:\n        return this.insertFrameRange(batch, componentId, parent, childIndex, frames, frameIndex + 1, frameIndex + frameReader.subtreeLength(frame));\n      case FrameType.elementReferenceCapture:\n        if (parent instanceof Element) {\n          applyCaptureIdToElement(parent, frameReader.elementReferenceCaptureId(frame)!);\n          return 0; // A \"capture\" is a child in the diff, but has no node in the DOM\n        } else {\n          throw new Error('Reference capture frames can only be children of element frames.');\n        }\n      case FrameType.markup:\n        this.insertMarkup(batch, parent, childIndex, frame);\n        return 1;\n      default: {\n        const unknownType: never = frameType; // Compile-time verification that the switch was exhaustive\n        throw new Error(`Unknown frame type: ${unknownType}`);\n      }\n    }\n  }\n\n  private insertElement(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, frames: ArrayValues<RenderTreeFrame>, frame: RenderTreeFrame, frameIndex: number) {\n    const frameReader = batch.frameReader;\n    const tagName = frameReader.elementName(frame)!;\n\n    const newDomElementRaw = (tagName === 'svg' || isSvgElement(parent)) ?\n      document.createElementNS('http://www.w3.org/2000/svg', tagName) :\n      document.createElement(tagName);\n    const newElement = toLogicalElement(newDomElementRaw);\n\n    let inserted = false;\n\n    // Apply attributes\n    const descendantsEndIndexExcl = frameIndex + frameReader.subtreeLength(frame);\n    for (let descendantIndex = frameIndex + 1; descendantIndex < descendantsEndIndexExcl; descendantIndex++) {\n      const descendantFrame = batch.referenceFramesEntry(frames, descendantIndex);\n      if (frameReader.frameType(descendantFrame) === FrameType.attribute) {\n        this.applyAttribute(batch, componentId, newDomElementRaw, descendantFrame);\n      } else {\n        insertLogicalChild(newDomElementRaw, parent, childIndex);\n        inserted = true;\n        // As soon as we see a non-attribute child, all the subsequent child frames are\n        // not attributes, so bail out and insert the remnants recursively\n        this.insertFrameRange(batch, componentId, newElement, 0, frames, descendantIndex, descendantsEndIndexExcl);\n        break;\n      }\n    }\n\n    // this element did not have any children, so it's not inserted yet.\n    if (!inserted) {\n      insertLogicalChild(newDomElementRaw, parent, childIndex);\n    }\n\n    // We handle setting 'value' on a <select> in three different ways:\n    // [1] When inserting a corresponding <option>, in case you're dynamically adding options.\n    //     This is the case below.\n    // [2] After we finish inserting the <select>, in case the descendant options are being\n    //     added as an opaque markup block rather than individually. This is the other case below.\n    // [3] In case the the value of the select and the option value is changed in the same batch.\n    //     We just receive an attribute frame and have to set the select value afterwards.\n\n    // We also defer setting the 'value' property for <input> because certain types of inputs have\n    // default attribute values that may incorrectly constain the specified 'value'.\n    // For example, range inputs have default 'min' and 'max' attributes that may incorrectly\n    // clamp the 'value' property if it is applied before custom 'min' and 'max' attributes.\n\n    if (newDomElementRaw instanceof HTMLOptionElement) {\n      // Situation 1\n      this.trySetSelectValueFromOptionElement(newDomElementRaw);\n    } else if (deferredValuePropname in newDomElementRaw) {\n      // Situation 2\n      setDeferredElementValue(newDomElementRaw, newDomElementRaw[deferredValuePropname]);\n    }\n  }\n\n  private trySetSelectValueFromOptionElement(optionElement: HTMLOptionElement) {\n    const selectElem = this.findClosestAncestorSelectElement(optionElement);\n\n    if (!isBlazorSelectElement(selectElem)) {\n      return false;\n    }\n\n    if (isMultipleSelectElement(selectElem)) {\n      optionElement.selected = selectElem._blazorDeferredValue!.indexOf(optionElement.value) !== -1;\n    } else {\n      if (selectElem._blazorDeferredValue !== optionElement.value) {\n        return false;\n      }\n\n      setSingleSelectElementValue(selectElem, optionElement.value);\n      delete selectElem._blazorDeferredValue;\n    }\n\n    return true;\n\n    function isBlazorSelectElement(selectElem: HTMLSelectElement | null) : selectElem is BlazorHtmlSelectElement {\n      return !!selectElem && (deferredValuePropname in selectElem);\n    }\n  }\n\n  private insertComponent(batch: RenderBatch, parent: LogicalElement, childIndex: number, frame: RenderTreeFrame) {\n    const containerElement = createAndInsertLogicalContainer(parent, childIndex);\n\n    // All we have to do is associate the child component ID with its location. We don't actually\n    // do any rendering here, because the diff for the child will appear later in the render batch.\n    const childComponentId = batch.frameReader.componentId(frame);\n    this.attachComponentToElement(childComponentId, containerElement);\n  }\n\n  private insertText(batch: RenderBatch, parent: LogicalElement, childIndex: number, textFrame: RenderTreeFrame) {\n    const textContent = batch.frameReader.textContent(textFrame)!;\n    const newTextNode = document.createTextNode(textContent);\n    insertLogicalChild(newTextNode, parent, childIndex);\n  }\n\n  private insertMarkup(batch: RenderBatch, parent: LogicalElement, childIndex: number, markupFrame: RenderTreeFrame) {\n    const markupContainer = createAndInsertLogicalContainer(parent, childIndex);\n\n    const markupContent = batch.frameReader.markupContent(markupFrame);\n    const parsedMarkup = parseMarkup(markupContent, isSvgElement(parent));\n    let logicalSiblingIndex = 0;\n    while (parsedMarkup.firstChild) {\n      insertLogicalChild(parsedMarkup.firstChild, markupContainer, logicalSiblingIndex++);\n    }\n  }\n\n  private applyAttribute(batch: RenderBatch, componentId: number, toDomElement: Element, attributeFrame: RenderTreeFrame) {\n    const frameReader = batch.frameReader;\n    const attributeName = frameReader.attributeName(attributeFrame)!;\n    const eventHandlerId = frameReader.attributeEventHandlerId(attributeFrame);\n\n    if (eventHandlerId) {\n      const eventName = stripOnPrefix(attributeName);\n      this.eventDelegator.setListener(toDomElement, eventName, eventHandlerId, componentId);\n      return;\n    }\n\n    // First see if we have special handling for this attribute\n    if (!this.tryApplySpecialProperty(batch, toDomElement, attributeName, attributeFrame)) {\n      // If not, treat it as a regular string-valued attribute\n      toDomElement.setAttribute(\n        attributeName,\n        frameReader.attributeValue(attributeFrame)!\n      );\n    }\n  }\n\n  private tryApplySpecialProperty(batch: RenderBatch, element: Element, attributeName: string, attributeFrame: RenderTreeFrame | null) {\n    switch (attributeName) {\n      case 'value':\n        return this.tryApplyValueProperty(batch, element, attributeFrame);\n      case 'checked':\n        return this.tryApplyCheckedProperty(batch, element, attributeFrame);\n      default: {\n        if (attributeName.startsWith(internalAttributeNamePrefix)) {\n          this.applyInternalAttribute(batch, element, attributeName.substring(internalAttributeNamePrefix.length), attributeFrame);\n          return true;\n        }\n        return false;\n      }\n    }\n  }\n\n  private applyInternalAttribute(batch: RenderBatch, element: Element, internalAttributeName: string, attributeFrame: RenderTreeFrame | null) {\n    const attributeValue = attributeFrame ? batch.frameReader.attributeValue(attributeFrame) : null;\n\n    if (internalAttributeName.startsWith(eventStopPropagationAttributeNamePrefix)) {\n      // Stop propagation\n      const eventName = stripOnPrefix(internalAttributeName.substring(eventStopPropagationAttributeNamePrefix.length));\n      this.eventDelegator.setStopPropagation(element, eventName, attributeValue !== null);\n    } else if (internalAttributeName.startsWith(eventPreventDefaultAttributeNamePrefix)) {\n      // Prevent default\n      const eventName = stripOnPrefix(internalAttributeName.substring(eventPreventDefaultAttributeNamePrefix.length));\n      this.eventDelegator.setPreventDefault(element, eventName, attributeValue !== null);\n    } else {\n      // The prefix makes this attribute name reserved, so any other usage is disallowed\n      throw new Error(`Unsupported internal attribute '${internalAttributeName}'`);\n    }\n  }\n\n  private tryApplyValueProperty(batch: RenderBatch, element: Element, attributeFrame: RenderTreeFrame | null): boolean {\n    // Certain elements have built-in behaviour for their 'value' property\n    const frameReader = batch.frameReader;\n\n    let value = attributeFrame ? frameReader.attributeValue(attributeFrame) : null;\n\n    if (value && element.tagName === 'INPUT') {\n      value = normalizeInputValue(value, element);\n    }\n\n    switch (element.tagName) {\n      case 'INPUT':\n      case 'SELECT':\n      case 'TEXTAREA': {\n        // <select> is special, in that anything we write to .value will be lost if there\n        // isn't yet a matching <option>. To maintain the expected behavior no matter the\n        // element insertion/update order, preserve the desired value separately so\n        // we can recover it when inserting any matching <option> or after inserting an\n        // entire markup block of descendants.\n\n        // We also defer setting the 'value' property for <input> because certain types of inputs have\n        // default attribute values that may incorrectly constain the specified 'value'.\n        // For example, range inputs have default 'min' and 'max' attributes that may incorrectly\n        // clamp the 'value' property if it is applied before custom 'min' and 'max' attributes.\n\n        if (value && element instanceof HTMLSelectElement && isMultipleSelectElement(element)) {\n          value = JSON.parse(value);\n        }\n\n        setDeferredElementValue(element, value);\n        element[deferredValuePropname] = value;\n\n        return true;\n      }\n      case 'OPTION': {\n        if (value || value === '') {\n          element.setAttribute('value', value);\n        } else {\n          element.removeAttribute('value');\n        }\n\n        // See above for why we have this special handling for <select>/<option>\n        // Situation 3\n        this.trySetSelectValueFromOptionElement(<HTMLOptionElement>element);\n        return true;\n      }\n      default:\n        return false;\n    }\n  }\n\n  private tryApplyCheckedProperty(batch: RenderBatch, element: Element, attributeFrame: RenderTreeFrame | null) {\n    // Certain elements have built-in behaviour for their 'checked' property\n    if (element.tagName === 'INPUT') {\n      const value = attributeFrame ? batch.frameReader.attributeValue(attributeFrame) : null;\n      (element as any).checked = value !== null;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private findClosestAncestorSelectElement(element: Element | null) {\n    while (element) {\n      if (element instanceof HTMLSelectElement) {\n        return element;\n      } else {\n        element = element.parentElement;\n      }\n    }\n\n    return null;\n  }\n\n  private insertFrameRange(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, frames: ArrayValues<RenderTreeFrame>, startIndex: number, endIndexExcl: number): number {\n    const origChildIndex = childIndex;\n    for (let index = startIndex; index < endIndexExcl; index++) {\n      const frame = batch.referenceFramesEntry(frames, index);\n      const numChildrenInserted = this.insertFrame(batch, componentId, parent, childIndex, frames, frame, index);\n      childIndex += numChildrenInserted;\n\n      // Skip over any descendants, since they are already dealt with recursively\n      index += countDescendantFrames(batch, frame);\n    }\n\n    return (childIndex - origChildIndex); // Total number of children inserted\n  }\n}\n\nexport interface ComponentDescriptor {\n  start: Node;\n  end: Node;\n}\n\nfunction parseMarkup(markup: string, isSvg: boolean) {\n  if (isSvg) {\n    sharedSvgElemForParsing.innerHTML = markup || ' ';\n    return sharedSvgElemForParsing;\n  } else {\n    sharedTemplateElemForParsing.innerHTML = markup || ' ';\n    return sharedTemplateElemForParsing.content;\n  }\n}\n\nfunction normalizeInputValue(value: string, element: Element): string {\n  // Time inputs (e.g. 'time' and 'datetime-local') misbehave on chromium-based\n  // browsers when a time is set that includes a seconds value of '00', most notably\n  // when entered from keyboard input. This behavior is not limited to specific\n  // 'step' attribute values, so we always remove the trailing seconds value if the\n  // time ends in '00'.\n  // Similarly, if a time-related element doesn't have any 'step' attribute, browsers\n  // treat this as \"round to whole number of minutes\" making it invalid to pass any\n  // 'seconds' value, so in that case we strip off the 'seconds' part of the value.\n\n  switch (element.getAttribute('type')) {\n    case 'time':\n      return value.length === 8 && (value.endsWith('00') || !element.hasAttribute('step'))\n        ? value.substring(0, 5)\n        : value;\n    case 'datetime-local':\n      return value.length === 19 && (value.endsWith('00') || !element.hasAttribute('step'))\n        ? value.substring(0, 16)\n        : value;\n    default:\n      return value;\n  }\n}\n\nfunction countDescendantFrames(batch: RenderBatch, frame: RenderTreeFrame): number {\n  const frameReader = batch.frameReader;\n  switch (frameReader.frameType(frame)) {\n    // The following frame types have a subtree length. Other frames may use that memory slot\n    // to mean something else, so we must not read it. We should consider having nominal subtypes\n    // of RenderTreeFramePointer that prevent access to non-applicable fields.\n    case FrameType.component:\n    case FrameType.element:\n    case FrameType.region:\n      return frameReader.subtreeLength(frame) - 1;\n    default:\n      return 0;\n  }\n}\n\nfunction clearElement(element: Element) {\n  let childNode: Node | null;\n  while ((childNode = element.firstChild)) {\n    element.removeChild(childNode);\n  }\n}\n\nfunction clearBetween(start: Node, end: Node): void {\n  const logicalParent = getLogicalParent(start as unknown as LogicalElement);\n  if (!logicalParent) {\n    throw new Error(\"Can't clear between nodes. The start node does not have a logical parent.\");\n  }\n  const children = getLogicalChildrenArray(logicalParent);\n  const removeStart = children.indexOf(start as unknown as LogicalElement) + 1;\n  const endIndex = children.indexOf(end as unknown as LogicalElement);\n\n  // We remove the end component comment from the DOM as we don't need it after this point.\n  for (let i = removeStart; i <= endIndex; i++) {\n    removeLogicalChild(logicalParent, removeStart);\n  }\n\n  // We sanitize the start comment by removing all the information from it now that we don't need it anymore\n  // as it adds noise to the DOM.\n  start.textContent = '!';\n}\n\nfunction stripOnPrefix(attributeName: string) {\n  if (attributeName.startsWith('on')) {\n    return attributeName.substring(2);\n  }\n\n  throw new Error(`Attribute should be an event name, but doesn't start with 'on'. Value: '${attributeName}'`);\n}\n\ntype BlazorHtmlSelectElement = HTMLSelectElement & { _blazorDeferredValue?: string };\n\nfunction isMultipleSelectElement(element: HTMLSelectElement) {\n  return element.type === 'select-multiple';\n}\n\nfunction setSingleSelectElementValue(element: HTMLSelectElement, value: string | null) {\n  // There's no sensible way to represent a select option with value 'null', because\n  // (1) HTML attributes can't have null values - the closest equivalent is absence of the attribute\n  // (2) When picking an <option> with no 'value' attribute, the browser treats the value as being the\n  //     *text content* on that <option> element. Trying to suppress that default behavior would involve\n  //     a long chain of special-case hacks, as well as being breaking vs 3.x.\n  // So, the most plausible 'null' equivalent is an empty string. It's unfortunate that people can't\n  // write <option value=@someNullVariable>, and that we can never distinguish between null and empty\n  // string in a bound <select>, but that's a limit in the representational power of HTML.\n  element.value = value || '';\n}\n\nfunction setMultipleSelectElementValue(element: HTMLSelectElement, value: string[] | null) {\n  value ||= [];\n  for (let i = 0; i < element.options.length; i++) {\n    element.options[i].selected = value.indexOf(element.options[i].value) !== -1;\n  }\n}\n\nfunction setDeferredElementValue(element: Element, value: any) {\n  if (element instanceof HTMLSelectElement) {\n    if (isMultipleSelectElement(element)) {\n      setMultipleSelectElementValue(element, value);\n    } else {\n      setSingleSelectElementValue(element, value);\n    }\n  } else {\n    (element as any).value = value;\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport '@microsoft/dotnet-js-interop';\nimport { resetScrollAfterNextBatch } from '../Rendering/Renderer';\nimport { EventDelegator } from '../Rendering/Events/EventDelegator';\n\nlet hasEnabledNavigationInterception = false;\nlet hasRegisteredNavigationEventListeners = false;\nlet hasLocationChangingEventListeners = false;\nlet currentHistoryIndex = 0;\nlet currentLocationChangingCallId = 0;\n\n// Will be initialized once someone registers\nlet notifyLocationChangedCallback: ((uri: string, state: string | undefined, intercepted: boolean) => Promise<void>) | null = null;\nlet notifyLocationChangingCallback: ((callId: number, uri: string, state: string | undefined, intercepted: boolean) => Promise<void>) | null = null;\n\nlet popStateCallback: ((state: PopStateEvent) => Promise<void> | void) = onBrowserInitiatedPopState;\nlet resolveCurrentNavigation: ((shouldContinueNavigation: boolean) => void) | null = null;\n\n// These are the functions we're making available for invocation from .NET\nexport const internalFunctions = {\n  listenForNavigationEvents,\n  enableNavigationInterception,\n  setHasLocationChangingListeners,\n  endLocationChanging,\n  navigateTo: navigateToFromDotNet,\n  getBaseURI: (): string => document.baseURI,\n  getLocationHref: (): string => location.href,\n  scrollToElement,\n};\n\nfunction listenForNavigationEvents(\n  locationChangedCallback: (uri: string, state: string | undefined, intercepted: boolean) => Promise<void>,\n  locationChangingCallback: (callId: number, uri: string, state: string | undefined, intercepted: boolean) => Promise<void>\n): void {\n  notifyLocationChangedCallback = locationChangedCallback;\n  notifyLocationChangingCallback = locationChangingCallback;\n\n  if (hasRegisteredNavigationEventListeners) {\n    return;\n  }\n\n  hasRegisteredNavigationEventListeners = true;\n  window.addEventListener('popstate', onPopState);\n  currentHistoryIndex = history.state?._index ?? 0;\n}\n\nfunction enableNavigationInterception(): void {\n  hasEnabledNavigationInterception = true;\n}\n\nfunction setHasLocationChangingListeners(hasListeners: boolean) {\n  hasLocationChangingEventListeners = hasListeners;\n}\n\nexport function scrollToElement(identifier: string): boolean {\n  const element = document.getElementById(identifier);\n\n  if (element) {\n    element.scrollIntoView();\n    return true;\n  }\n\n  return false;\n}\n\nexport function attachToEventDelegator(eventDelegator: EventDelegator): void {\n  // We need to respond to clicks on <a> elements *after* the EventDelegator has finished\n  // running its simulated bubbling process so that we can respect any preventDefault requests.\n  // So instead of registering our own native event, register using the EventDelegator.\n  eventDelegator.notifyAfterClick(event => {\n    if (!hasEnabledNavigationInterception) {\n      return;\n    }\n\n    if (event.button !== 0 || eventHasSpecialKey(event)) {\n      // Don't stop ctrl/meta-click (etc) from opening links in new tabs/windows\n      return;\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Intercept clicks on all <a> elements where the href is within the <base href> URI space\n    // We must explicitly check if it has an 'href' attribute, because if it doesn't, the result might be null or an empty string depending on the browser\n    const anchorTarget = findAnchorTarget(event);\n\n    if (anchorTarget && canProcessAnchor(anchorTarget)) {\n      const anchorHref = anchorTarget.getAttribute('href')!;\n\n      const absoluteHref = toAbsoluteUri(anchorHref);\n\n      if (isWithinBaseUriSpace(absoluteHref)) {\n        event.preventDefault();\n        performInternalNavigation(absoluteHref, /* interceptedLink */ true, /* replace */ false);\n      }\n    }\n  });\n}\n\nfunction isSamePageWithHash(absoluteHref: string): boolean {\n  const hashIndex = absoluteHref.indexOf('#');\n  return hashIndex > -1 && location.href.replace(location.hash, '') === absoluteHref.substring(0, hashIndex);\n}\n\nfunction performScrollToElementOnTheSamePage(absoluteHref : string, replace: boolean, state: string | undefined = undefined): void {\n  saveToBrowserHistory(absoluteHref, replace, state);\n\n  const hashIndex = absoluteHref.indexOf('#');\n  if (hashIndex === absoluteHref.length - 1) {\n    return;\n  }\n\n  const identifier = absoluteHref.substring(hashIndex + 1);\n  scrollToElement(identifier);\n}\n\n// For back-compat, we need to accept multiple overloads\nexport function navigateTo(uri: string, options: NavigationOptions): void;\nexport function navigateTo(uri: string, forceLoad: boolean): void;\nexport function navigateTo(uri: string, forceLoad: boolean, replace: boolean): void;\nexport function navigateTo(uri: string, forceLoadOrOptions: NavigationOptions | boolean, replaceIfUsingOldOverload = false): void {\n  // Normalize the parameters to the newer overload (i.e., using NavigationOptions)\n  const options: NavigationOptions = forceLoadOrOptions instanceof Object\n    ? forceLoadOrOptions\n    : { forceLoad: forceLoadOrOptions, replaceHistoryEntry: replaceIfUsingOldOverload };\n\n  navigateToCore(uri, options);\n}\n\nfunction navigateToFromDotNet(uri: string, options: NavigationOptions): void {\n  // The location changing callback is called from .NET for programmatic navigations originating from .NET.\n  // In this case, we shouldn't invoke the callback again from the JS side.\n  navigateToCore(uri, options, /* skipLocationChangingCallback */ true);\n}\n\nfunction navigateToCore(uri: string, options: NavigationOptions, skipLocationChangingCallback = false): void {\n  const absoluteUri = toAbsoluteUri(uri);\n\n  if (!options.forceLoad && isWithinBaseUriSpace(absoluteUri)) {\n    performInternalNavigation(absoluteUri, false, options.replaceHistoryEntry, options.historyEntryState, skipLocationChangingCallback);\n  } else {\n    // For external navigation, we work in terms of the originally-supplied uri string,\n    // not the computed absoluteUri. This is in case there are some special URI formats\n    // we're unable to translate into absolute URIs.\n    performExternalNavigation(uri, options.replaceHistoryEntry);\n  }\n}\n\nfunction performExternalNavigation(uri: string, replace: boolean) {\n  if (location.href === uri) {\n    // If you're already on this URL, you can't append another copy of it to the history stack,\n    // so we can ignore the 'replace' flag. However, reloading the same URL you're already on\n    // requires special handling to avoid triggering browser-specific behavior issues.\n    // For details about what this fixes and why, see https://github.com/dotnet/aspnetcore/pull/10839\n    const temporaryUri = uri + '?';\n    history.replaceState(null, '', temporaryUri);\n    location.replace(uri);\n  } else if (replace) {\n    location.replace(uri);\n  } else {\n    location.href = uri;\n  }\n}\n\nasync function performInternalNavigation(absoluteInternalHref: string, interceptedLink: boolean, replace: boolean, state: string | undefined = undefined, skipLocationChangingCallback = false) {\n  ignorePendingNavigation();\n\n  if (isSamePageWithHash(absoluteInternalHref)) {\n    performScrollToElementOnTheSamePage(absoluteInternalHref, replace, state);\n    return;\n  }\n\n  if (!skipLocationChangingCallback && hasLocationChangingEventListeners) {\n    const shouldContinueNavigation = await notifyLocationChanging(absoluteInternalHref, state, interceptedLink);\n    if (!shouldContinueNavigation) {\n      return;\n    }\n  }\n\n  // Since this was *not* triggered by a back/forward gesture (that goes through a different\n  // code path starting with a popstate event), we don't want to preserve the current scroll\n  // position, so reset it.\n  // To avoid ugly flickering effects, we don't want to change the scroll position until\n  // we render the new page. As a best approximation, wait until the next batch.\n  resetScrollAfterNextBatch();\n\n  saveToBrowserHistory(absoluteInternalHref, replace, state);\n\n  await notifyLocationChanged(interceptedLink);\n}\n\nfunction saveToBrowserHistory(absoluteInternalHref: string, replace: boolean, state: string | undefined = undefined): void {\n  if (!replace) {\n    currentHistoryIndex++;\n    history.pushState({\n      userState: state,\n      _index: currentHistoryIndex,\n    }, /* ignored title */ '', absoluteInternalHref);\n  } else {\n    history.replaceState({\n      userState: state,\n      _index: currentHistoryIndex,\n    }, /* ignored title */ '', absoluteInternalHref);\n  }\n}\n\nfunction navigateHistoryWithoutPopStateCallback(delta: number): Promise<void> {\n  return new Promise(resolve => {\n    const oldPopStateCallback = popStateCallback;\n\n    popStateCallback = () => {\n      popStateCallback = oldPopStateCallback;\n      resolve();\n    };\n\n    history.go(delta);\n  });\n}\n\nfunction ignorePendingNavigation() {\n  if (resolveCurrentNavigation) {\n    resolveCurrentNavigation(false);\n    resolveCurrentNavigation = null;\n  }\n}\n\nfunction notifyLocationChanging(uri: string, state: string | undefined, intercepted: boolean): Promise<boolean> {\n  return new Promise<boolean>(resolve => {\n    ignorePendingNavigation();\n\n    if (!notifyLocationChangingCallback) {\n      resolve(false);\n      return;\n    }\n\n    currentLocationChangingCallId++;\n    resolveCurrentNavigation = resolve;\n    notifyLocationChangingCallback(currentLocationChangingCallId, uri, state, intercepted);\n  });\n}\n\nfunction endLocationChanging(callId: number, shouldContinueNavigation: boolean) {\n  if (resolveCurrentNavigation && callId === currentLocationChangingCallId) {\n    resolveCurrentNavigation(shouldContinueNavigation);\n    resolveCurrentNavigation = null;\n  }\n}\n\nasync function onBrowserInitiatedPopState(state: PopStateEvent) {\n  ignorePendingNavigation();\n\n  if (hasLocationChangingEventListeners) {\n    const index = state.state?._index ?? 0;\n    const userState = state.state?.userState;\n    const delta = index - currentHistoryIndex;\n    const uri = location.href;\n\n    // Temporarily revert the navigation until we confirm if the navigation should continue.\n    await navigateHistoryWithoutPopStateCallback(-delta);\n\n    const shouldContinueNavigation = await notifyLocationChanging(uri, userState, false);\n    if (!shouldContinueNavigation) {\n      return;\n    }\n\n    await navigateHistoryWithoutPopStateCallback(delta);\n  }\n\n  await notifyLocationChanged(false);\n}\n\nasync function notifyLocationChanged(interceptedLink: boolean) {\n  if (notifyLocationChangedCallback) {\n    await notifyLocationChangedCallback(location.href, history.state?.userState, interceptedLink);\n  }\n}\n\nasync function onPopState(state: PopStateEvent) {\n  if (popStateCallback) {\n    await popStateCallback(state);\n  }\n\n  currentHistoryIndex = history.state?._index ?? 0;\n}\n\nlet testAnchor: HTMLAnchorElement;\nexport function toAbsoluteUri(relativeUri: string): string {\n  testAnchor = testAnchor || document.createElement('a');\n  testAnchor.href = relativeUri;\n  return testAnchor.href;\n}\n\nfunction findAnchorTarget(event: MouseEvent): HTMLAnchorElement | null {\n  // _blazorDisableComposedPath is a temporary escape hatch in case any problems are discovered\n  // in this logic. It can be removed in a later release, and should not be considered supported API.\n  const path = !window['_blazorDisableComposedPath'] && event.composedPath && event.composedPath();\n  if (path) {\n    // This logic works with events that target elements within a shadow root,\n    // as long as the shadow mode is 'open'. For closed shadows, we can't possibly\n    // know what internal element was clicked.\n    for (let i = 0; i < path.length; i++) {\n      const candidate = path[i];\n      if (candidate instanceof Element && candidate.tagName === 'A') {\n        return candidate as HTMLAnchorElement;\n      }\n    }\n    return null;\n  } else {\n    // Since we're adding use of composedPath in a patch, retain compatibility with any\n    // legacy browsers that don't support it by falling back on the older logic, even\n    // though it won't work properly with ShadowDOM. This can be removed in the next\n    // major release.\n    return findClosestAnchorAncestorLegacy(event.target as Element | null, 'A');\n  }\n}\n\nfunction findClosestAnchorAncestorLegacy(element: Element | null, tagName: string) {\n  return !element\n    ? null\n    : element.tagName === tagName\n      ? element\n      : findClosestAnchorAncestorLegacy(element.parentElement, tagName);\n}\n\nfunction isWithinBaseUriSpace(href: string) {\n  const baseUriWithoutTrailingSlash = toBaseUriWithoutTrailingSlash(document.baseURI!);\n  const nextChar = href.charAt(baseUriWithoutTrailingSlash.length);\n\n  return href.startsWith(baseUriWithoutTrailingSlash)\n    && (nextChar === '' || nextChar === '/' || nextChar === '?' || nextChar === '#');\n}\n\nfunction toBaseUriWithoutTrailingSlash(baseUri: string) {\n  return baseUri.substring(0, baseUri.lastIndexOf('/'));\n}\n\nfunction eventHasSpecialKey(event: MouseEvent) {\n  return event.ctrlKey || event.shiftKey || event.altKey || event.metaKey;\n}\n\nfunction canProcessAnchor(anchorTarget: HTMLAnchorElement) {\n  const targetAttributeValue = anchorTarget.getAttribute('target');\n  const opensInSameFrame = !targetAttributeValue || targetAttributeValue === '_self';\n  return opensInSameFrame && anchorTarget.hasAttribute('href') && !anchorTarget.hasAttribute('download');\n}\n\n// Keep in sync with Components/src/NavigationOptions.cs\nexport interface NavigationOptions {\n  forceLoad: boolean;\n  replaceHistoryEntry: boolean;\n  historyEntryState?: string;\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport '../Platform/Platform';\nimport '../Environment';\nimport { RenderBatch } from './RenderBatch/RenderBatch';\nimport { BrowserRenderer } from './BrowserRenderer';\nimport { toLogicalElement, LogicalElement } from './LogicalElements';\nimport { getAndRemovePendingRootComponentContainer } from './JSRootComponents';\n\ninterface BrowserRendererRegistry {\n  [browserRendererId: number]: BrowserRenderer;\n}\nconst browserRenderers: BrowserRendererRegistry = {};\nlet shouldResetScrollAfterNextBatch = false;\n\nexport function attachRootComponentToLogicalElement(browserRendererId: number, logicalElement: LogicalElement, componentId: number, appendContent: boolean): void {\n  let browserRenderer = browserRenderers[browserRendererId];\n  if (!browserRenderer) {\n    browserRenderer = new BrowserRenderer(browserRendererId);\n    browserRenderers[browserRendererId] = browserRenderer;\n  }\n\n  browserRenderer.attachRootComponentToLogicalElement(componentId, logicalElement, appendContent);\n}\n\nexport function attachRootComponentToElement(elementSelector: string, componentId: number, browserRendererId?: number): void {\n  const afterElementSelector = '::after';\n  const beforeElementSelector = '::before';\n  let appendContent = false;\n\n  if (elementSelector.endsWith(afterElementSelector)) {\n    elementSelector = elementSelector.slice(0, -afterElementSelector.length);\n    appendContent = true;\n  } else if (elementSelector.endsWith(beforeElementSelector)) {\n    throw new Error(`The '${beforeElementSelector}' selector is not supported.`);\n  }\n\n  const element = getAndRemovePendingRootComponentContainer(elementSelector)\n    || document.querySelector(elementSelector);\n  if (!element) {\n    throw new Error(`Could not find any element matching selector '${elementSelector}'.`);\n  }\n\n  // 'allowExistingContents' to keep any prerendered content until we do the first client-side render\n  // Only client-side Blazor supplies a browser renderer ID\n  attachRootComponentToLogicalElement(browserRendererId || 0, toLogicalElement(element, /* allow existing contents */ true), componentId, appendContent);\n}\n\nexport function getRendererer(browserRendererId: number): BrowserRenderer {\n  return browserRenderers[browserRendererId];\n}\n\nexport function renderBatch(browserRendererId: number, batch: RenderBatch): void {\n  const browserRenderer = browserRenderers[browserRendererId];\n  if (!browserRenderer) {\n    throw new Error(`There is no browser renderer with ID ${browserRendererId}.`);\n  }\n\n  const arrayRangeReader = batch.arrayRangeReader;\n  const updatedComponentsRange = batch.updatedComponents();\n  const updatedComponentsValues = arrayRangeReader.values(updatedComponentsRange);\n  const updatedComponentsLength = arrayRangeReader.count(updatedComponentsRange);\n  const referenceFrames = batch.referenceFrames();\n  const referenceFramesValues = arrayRangeReader.values(referenceFrames);\n  const diffReader = batch.diffReader;\n\n  for (let i = 0; i < updatedComponentsLength; i++) {\n    const diff = batch.updatedComponentsEntry(updatedComponentsValues, i);\n    const componentId = diffReader.componentId(diff);\n    const edits = diffReader.edits(diff);\n    browserRenderer.updateComponent(batch, componentId, edits, referenceFramesValues);\n  }\n\n  const disposedComponentIdsRange = batch.disposedComponentIds();\n  const disposedComponentIdsValues = arrayRangeReader.values(disposedComponentIdsRange);\n  const disposedComponentIdsLength = arrayRangeReader.count(disposedComponentIdsRange);\n  for (let i = 0; i < disposedComponentIdsLength; i++) {\n    const componentId = batch.disposedComponentIdsEntry(disposedComponentIdsValues, i);\n    browserRenderer.disposeComponent(componentId);\n  }\n\n  const disposedEventHandlerIdsRange = batch.disposedEventHandlerIds();\n  const disposedEventHandlerIdsValues = arrayRangeReader.values(disposedEventHandlerIdsRange);\n  const disposedEventHandlerIdsLength = arrayRangeReader.count(disposedEventHandlerIdsRange);\n  for (let i = 0; i < disposedEventHandlerIdsLength; i++) {\n    const eventHandlerId = batch.disposedEventHandlerIdsEntry(disposedEventHandlerIdsValues, i);\n    browserRenderer.disposeEventHandler(eventHandlerId);\n  }\n\n  resetScrollIfNeeded();\n}\n\nexport function resetScrollAfterNextBatch(): void {\n  shouldResetScrollAfterNextBatch = true;\n}\n\nfunction resetScrollIfNeeded() {\n  if (shouldResetScrollAfterNextBatch) {\n    shouldResetScrollAfterNextBatch = false;\n\n    // This assumes the scroller is on the window itself. There isn't a general way to know\n    // if some other element is playing the role of the primary scroll region.\n    window.scrollTo && window.scrollTo(0, 0);\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport '@microsoft/dotnet-js-interop';\n\nexport const domFunctions = {\n  focus,\n  focusBySelector\n};\n\nfunction focus(element: HTMLOrSVGElement, preventScroll: boolean): void {\n  if (element instanceof HTMLElement) {\n    element.focus({ preventScroll });\n  } else if (element instanceof SVGElement) {\n    if (element.hasAttribute('tabindex')) {\n      element.focus({ preventScroll });\n    } else {\n      throw new Error('Unable to focus an SVG element that does not have a tabindex.');\n    }\n  } else {\n    throw new Error('Unable to focus an invalid element.');\n  }\n}\n\nfunction focusBySelector(selector: string, preventScroll: boolean): void {\n  const element = document.querySelector(selector) as HTMLElement;\n  if (element) {\n    // If no explicit tabindex is defined, mark it as programmatically-focusable.\n    // This does actually add a new HTML attribute, but it shouldn't interfere with\n    // diffing because diffing only deals with the attributes you have in your code.\n    if (!element.hasAttribute('tabindex')) {\n      element.tabIndex = -1;\n    }\n\n    element.focus({ preventScroll: true });\n  }\n}","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nexport const Virtualize = {\n  init,\n  dispose,\n};\n\nconst observersByDotNetId = {};\n\nfunction findClosestScrollContainer(element: HTMLElement | null): HTMLElement | null {\n  // If we recurse up as far as body or the document root, return null so that the\n  // IntersectionObserver observes intersection with the top-level scroll viewport\n  // instead of the with body/documentElement which can be arbitrarily tall.\n  // See https://github.com/dotnet/aspnetcore/issues/37659 for more about what this fixes.\n  if (!element || element === document.body || element === document.documentElement) {\n    return null;\n  }\n\n  const style = getComputedStyle(element);\n\n  if (style.overflowY !== 'visible') {\n    return element;\n  }\n\n  return findClosestScrollContainer(element.parentElement);\n}\n\nfunction init(dotNetHelper: any, spacerBefore: HTMLElement, spacerAfter: HTMLElement, rootMargin = 50): void {\n  // Overflow anchoring can cause an ongoing scroll loop, because when we resize the spacers, the browser\n  // would update the scroll position to compensate. Then the spacer would remain visible and we'd keep on\n  // trying to resize it.\n  const scrollContainer = findClosestScrollContainer(spacerBefore);\n  (scrollContainer || document.documentElement).style.overflowAnchor = 'none';\n\n  const rangeBetweenSpacers = document.createRange();\n\n  if (isValidTableElement(spacerAfter.parentElement)) {\n    spacerBefore.style.display = 'table-row';\n    spacerAfter.style.display = 'table-row';\n  }\n\n  const intersectionObserver = new IntersectionObserver(intersectionCallback, {\n    root: scrollContainer,\n    rootMargin: `${rootMargin}px`,\n  });\n\n  intersectionObserver.observe(spacerBefore);\n  intersectionObserver.observe(spacerAfter);\n\n  const mutationObserverBefore = createSpacerMutationObserver(spacerBefore);\n  const mutationObserverAfter = createSpacerMutationObserver(spacerAfter);\n\n  observersByDotNetId[dotNetHelper._id] = {\n    intersectionObserver,\n    mutationObserverBefore,\n    mutationObserverAfter,\n  };\n\n  function createSpacerMutationObserver(spacer: HTMLElement): MutationObserver {\n    // Without the use of thresholds, IntersectionObserver only detects binary changes in visibility,\n    // so if a spacer gets resized but remains visible, no additional callbacks will occur. By unobserving\n    // and reobserving spacers when they get resized, the intersection callback will re-run if they remain visible.\n    const observerOptions = { attributes: true };\n    const mutationObserver = new MutationObserver((mutations: MutationRecord[], observer: MutationObserver): void => {\n      if (isValidTableElement(spacer.parentElement)) {\n        observer.disconnect();\n        spacer.style.display = 'table-row';\n        observer.observe(spacer, observerOptions);\n      }\n\n      intersectionObserver.unobserve(spacer);\n      intersectionObserver.observe(spacer);\n    });\n\n    mutationObserver.observe(spacer, observerOptions);\n\n    return mutationObserver;\n  }\n\n  function intersectionCallback(entries: IntersectionObserverEntry[]): void {\n    entries.forEach((entry): void => {\n      if (!entry.isIntersecting) {\n        return;\n      }\n\n      // To compute the ItemSize, work out the separation between the two spacers. We can't just measure an individual element\n      // because each conceptual item could be made from multiple elements. Using getBoundingClientRect allows for the size to be\n      // a fractional value. It's important not to add or subtract any such fractional values (e.g., to subtract the 'top' of\n      // one item from the 'bottom' of another to get the distance between them) because floating point errors would cause\n      // scrolling glitches.\n      rangeBetweenSpacers.setStartAfter(spacerBefore);\n      rangeBetweenSpacers.setEndBefore(spacerAfter);\n      const spacerSeparation = rangeBetweenSpacers.getBoundingClientRect().height;\n      const containerSize = entry.rootBounds?.height;\n\n      if (entry.target === spacerBefore) {\n        dotNetHelper.invokeMethodAsync('OnSpacerBeforeVisible', entry.intersectionRect.top - entry.boundingClientRect.top, spacerSeparation, containerSize);\n      } else if (entry.target === spacerAfter && spacerAfter.offsetHeight > 0) {\n        // When we first start up, both the \"before\" and \"after\" spacers will be visible, but it's only relevant to raise a\n        // single event to load the initial data. To avoid raising two events, skip the one for the \"after\" spacer if we know\n        // it's meaningless to talk about any overlap into it.\n        dotNetHelper.invokeMethodAsync('OnSpacerAfterVisible', entry.boundingClientRect.bottom - entry.intersectionRect.bottom, spacerSeparation, containerSize);\n      }\n    });\n  }\n\n  function isValidTableElement(element: HTMLElement | null): boolean {\n    if (element === null) {\n      return false;\n    }\n\n    return ((element instanceof HTMLTableElement && element.style.display === '') || element.style.display === 'table')\n      || ((element instanceof HTMLTableSectionElement && element.style.display === '') || element.style.display === 'table-row-group');\n  }\n}\n\nfunction dispose(dotNetHelper: any): void {\n  const observers = observersByDotNetId[dotNetHelper._id];\n\n  if (observers) {\n    observers.intersectionObserver.disconnect();\n    observers.mutationObserverBefore.disconnect();\n    observers.mutationObserverAfter.disconnect();\n\n    dotNetHelper.dispose();\n\n    delete observersByDotNetId[dotNetHelper._id];\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { getLogicalParent, LogicalElement } from './Rendering/LogicalElements';\n\nexport const PageTitle = {\n  getAndRemoveExistingTitle,\n};\n\nfunction getAndRemoveExistingTitle(): string | null {\n  // Other <title> elements may exist outside <head> (e.g., inside <svg> elements) but they aren't page titles\n  const titleElements = document.head ? document.head.getElementsByTagName('title') : [];\n\n  if (titleElements.length === 0) {\n    return null;\n  }\n\n  let existingTitle: string | null = null;\n\n  for (let index = titleElements.length - 1; index >= 0; index--) {\n    const currentTitleElement = titleElements[index];\n    const previousSibling = currentTitleElement.previousSibling;\n    const isBlazorTitle = previousSibling instanceof Comment && getLogicalParent(previousSibling as unknown as LogicalElement) !== null;\n\n    if (isBlazorTitle) {\n      continue;\n    }\n\n    if (existingTitle === null) {\n      existingTitle = currentTitleElement.textContent;\n    }\n\n    currentTitleElement.parentNode?.removeChild(currentTitleElement);\n  }\n\n  return existingTitle;\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nexport const InputFile = {\n  init,\n  toImageFile,\n  readFileData,\n};\n\ninterface BrowserFile {\n  id: number;\n  lastModified: string;\n  name: string;\n  size: number;\n  contentType: string;\n  blob: Blob;\n}\n\nexport interface InputElement extends HTMLInputElement {\n  _blazorInputFileNextFileId: number;\n  _blazorFilesById: { [id: number]: BrowserFile };\n}\n\nfunction init(callbackWrapper: any, elem: InputElement): void {\n  elem._blazorInputFileNextFileId = 0;\n\n  elem.addEventListener('click', function(): void {\n    // Permits replacing an existing file with a new one of the same file name.\n    elem.value = '';\n  });\n\n  elem.addEventListener('change', function(): void {\n    // Reduce to purely serializable data, plus an index by ID.\n    elem._blazorFilesById = {};\n\n    const fileList = Array.prototype.map.call(elem.files, function(file: File): BrowserFile {\n      const result = {\n        id: ++elem._blazorInputFileNextFileId,\n        lastModified: new Date(file.lastModified).toISOString(),\n        name: file.name,\n        size: file.size,\n        contentType: file.type,\n        readPromise: undefined,\n        arrayBuffer: undefined,\n        blob: file,\n      };\n\n      elem._blazorFilesById[result.id] = result;\n\n      return result;\n    });\n\n    callbackWrapper.invokeMethodAsync('NotifyChange', fileList);\n  });\n}\n\nasync function toImageFile(elem: InputElement, fileId: number, format: string, maxWidth: number, maxHeight: number): Promise<BrowserFile> {\n  const originalFile = getFileById(elem, fileId);\n\n  const loadedImage = await new Promise(function(resolve: (loadedImage: HTMLImageElement) => void): void {\n    const originalFileImage = new Image();\n    originalFileImage.onload = function(): void {\n      URL.revokeObjectURL(originalFileImage.src);\n      resolve(originalFileImage);\n    };\n    originalFileImage.onerror = function(): void {\n      originalFileImage.onerror = null;\n      URL.revokeObjectURL(originalFileImage.src);\n    };\n    originalFileImage.src = URL.createObjectURL(originalFile['blob']);\n  });\n\n  const resizedImageBlob = await new Promise(function(resolve: BlobCallback): void {\n    const desiredWidthRatio = Math.min(1, maxWidth / loadedImage.width);\n    const desiredHeightRatio = Math.min(1, maxHeight / loadedImage.height);\n    const chosenSizeRatio = Math.min(desiredWidthRatio, desiredHeightRatio);\n\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.round(loadedImage.width * chosenSizeRatio);\n    canvas.height = Math.round(loadedImage.height * chosenSizeRatio);\n    canvas.getContext('2d')?.drawImage(loadedImage, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(resolve, format);\n  });\n\n  const result: BrowserFile = {\n    id: ++elem._blazorInputFileNextFileId,\n    lastModified: originalFile.lastModified,\n    name: originalFile.name,\n    size: resizedImageBlob?.size || 0,\n    contentType: format,\n    blob: resizedImageBlob ? resizedImageBlob : originalFile.blob,\n  };\n\n  elem._blazorFilesById[result.id] = result;\n\n  return result;\n}\n\nasync function readFileData(elem: InputElement, fileId: number): Promise<Blob> {\n  const file = getFileById(elem, fileId);\n  return file.blob;\n}\n\nexport function getFileById(elem: InputElement, fileId: number): BrowserFile {\n  const file = elem._blazorFilesById[fileId];\n\n  if (!file) {\n    throw new Error(`There is no file with ID ${fileId}. The file list may have changed. See https://aka.ms/aspnet/blazor-input-file-multiple-selections.`);\n  }\n\n  return file;\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nconst registeredLocks = new Set<string>();\n\nexport const NavigationLock = {\n  enableNavigationPrompt,\n  disableNavigationPrompt,\n};\n\nfunction onBeforeUnload(event: BeforeUnloadEvent) {\n  event.preventDefault();\n  // Modern browsers display a confirmation prompt when returnValue is some value other than\n  // null or undefined.\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event#compatibility_notes\n  event.returnValue = true;\n}\n\nfunction enableNavigationPrompt(id: string) {\n  if (registeredLocks.size === 0) {\n    window.addEventListener('beforeunload', onBeforeUnload);\n  }\n\n  registeredLocks.add(id);\n}\n\nfunction disableNavigationPrompt(id: string) {\n  registeredLocks.delete(id);\n\n  if (registeredLocks.size === 0) {\n    window.removeEventListener('beforeunload', onBeforeUnload);\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { DotNet } from '@microsoft/dotnet-js-interop';\n\nexport async function getNextChunk(data: ArrayBufferView | Blob, position: number, nextChunkSize: number): Promise<Uint8Array> {\n  if (data instanceof Blob) {\n    return await getChunkFromBlob(data, position, nextChunkSize);\n  } else {\n    return getChunkFromArrayBufferView(data, position, nextChunkSize);\n  }\n}\n\nasync function getChunkFromBlob(data: Blob, position: number, nextChunkSize: number): Promise<Uint8Array> {\n  const chunkBlob = data.slice(position, position + nextChunkSize);\n  const arrayBuffer = await chunkBlob.arrayBuffer();\n  const nextChunkData = new Uint8Array(arrayBuffer);\n  return nextChunkData;\n}\n\nfunction getChunkFromArrayBufferView(data: ArrayBufferView, position: number, nextChunkSize: number): Uint8Array {\n  const nextChunkData = new Uint8Array(data.buffer, data.byteOffset + position, nextChunkSize);\n  return nextChunkData;\n}\n\nconst transmittingDotNetToJSStreams = new Map<number, ReadableStreamController<any>>();\nexport function receiveDotNetDataStream(dispatcher: DotNet.ICallDispatcher, streamId: number, data: Uint8Array, bytesRead: number, errorMessage: string): void {\n  let streamController = transmittingDotNetToJSStreams.get(streamId);\n  if (!streamController) {\n    const readableStream = new ReadableStream({\n      start(controller) {\n        transmittingDotNetToJSStreams.set(streamId, controller);\n        streamController = controller;\n      },\n    });\n\n    dispatcher.supplyDotNetStream(streamId, readableStream);\n  }\n\n  if (errorMessage) {\n    streamController!.error(errorMessage);\n    transmittingDotNetToJSStreams.delete(streamId);\n  } else if (bytesRead === 0) {\n    streamController!.close();\n    transmittingDotNetToJSStreams.delete(streamId);\n  } else {\n    streamController!.enqueue(data.length === bytesRead ? data : data.subarray(0, bytesRead));\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { navigateTo, internalFunctions as navigationManagerInternalFunctions, NavigationOptions } from './Services/NavigationManager';\nimport { domFunctions } from './DomWrapper';\nimport { Virtualize } from './Virtualize';\nimport { PageTitle } from './PageTitle';\nimport { registerCustomEventType, EventTypeOptions } from './Rendering/Events/EventTypes';\nimport { HubConnection } from '@microsoft/signalr';\nimport { InputFile } from './InputFile';\nimport { NavigationLock } from './NavigationLock';\nimport { DefaultReconnectionHandler } from './Platform/Circuits/DefaultReconnectionHandler';\nimport { CircuitStartOptions } from './Platform/Circuits/CircuitStartOptions';\nimport { WebAssemblyStartOptions } from './Platform/WebAssemblyStartOptions';\nimport { Platform, Pointer } from './Platform/Platform';\nimport { getNextChunk } from './StreamingInterop';\nimport { RootComponentsFunctions } from './Rendering/JSRootComponents';\nimport { attachWebRendererInterop } from './Rendering/WebRendererInteropMethods';\nimport { WebStartOptions } from './Platform/WebStartOptions';\n\n// TODO: It's kind of hard to tell which .NET platform(s) some of these APIs are relevant to.\n// It's important to know this information when dealing with the possibility of mulitple .NET platforms being available.\n// e.g., which of these APIs need to account for there being multiple .NET runtimes, and which don't?\n\n// We should consider separating it all out so that we can easily identify the platform requirements of each API.\n// For example:\n// * Blazor.{foo}: public Blazor APIs\n// * Blazor._internal.{foo}: internal, platform-agnostic Blazor APIs\n// * Blazor.platform.{somePlatformName}.{foo}: public, platform-specific Blazor APIs (would be empty at first, so no initial breaking changes)\n// * Blazor.platform.{somePlatformName}.{_internal}.{foo}: internal, platform-specific Blazor APIs\ninterface IBlazor {\n  navigateTo: (uri: string, options: NavigationOptions) => void;\n  registerCustomEventType: (eventName: string, options: EventTypeOptions) => void;\n\n  disconnect?: () => void;\n  reconnect?: (existingConnection?: HubConnection) => Promise<boolean>;\n  defaultReconnectionHandler?: DefaultReconnectionHandler;\n  start?: ((userOptions?: Partial<CircuitStartOptions>) => Promise<void>) | ((options?: Partial<WebAssemblyStartOptions>) => Promise<void>) | ((options?: Partial<WebStartOptions>) => Promise<void>);\n  platform?: Platform;\n  rootComponents: typeof RootComponentsFunctions;\n\n  _internal: {\n    navigationManager: typeof navigationManagerInternalFunctions | any;\n    domWrapper: typeof domFunctions;\n    Virtualize: typeof Virtualize;\n    PageTitle: typeof PageTitle;\n    forceCloseConnection?: () => Promise<void>;\n    InputFile?: typeof InputFile;\n    NavigationLock: typeof NavigationLock;\n    invokeJSFromDotNet?: (callInfo: Pointer, arg0: any, arg1: any, arg2: any) => any;\n    invokeJSJson?: (identifier: string, targetInstanceId: number, resultType: number, argsJson: string, asyncHandle: number) => string | null;\n    endInvokeDotNetFromJS?: (callId: string, success: boolean, resultJsonOrErrorMessage: string) => void;\n    receiveByteArray?: (id: number, data: Uint8Array) => void;\n    getPersistedState?: () => string;\n    attachRootComponentToElement?: (arg0: any, arg1: any, arg2: any, arg3: any) => void;\n    registeredComponents?: {\n      getRegisteredComponentsCount: () => number;\n      getId: (index) => number;\n      getAssembly: (id) => string;\n      getTypeName: (id) => string;\n      getParameterDefinitions: (id) => string;\n      getParameterValues: (id) => any;\n    };\n    renderBatch?: (browserRendererId: number, batchAddress: Pointer) => void;\n    getConfig?: (fileName: string) => Uint8Array | undefined;\n    getApplicationEnvironment?: () => string;\n    dotNetCriticalError?: any;\n    loadLazyAssembly?: any;\n    loadSatelliteAssemblies?: any;\n    sendJSDataStream?: (data: any, streamId: number, chunkSize: number) => void;\n    getJSDataStreamChunk?: (data: any, position: number, chunkSize: number) => Promise<Uint8Array>;\n    receiveWebAssemblyDotNetDataStream?: (streamId: number, data: any, bytesRead: number, errorMessage: string) => void;\n    receiveWebViewDotNetDataStream?: (streamId: number, data: any, bytesRead: number, errorMessage: string) => void;\n    attachWebRendererInterop?: typeof attachWebRendererInterop;\n\n    // JSExport APIs\n    dotNetExports?: {\n      InvokeDotNet: (assemblyName: string | null, methodIdentifier: string, dotNetObjectId: number, argsJson: string) => string | null;\n      EndInvokeJS: (argsJson: string) => void;\n      BeginInvokeDotNet: (callId: string | null, assemblyNameOrDotNetObjectId: string, methodIdentifier: string, argsJson: string) => void;\n      ReceiveByteArrayFromJS: (id: number, data: Uint8Array) => void;\n    }\n\n    // APIs invoked by hot reload\n    applyHotReload?: (id: string, metadataDelta: string, ilDelta: string, pdbDelta: string | undefined) => void;\n    getApplyUpdateCapabilities?: () => string;\n  }\n}\n\nexport const Blazor: IBlazor = {\n  navigateTo,\n  registerCustomEventType,\n  rootComponents: RootComponentsFunctions,\n\n  _internal: {\n    navigationManager: navigationManagerInternalFunctions,\n    domWrapper: domFunctions,\n    Virtualize,\n    PageTitle,\n    InputFile,\n    NavigationLock,\n    getJSDataStreamChunk: getNextChunk,\n    attachWebRendererInterop,\n  },\n};\n\n// Make the following APIs available in global scope for invocation from JS\nwindow['Blazor'] = Blazor;\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// 0, 2, 10, 30 second delays before reconnect attempts.\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\n/** @private */\nexport class DefaultReconnectPolicy {\n    constructor(retryDelays) {\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\n    }\n    nextRetryDelayInMilliseconds(retryContext) {\n        return this._retryDelays[retryContext.previousRetryCount];\n    }\n}\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nexport class HeaderNames {\n}\nHeaderNames.Authorization = \"Authorization\";\nHeaderNames.Cookie = \"Cookie\";\n//# sourceMappingURL=HeaderNames.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n/** Represents an HTTP response. */\nexport class HttpResponse {\n    constructor(statusCode, statusText, content) {\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        this.content = content;\n    }\n}\n/** Abstraction over an HTTP client.\n *\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\n */\nexport class HttpClient {\n    get(url, options) {\n        return this.send({\n            ...options,\n            method: \"GET\",\n            url,\n        });\n    }\n    post(url, options) {\n        return this.send({\n            ...options,\n            method: \"POST\",\n            url,\n        });\n    }\n    delete(url, options) {\n        return this.send({\n            ...options,\n            method: \"DELETE\",\n            url,\n        });\n    }\n    /** Gets all cookies that apply to the specified URL.\n     *\n     * @param url The URL that the cookies are valid for.\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\n     */\n    // @ts-ignore\n    getCookieString(url) {\n        return \"\";\n    }\n}\n//# sourceMappingURL=HttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { HeaderNames } from \"./HeaderNames\";\nimport { HttpClient } from \"./HttpClient\";\n/** @private */\nexport class AccessTokenHttpClient extends HttpClient {\n    constructor(innerClient, accessTokenFactory) {\n        super();\n        this._innerClient = innerClient;\n        this._accessTokenFactory = accessTokenFactory;\n    }\n    async send(request) {\n        let allowRetry = true;\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\n            allowRetry = false;\n            this._accessToken = await this._accessTokenFactory();\n        }\n        this._setAuthorizationHeader(request);\n        const response = await this._innerClient.send(request);\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\n            this._accessToken = await this._accessTokenFactory();\n            this._setAuthorizationHeader(request);\n            return await this._innerClient.send(request);\n        }\n        return response;\n    }\n    _setAuthorizationHeader(request) {\n        if (!request.headers) {\n            request.headers = {};\n        }\n        if (this._accessToken) {\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\n        }\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\n        else if (this._accessTokenFactory) {\n            if (request.headers[HeaderNames.Authorization]) {\n                delete request.headers[HeaderNames.Authorization];\n            }\n        }\n    }\n    getCookieString(url) {\n        return this._innerClient.getCookieString(url);\n    }\n}\n//# sourceMappingURL=AccessTokenHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n/** Error thrown when an HTTP request fails. */\nexport class HttpError extends Error {\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\n     *\n     * @param {string} errorMessage A descriptive error message.\n     * @param {number} statusCode The HTTP status code represented by this error.\n     */\n    constructor(errorMessage, statusCode) {\n        const trueProto = new.target.prototype;\n        super(`${errorMessage}: Status code '${statusCode}'`);\n        this.statusCode = statusCode;\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n/** Error thrown when a timeout elapses. */\nexport class TimeoutError extends Error {\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\n     *\n     * @param {string} errorMessage A descriptive error message.\n     */\n    constructor(errorMessage = \"A timeout occurred.\") {\n        const trueProto = new.target.prototype;\n        super(errorMessage);\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n/** Error thrown when an action is aborted. */\nexport class AbortError extends Error {\n    /** Constructs a new instance of {@link AbortError}.\n     *\n     * @param {string} errorMessage A descriptive error message.\n     */\n    constructor(errorMessage = \"An abort occurred.\") {\n        const trueProto = new.target.prototype;\n        super(errorMessage);\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n/** Error thrown when the selected transport is unsupported by the browser. */\n/** @private */\nexport class UnsupportedTransportError extends Error {\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\n     *\n     * @param {string} message A descriptive error message.\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\n     */\n    constructor(message, transport) {\n        const trueProto = new.target.prototype;\n        super(message);\n        this.transport = transport;\n        this.errorType = 'UnsupportedTransportError';\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n/** Error thrown when the selected transport is disabled by the browser. */\n/** @private */\nexport class DisabledTransportError extends Error {\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\n     *\n     * @param {string} message A descriptive error message.\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\n     */\n    constructor(message, transport) {\n        const trueProto = new.target.prototype;\n        super(message);\n        this.transport = transport;\n        this.errorType = 'DisabledTransportError';\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n/** Error thrown when the selected transport cannot be started. */\n/** @private */\nexport class FailedToStartTransportError extends Error {\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\n     *\n     * @param {string} message A descriptive error message.\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\n     */\n    constructor(message, transport) {\n        const trueProto = new.target.prototype;\n        super(message);\n        this.transport = transport;\n        this.errorType = 'FailedToStartTransportError';\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n/** Error thrown when the negotiation with the server failed to complete. */\n/** @private */\nexport class FailedToNegotiateWithServerError extends Error {\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\n     *\n     * @param {string} message A descriptive error message.\n     */\n    constructor(message) {\n        const trueProto = new.target.prototype;\n        super(message);\n        this.errorType = 'FailedToNegotiateWithServerError';\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n/** Error thrown when multiple errors have occurred. */\n/** @private */\nexport class AggregateErrors extends Error {\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\n     *\n     * @param {string} message A descriptive error message.\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\n     */\n    constructor(message, innerErrors) {\n        const trueProto = new.target.prototype;\n        super(message);\n        this.innerErrors = innerErrors;\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n//# sourceMappingURL=Errors.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\n/** Indicates the severity of a log message.\n *\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\n */\nexport var LogLevel;\n(function (LogLevel) {\n    /** Log level for very low severity diagnostic messages. */\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    /** Log level for low severity diagnostic messages. */\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    /** Log level for informational diagnostic messages. */\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\n})(LogLevel || (LogLevel = {}));\n//# sourceMappingURL=ILogger.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n/** A logger that does nothing when log messages are sent to it. */\nexport class NullLogger {\n    constructor() { }\n    /** @inheritDoc */\n    // eslint-disable-next-line\n    log(_logLevel, _message) {\n    }\n}\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\nNullLogger.instance = new NullLogger();\n//# sourceMappingURL=Loggers.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { LogLevel } from \"./ILogger\";\nimport { NullLogger } from \"./Loggers\";\n// Version token that will be replaced by the prepack command\n/** The version of the SignalR client. */\nexport const VERSION = \"0.0.0-DEV_BUILD\";\n/** @private */\nexport class Arg {\n    static isRequired(val, name) {\n        if (val === null || val === undefined) {\n            throw new Error(`The '${name}' argument is required.`);\n        }\n    }\n    static isNotEmpty(val, name) {\n        if (!val || val.match(/^\\s*$/)) {\n            throw new Error(`The '${name}' argument should not be empty.`);\n        }\n    }\n    static isIn(val, values, name) {\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n        if (!(val in values)) {\n            throw new Error(`Unknown ${name} value: ${val}.`);\n        }\n    }\n}\n/** @private */\nexport class Platform {\n    // react-native has a window but no document so we should check both\n    static get isBrowser() {\n        return typeof window === \"object\" && typeof window.document === \"object\";\n    }\n    // WebWorkers don't have a window object so the isBrowser check would fail\n    static get isWebWorker() {\n        return typeof self === \"object\" && \"importScripts\" in self;\n    }\n    // react-native has a window but no document\n    static get isReactNative() {\n        return typeof window === \"object\" && typeof window.document === \"undefined\";\n    }\n    // Node apps shouldn't have a window object, but WebWorkers don't either\n    // so we need to check for both WebWorker and window\n    static get isNode() {\n        return !this.isBrowser && !this.isWebWorker && !this.isReactNative;\n    }\n}\n/** @private */\nexport function getDataDetail(data, includeContent) {\n    let detail = \"\";\n    if (isArrayBuffer(data)) {\n        detail = `Binary data of length ${data.byteLength}`;\n        if (includeContent) {\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\n        }\n    }\n    else if (typeof data === \"string\") {\n        detail = `String data of length ${data.length}`;\n        if (includeContent) {\n            detail += `. Content: '${data}'`;\n        }\n    }\n    return detail;\n}\n/** @private */\nexport function formatArrayBuffer(data) {\n    const view = new Uint8Array(data);\n    // Uint8Array.map only supports returning another Uint8Array?\n    let str = \"\";\n    view.forEach((num) => {\n        const pad = num < 16 ? \"0\" : \"\";\n        str += `0x${pad}${num.toString(16)} `;\n    });\n    // Trim of trailing space.\n    return str.substr(0, str.length - 1);\n}\n// Also in signalr-protocol-msgpack/Utils.ts\n/** @private */\nexport function isArrayBuffer(val) {\n    return val && typeof ArrayBuffer !== \"undefined\" &&\n        (val instanceof ArrayBuffer ||\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\n}\n/** @private */\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\n    const headers = {};\n    const [name, value] = getUserAgentHeader();\n    headers[name] = value;\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n    const response = await httpClient.post(url, {\n        content,\n        headers: { ...headers, ...options.headers },\n        responseType,\n        timeout: options.timeout,\n        withCredentials: options.withCredentials,\n    });\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\n}\n/** @private */\nexport function createLogger(logger) {\n    if (logger === undefined) {\n        return new ConsoleLogger(LogLevel.Information);\n    }\n    if (logger === null) {\n        return NullLogger.instance;\n    }\n    if (logger.log !== undefined) {\n        return logger;\n    }\n    return new ConsoleLogger(logger);\n}\n/** @private */\nexport class SubjectSubscription {\n    constructor(subject, observer) {\n        this._subject = subject;\n        this._observer = observer;\n    }\n    dispose() {\n        const index = this._subject.observers.indexOf(this._observer);\n        if (index > -1) {\n            this._subject.observers.splice(index, 1);\n        }\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\n            this._subject.cancelCallback().catch((_) => { });\n        }\n    }\n}\n/** @private */\nexport class ConsoleLogger {\n    constructor(minimumLogLevel) {\n        this._minLevel = minimumLogLevel;\n        this.out = console;\n    }\n    log(logLevel, message) {\n        if (logLevel >= this._minLevel) {\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\n            switch (logLevel) {\n                case LogLevel.Critical:\n                case LogLevel.Error:\n                    this.out.error(msg);\n                    break;\n                case LogLevel.Warning:\n                    this.out.warn(msg);\n                    break;\n                case LogLevel.Information:\n                    this.out.info(msg);\n                    break;\n                default:\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n                    this.out.log(msg);\n                    break;\n            }\n        }\n    }\n}\n/** @private */\nexport function getUserAgentHeader() {\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\n    if (Platform.isNode) {\n        userAgentHeaderName = \"User-Agent\";\n    }\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\n}\n/** @private */\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\n    let userAgent = \"Microsoft SignalR/\";\n    const majorAndMinor = version.split(\".\");\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\n    userAgent += ` (${version}; `;\n    if (os && os !== \"\") {\n        userAgent += `${os}; `;\n    }\n    else {\n        userAgent += \"Unknown OS; \";\n    }\n    userAgent += `${runtime}`;\n    if (runtimeVersion) {\n        userAgent += `; ${runtimeVersion}`;\n    }\n    else {\n        userAgent += \"; Unknown Runtime Version\";\n    }\n    userAgent += \")\";\n    return userAgent;\n}\n// eslint-disable-next-line spaced-comment\n/*#__PURE__*/ function getOsName() {\n    if (Platform.isNode) {\n        switch (process.platform) {\n            case \"win32\":\n                return \"Windows NT\";\n            case \"darwin\":\n                return \"macOS\";\n            case \"linux\":\n                return \"Linux\";\n            default:\n                return process.platform;\n        }\n    }\n    else {\n        return \"\";\n    }\n}\n// eslint-disable-next-line spaced-comment\n/*#__PURE__*/ function getRuntimeVersion() {\n    if (Platform.isNode) {\n        return process.versions.node;\n    }\n    return undefined;\n}\nfunction getRuntime() {\n    if (Platform.isNode) {\n        return \"NodeJS\";\n    }\n    else {\n        return \"Browser\";\n    }\n}\n/** @private */\nexport function getErrorString(e) {\n    if (e.stack) {\n        return e.stack;\n    }\n    else if (e.message) {\n        return e.message;\n    }\n    return `${e}`;\n}\n/** @private */\nexport function getGlobalThis() {\n    // globalThis is semi-new and not available in Node until v12\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    throw new Error(\"could not find global\");\n}\n//# sourceMappingURL=Utils.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\nexport class FetchHttpClient extends HttpClient {\n    constructor(logger) {\n        super();\n        this._logger = logger;\n        // Node added a fetch implementation to the global scope starting in v18.\n        // We need to add a cookie jar in node to be able to share cookies with WebSocket\n        if (typeof fetch === \"undefined\" || Platform.isNode) {\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\n            // @ts-ignore: TS doesn't know about these names\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\n            if (typeof fetch === \"undefined\") {\n                this._fetchType = requireFunc(\"node-fetch\");\n            }\n            else {\n                // Use fetch from Node if available\n                this._fetchType = fetch;\n            }\n            // node-fetch doesn't have a nice API for getting and setting cookies\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\n        }\n        else {\n            this._fetchType = fetch.bind(getGlobalThis());\n        }\n        if (typeof AbortController === \"undefined\") {\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\n            // @ts-ignore: TS doesn't know about these names\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\n            this._abortControllerType = requireFunc(\"abort-controller\");\n        }\n        else {\n            this._abortControllerType = AbortController;\n        }\n    }\n    /** @inheritDoc */\n    async send(request) {\n        // Check that abort was not signaled before calling send\n        if (request.abortSignal && request.abortSignal.aborted) {\n            throw new AbortError();\n        }\n        if (!request.method) {\n            throw new Error(\"No method defined.\");\n        }\n        if (!request.url) {\n            throw new Error(\"No url defined.\");\n        }\n        const abortController = new this._abortControllerType();\n        let error;\n        // Hook our abortSignal into the abort controller\n        if (request.abortSignal) {\n            request.abortSignal.onabort = () => {\n                abortController.abort();\n                error = new AbortError();\n            };\n        }\n        // If a timeout has been passed in, setup a timeout to call abort\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\n        let timeoutId = null;\n        if (request.timeout) {\n            const msTimeout = request.timeout;\n            timeoutId = setTimeout(() => {\n                abortController.abort();\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\n                error = new TimeoutError();\n            }, msTimeout);\n        }\n        if (request.content === \"\") {\n            request.content = undefined;\n        }\n        if (request.content) {\n            // Explicitly setting the Content-Type header for React Native on Android platform.\n            request.headers = request.headers || {};\n            if (isArrayBuffer(request.content)) {\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\n            }\n            else {\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n            }\n        }\n        let response;\n        try {\n            response = await this._fetchType(request.url, {\n                body: request.content,\n                cache: \"no-cache\",\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\n                headers: {\n                    \"X-Requested-With\": \"XMLHttpRequest\",\n                    ...request.headers,\n                },\n                method: request.method,\n                mode: \"cors\",\n                redirect: \"follow\",\n                signal: abortController.signal,\n            });\n        }\n        catch (e) {\n            if (error) {\n                throw error;\n            }\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\n            throw e;\n        }\n        finally {\n            if (timeoutId) {\n                clearTimeout(timeoutId);\n            }\n            if (request.abortSignal) {\n                request.abortSignal.onabort = null;\n            }\n        }\n        if (!response.ok) {\n            const errorMessage = await deserializeContent(response, \"text\");\n            throw new HttpError(errorMessage || response.statusText, response.status);\n        }\n        const content = deserializeContent(response, request.responseType);\n        const payload = await content;\n        return new HttpResponse(response.status, response.statusText, payload);\n    }\n    getCookieString(url) {\n        let cookies = \"\";\n        if (Platform.isNode && this._jar) {\n            // @ts-ignore: unused variable\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\n        }\n        return cookies;\n    }\n}\nfunction deserializeContent(response, responseType) {\n    let content;\n    switch (responseType) {\n        case \"arraybuffer\":\n            content = response.arrayBuffer();\n            break;\n        case \"text\":\n            content = response.text();\n            break;\n        case \"blob\":\n        case \"document\":\n        case \"json\":\n            throw new Error(`${responseType} is not supported.`);\n        default:\n            content = response.text();\n            break;\n    }\n    return content;\n}\n//# sourceMappingURL=FetchHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { isArrayBuffer } from \"./Utils\";\nexport class XhrHttpClient extends HttpClient {\n    constructor(logger) {\n        super();\n        this._logger = logger;\n    }\n    /** @inheritDoc */\n    send(request) {\n        // Check that abort was not signaled before calling send\n        if (request.abortSignal && request.abortSignal.aborted) {\n            return Promise.reject(new AbortError());\n        }\n        if (!request.method) {\n            return Promise.reject(new Error(\"No method defined.\"));\n        }\n        if (!request.url) {\n            return Promise.reject(new Error(\"No url defined.\"));\n        }\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(request.method, request.url, true);\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            if (request.content === \"\") {\n                request.content = undefined;\n            }\n            if (request.content) {\n                // Explicitly setting the Content-Type header for React Native on Android platform.\n                if (isArrayBuffer(request.content)) {\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                }\n                else {\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n                }\n            }\n            const headers = request.headers;\n            if (headers) {\n                Object.keys(headers)\n                    .forEach((header) => {\n                    xhr.setRequestHeader(header, headers[header]);\n                });\n            }\n            if (request.responseType) {\n                xhr.responseType = request.responseType;\n            }\n            if (request.abortSignal) {\n                request.abortSignal.onabort = () => {\n                    xhr.abort();\n                    reject(new AbortError());\n                };\n            }\n            if (request.timeout) {\n                xhr.timeout = request.timeout;\n            }\n            xhr.onload = () => {\n                if (request.abortSignal) {\n                    request.abortSignal.onabort = null;\n                }\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\n                }\n                else {\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\n                }\n            };\n            xhr.onerror = () => {\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\n                reject(new HttpError(xhr.statusText, xhr.status));\n            };\n            xhr.ontimeout = () => {\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\n                reject(new TimeoutError());\n            };\n            xhr.send(request.content);\n        });\n    }\n}\n//# sourceMappingURL=XhrHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AbortError } from \"./Errors\";\nimport { FetchHttpClient } from \"./FetchHttpClient\";\nimport { HttpClient } from \"./HttpClient\";\nimport { Platform } from \"./Utils\";\nimport { XhrHttpClient } from \"./XhrHttpClient\";\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\nexport class DefaultHttpClient extends HttpClient {\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\n    constructor(logger) {\n        super();\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\n            this._httpClient = new FetchHttpClient(logger);\n        }\n        else if (typeof XMLHttpRequest !== \"undefined\") {\n            this._httpClient = new XhrHttpClient(logger);\n        }\n        else {\n            throw new Error(\"No usable HttpClient found.\");\n        }\n    }\n    /** @inheritDoc */\n    send(request) {\n        // Check that abort was not signaled before calling send\n        if (request.abortSignal && request.abortSignal.aborted) {\n            return Promise.reject(new AbortError());\n        }\n        if (!request.method) {\n            return Promise.reject(new Error(\"No method defined.\"));\n        }\n        if (!request.url) {\n            return Promise.reject(new Error(\"No url defined.\"));\n        }\n        return this._httpClient.send(request);\n    }\n    getCookieString(url) {\n        return this._httpClient.getCookieString(url);\n    }\n}\n//# sourceMappingURL=DefaultHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\n/** Specifies a specific HTTP transport type. */\nexport var HttpTransportType;\n(function (HttpTransportType) {\n    /** Specifies no transport preference. */\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\n    /** Specifies the WebSockets transport. */\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\n    /** Specifies the Server-Sent Events transport. */\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\n    /** Specifies the Long Polling transport. */\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\n})(HttpTransportType || (HttpTransportType = {}));\n/** Specifies the transfer format for a connection. */\nexport var TransferFormat;\n(function (TransferFormat) {\n    /** Specifies that only text data will be transmitted over the connection. */\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\n    /** Specifies that binary data will be transmitted over the connection. */\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\n})(TransferFormat || (TransferFormat = {}));\n//# sourceMappingURL=ITransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n/** Defines the type of a Hub Message. */\nexport var MessageType;\n(function (MessageType) {\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\n})(MessageType || (MessageType = {}));\n//# sourceMappingURL=IHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\nimport { AbortError } from \"./Errors\";\nimport { MessageType } from \"./IHubProtocol\";\nimport { LogLevel } from \"./ILogger\";\nimport { Subject } from \"./Subject\";\nimport { Arg, getErrorString, Platform } from \"./Utils\";\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\n/** Describes the current state of the {@link HubConnection} to the server. */\nexport var HubConnectionState;\n(function (HubConnectionState) {\n    /** The hub connection is disconnected. */\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\n    /** The hub connection is connecting. */\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\n    /** The hub connection is connected. */\n    HubConnectionState[\"Connected\"] = \"Connected\";\n    /** The hub connection is disconnecting. */\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\n    /** The hub connection is reconnecting. */\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\n})(HubConnectionState || (HubConnectionState = {}));\n/** Represents a connection to a SignalR Hub. */\nexport class HubConnection {\n    /** @internal */\n    // Using a public static factory method means we can have a private constructor and an _internal_\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\n    // public parameter-less constructor.\n    static create(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds) {\n        return new HubConnection(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds);\n    }\n    constructor(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds) {\n        this._nextKeepAlive = 0;\n        this._freezeEventListener = () => {\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\n        };\n        Arg.isRequired(connection, \"connection\");\n        Arg.isRequired(logger, \"logger\");\n        Arg.isRequired(protocol, \"protocol\");\n        this.serverTimeoutInMilliseconds = serverTimeoutInMilliseconds !== null && serverTimeoutInMilliseconds !== void 0 ? serverTimeoutInMilliseconds : DEFAULT_TIMEOUT_IN_MS;\n        this.keepAliveIntervalInMilliseconds = keepAliveIntervalInMilliseconds !== null && keepAliveIntervalInMilliseconds !== void 0 ? keepAliveIntervalInMilliseconds : DEFAULT_PING_INTERVAL_IN_MS;\n        this._logger = logger;\n        this._protocol = protocol;\n        this.connection = connection;\n        this._reconnectPolicy = reconnectPolicy;\n        this._handshakeProtocol = new HandshakeProtocol();\n        this.connection.onreceive = (data) => this._processIncomingData(data);\n        this.connection.onclose = (error) => this._connectionClosed(error);\n        this._callbacks = {};\n        this._methods = {};\n        this._closedCallbacks = [];\n        this._reconnectingCallbacks = [];\n        this._reconnectedCallbacks = [];\n        this._invocationId = 0;\n        this._receivedHandshakeResponse = false;\n        this._connectionState = HubConnectionState.Disconnected;\n        this._connectionStarted = false;\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\n    }\n    /** Indicates the state of the {@link HubConnection} to the server. */\n    get state() {\n        return this._connectionState;\n    }\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\n     *  in the disconnected state or if the negotiation step was skipped.\n     */\n    get connectionId() {\n        return this.connection ? (this.connection.connectionId || null) : null;\n    }\n    /** Indicates the url of the {@link HubConnection} to the server. */\n    get baseUrl() {\n        return this.connection.baseUrl || \"\";\n    }\n    /**\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\n     * Reconnecting states.\n     * @param {string} url The url to connect to.\n     */\n    set baseUrl(url) {\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\n        }\n        if (!url) {\n            throw new Error(\"The HubConnection url must be a valid url.\");\n        }\n        this.connection.baseUrl = url;\n    }\n    /** Starts the connection.\n     *\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\n     */\n    start() {\n        this._startPromise = this._startWithStateTransitions();\n        return this._startPromise;\n    }\n    async _startWithStateTransitions() {\n        if (this._connectionState !== HubConnectionState.Disconnected) {\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\n        }\n        this._connectionState = HubConnectionState.Connecting;\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\n        try {\n            await this._startInternal();\n            if (Platform.isBrowser) {\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\n            }\n            this._connectionState = HubConnectionState.Connected;\n            this._connectionStarted = true;\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\n        }\n        catch (e) {\n            this._connectionState = HubConnectionState.Disconnected;\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\n            return Promise.reject(e);\n        }\n    }\n    async _startInternal() {\n        this._stopDuringStartError = undefined;\n        this._receivedHandshakeResponse = false;\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\n        const handshakePromise = new Promise((resolve, reject) => {\n            this._handshakeResolver = resolve;\n            this._handshakeRejecter = reject;\n        });\n        await this.connection.start(this._protocol.transferFormat);\n        try {\n            const handshakeRequest = {\n                protocol: this._protocol.name,\n                version: this._protocol.version,\n            };\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\n            this._cleanupTimeout();\n            this._resetTimeoutPeriod();\n            this._resetKeepAliveInterval();\n            await handshakePromise;\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\n            // and the connection was closed.\n            if (this._stopDuringStartError) {\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\n                // will cause the calling continuation to get scheduled to run later.\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\n                throw this._stopDuringStartError;\n            }\n            if (!this.connection.features.inherentKeepAlive) {\n                await this._sendMessage(this._cachedPingMessage);\n            }\n        }\n        catch (e) {\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\n            this._cleanupTimeout();\n            this._cleanupPingTimer();\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\n            await this.connection.stop(e);\n            throw e;\n        }\n    }\n    /** Stops the connection.\n     *\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\n     */\n    async stop() {\n        // Capture the start promise before the connection might be restarted in an onclose callback.\n        const startPromise = this._startPromise;\n        this._stopPromise = this._stopInternal();\n        await this._stopPromise;\n        try {\n            // Awaiting undefined continues immediately\n            await startPromise;\n        }\n        catch (e) {\n            // This exception is returned to the user as a rejected Promise from the start method.\n        }\n    }\n    _stopInternal(error) {\n        if (this._connectionState === HubConnectionState.Disconnected) {\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\n            return Promise.resolve();\n        }\n        if (this._connectionState === HubConnectionState.Disconnecting) {\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\n            return this._stopPromise;\n        }\n        this._connectionState = HubConnectionState.Disconnecting;\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\n        if (this._reconnectDelayHandle) {\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\n            // fire the onclose callbacks.\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\n            clearTimeout(this._reconnectDelayHandle);\n            this._reconnectDelayHandle = undefined;\n            this._completeClose();\n            return Promise.resolve();\n        }\n        this._cleanupTimeout();\n        this._cleanupPingTimer();\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\n        // to the disconnected state if need be before HttpConnection.stop() completes.\n        return this.connection.stop(error);\n    }\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\n     *\n     * @typeparam T The type of the items returned by the server.\n     * @param {string} methodName The name of the server method to invoke.\n     * @param {any[]} args The arguments used to invoke the server method.\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\n     */\n    stream(methodName, ...args) {\n        const [streams, streamIds] = this._replaceStreamingParams(args);\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\n        // eslint-disable-next-line prefer-const\n        let promiseQueue;\n        const subject = new Subject();\n        subject.cancelCallback = () => {\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\n            delete this._callbacks[invocationDescriptor.invocationId];\n            return promiseQueue.then(() => {\n                return this._sendWithProtocol(cancelInvocation);\n            });\n        };\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\n            if (error) {\n                subject.error(error);\n                return;\n            }\n            else if (invocationEvent) {\n                // invocationEvent will not be null when an error is not passed to the callback\n                if (invocationEvent.type === MessageType.Completion) {\n                    if (invocationEvent.error) {\n                        subject.error(new Error(invocationEvent.error));\n                    }\n                    else {\n                        subject.complete();\n                    }\n                }\n                else {\n                    subject.next((invocationEvent.item));\n                }\n            }\n        };\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\n            .catch((e) => {\n            subject.error(e);\n            delete this._callbacks[invocationDescriptor.invocationId];\n        });\n        this._launchStreams(streams, promiseQueue);\n        return subject;\n    }\n    _sendMessage(message) {\n        this._resetKeepAliveInterval();\n        return this.connection.send(message);\n    }\n    /**\n     * Sends a js object to the server.\n     * @param message The js object to serialize and send.\n     */\n    _sendWithProtocol(message) {\n        return this._sendMessage(this._protocol.writeMessage(message));\n    }\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\n     *\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\n     * be processing the invocation.\n     *\n     * @param {string} methodName The name of the server method to invoke.\n     * @param {any[]} args The arguments used to invoke the server method.\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\n     */\n    send(methodName, ...args) {\n        const [streams, streamIds] = this._replaceStreamingParams(args);\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\n        this._launchStreams(streams, sendPromise);\n        return sendPromise;\n    }\n    /** Invokes a hub method on the server using the specified name and arguments.\n     *\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\n     * resolving the Promise.\n     *\n     * @typeparam T The expected return type.\n     * @param {string} methodName The name of the server method to invoke.\n     * @param {any[]} args The arguments used to invoke the server method.\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\n     */\n    invoke(methodName, ...args) {\n        const [streams, streamIds] = this._replaceStreamingParams(args);\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\n        const p = new Promise((resolve, reject) => {\n            // invocationId will always have a value for a non-blocking invocation\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                else if (invocationEvent) {\n                    // invocationEvent will not be null when an error is not passed to the callback\n                    if (invocationEvent.type === MessageType.Completion) {\n                        if (invocationEvent.error) {\n                            reject(new Error(invocationEvent.error));\n                        }\n                        else {\n                            resolve(invocationEvent.result);\n                        }\n                    }\n                    else {\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\n                    }\n                }\n            };\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\n                .catch((e) => {\n                reject(e);\n                // invocationId will always have a value for a non-blocking invocation\n                delete this._callbacks[invocationDescriptor.invocationId];\n            });\n            this._launchStreams(streams, promiseQueue);\n        });\n        return p;\n    }\n    on(methodName, newMethod) {\n        if (!methodName || !newMethod) {\n            return;\n        }\n        methodName = methodName.toLowerCase();\n        if (!this._methods[methodName]) {\n            this._methods[methodName] = [];\n        }\n        // Preventing adding the same handler multiple times.\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\n            return;\n        }\n        this._methods[methodName].push(newMethod);\n    }\n    off(methodName, method) {\n        if (!methodName) {\n            return;\n        }\n        methodName = methodName.toLowerCase();\n        const handlers = this._methods[methodName];\n        if (!handlers) {\n            return;\n        }\n        if (method) {\n            const removeIdx = handlers.indexOf(method);\n            if (removeIdx !== -1) {\n                handlers.splice(removeIdx, 1);\n                if (handlers.length === 0) {\n                    delete this._methods[methodName];\n                }\n            }\n        }\n        else {\n            delete this._methods[methodName];\n        }\n    }\n    /** Registers a handler that will be invoked when the connection is closed.\n     *\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\n     */\n    onclose(callback) {\n        if (callback) {\n            this._closedCallbacks.push(callback);\n        }\n    }\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\n     *\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\n     */\n    onreconnecting(callback) {\n        if (callback) {\n            this._reconnectingCallbacks.push(callback);\n        }\n    }\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\n     *\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\n     */\n    onreconnected(callback) {\n        if (callback) {\n            this._reconnectedCallbacks.push(callback);\n        }\n    }\n    _processIncomingData(data) {\n        this._cleanupTimeout();\n        if (!this._receivedHandshakeResponse) {\n            data = this._processHandshakeResponse(data);\n            this._receivedHandshakeResponse = true;\n        }\n        // Data may have all been read when processing handshake response\n        if (data) {\n            // Parse the messages\n            const messages = this._protocol.parseMessages(data, this._logger);\n            for (const message of messages) {\n                switch (message.type) {\n                    case MessageType.Invocation:\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        this._invokeClientMethod(message);\n                        break;\n                    case MessageType.StreamItem:\n                    case MessageType.Completion: {\n                        const callback = this._callbacks[message.invocationId];\n                        if (callback) {\n                            if (message.type === MessageType.Completion) {\n                                delete this._callbacks[message.invocationId];\n                            }\n                            try {\n                                callback(message);\n                            }\n                            catch (e) {\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\n                            }\n                        }\n                        break;\n                    }\n                    case MessageType.Ping:\n                        // Don't care about pings\n                        break;\n                    case MessageType.Close: {\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\n                        if (message.allowReconnect === true) {\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                            this.connection.stop(error);\n                        }\n                        else {\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\n                            this._stopPromise = this._stopInternal(error);\n                        }\n                        break;\n                    }\n                    default:\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\n                        break;\n                }\n            }\n        }\n        this._resetTimeoutPeriod();\n    }\n    _processHandshakeResponse(data) {\n        let responseMessage;\n        let remainingData;\n        try {\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\n        }\n        catch (e) {\n            const message = \"Error parsing handshake response: \" + e;\n            this._logger.log(LogLevel.Error, message);\n            const error = new Error(message);\n            this._handshakeRejecter(error);\n            throw error;\n        }\n        if (responseMessage.error) {\n            const message = \"Server returned handshake error: \" + responseMessage.error;\n            this._logger.log(LogLevel.Error, message);\n            const error = new Error(message);\n            this._handshakeRejecter(error);\n            throw error;\n        }\n        else {\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\n        }\n        this._handshakeResolver();\n        return remainingData;\n    }\n    _resetKeepAliveInterval() {\n        if (this.connection.features.inherentKeepAlive) {\n            return;\n        }\n        // Set the time we want the next keep alive to be sent\n        // Timer will be setup on next message receive\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\n        this._cleanupPingTimer();\n    }\n    _resetTimeoutPeriod() {\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\n            // Set the timeout timer\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\n            // Set keepAlive timer if there isn't one\n            if (this._pingServerHandle === undefined) {\n                let nextPing = this._nextKeepAlive - new Date().getTime();\n                if (nextPing < 0) {\n                    nextPing = 0;\n                }\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\n                this._pingServerHandle = setTimeout(async () => {\n                    if (this._connectionState === HubConnectionState.Connected) {\n                        try {\n                            await this._sendMessage(this._cachedPingMessage);\n                        }\n                        catch {\n                            // We don't care about the error. It should be seen elsewhere in the client.\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\n                            this._cleanupPingTimer();\n                        }\n                    }\n                }, nextPing);\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    serverTimeout() {\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\n    }\n    async _invokeClientMethod(invocationMessage) {\n        const methodName = invocationMessage.target.toLowerCase();\n        const methods = this._methods[methodName];\n        if (!methods) {\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\n            // No handlers provided by client but the server is expecting a response still, so we send an error\n            if (invocationMessage.invocationId) {\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\n            }\n            return;\n        }\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\n        const methodsCopy = methods.slice();\n        // Server expects a response\n        const expectsResponse = invocationMessage.invocationId ? true : false;\n        // We preserve the last result or exception but still call all handlers\n        let res;\n        let exception;\n        let completionMessage;\n        for (const m of methodsCopy) {\n            try {\n                const prevRes = res;\n                res = await m.apply(this, invocationMessage.arguments);\n                if (expectsResponse && res && prevRes) {\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\n                }\n                // Ignore exception if we got a result after, the exception will be logged\n                exception = undefined;\n            }\n            catch (e) {\n                exception = e;\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\n            }\n        }\n        if (completionMessage) {\n            await this._sendWithProtocol(completionMessage);\n        }\n        else if (expectsResponse) {\n            // If there is an exception that means either no result was given or a handler after a result threw\n            if (exception) {\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\n            }\n            else if (res !== undefined) {\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\n            }\n            else {\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\n            }\n            await this._sendWithProtocol(completionMessage);\n        }\n        else {\n            if (res) {\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\n            }\n        }\n    }\n    _connectionClosed(error) {\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\n        // If it has already completed, this should just noop.\n        if (this._handshakeResolver) {\n            this._handshakeResolver();\n        }\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\n        this._cleanupTimeout();\n        this._cleanupPingTimer();\n        if (this._connectionState === HubConnectionState.Disconnecting) {\n            this._completeClose(error);\n        }\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this._reconnect(error);\n        }\n        else if (this._connectionState === HubConnectionState.Connected) {\n            this._completeClose(error);\n        }\n        // If none of the above if conditions were true were called the HubConnection must be in either:\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\n        //    and potentially continue the reconnect() loop.\n        // 3. The Disconnected state in which case we're already done.\n    }\n    _completeClose(error) {\n        if (this._connectionStarted) {\n            this._connectionState = HubConnectionState.Disconnected;\n            this._connectionStarted = false;\n            if (Platform.isBrowser) {\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\n            }\n            try {\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\n            }\n            catch (e) {\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\n            }\n        }\n    }\n    async _reconnect(error) {\n        const reconnectStartTime = Date.now();\n        let previousReconnectAttempts = 0;\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\n        if (nextRetryDelay === null) {\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\n            this._completeClose(error);\n            return;\n        }\n        this._connectionState = HubConnectionState.Reconnecting;\n        if (error) {\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\n        }\n        else {\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\n        }\n        if (this._reconnectingCallbacks.length !== 0) {\n            try {\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\n            }\n            catch (e) {\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\n            }\n            // Exit early if an onreconnecting callback called connection.stop().\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\n                return;\n            }\n        }\n        while (nextRetryDelay !== null) {\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\n            await new Promise((resolve) => {\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\n            });\n            this._reconnectDelayHandle = undefined;\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\n                return;\n            }\n            try {\n                await this._startInternal();\n                this._connectionState = HubConnectionState.Connected;\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\n                if (this._reconnectedCallbacks.length !== 0) {\n                    try {\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\n                    }\n                    catch (e) {\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\n                    }\n                }\n                return;\n            }\n            catch (e) {\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\n                        this._completeClose();\n                    }\n                    return;\n                }\n                retryError = e instanceof Error ? e : new Error(e.toString());\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\n            }\n        }\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\n        this._completeClose();\n    }\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\n        try {\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\n                elapsedMilliseconds,\n                previousRetryCount,\n                retryReason,\n            });\n        }\n        catch (e) {\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\n            return null;\n        }\n    }\n    _cancelCallbacksWithError(error) {\n        const callbacks = this._callbacks;\n        this._callbacks = {};\n        Object.keys(callbacks)\n            .forEach((key) => {\n            const callback = callbacks[key];\n            try {\n                callback(null, error);\n            }\n            catch (e) {\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\n            }\n        });\n    }\n    _cleanupPingTimer() {\n        if (this._pingServerHandle) {\n            clearTimeout(this._pingServerHandle);\n            this._pingServerHandle = undefined;\n        }\n    }\n    _cleanupTimeout() {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n        }\n    }\n    _createInvocation(methodName, args, nonblocking, streamIds) {\n        if (nonblocking) {\n            if (streamIds.length !== 0) {\n                return {\n                    arguments: args,\n                    streamIds,\n                    target: methodName,\n                    type: MessageType.Invocation,\n                };\n            }\n            else {\n                return {\n                    arguments: args,\n                    target: methodName,\n                    type: MessageType.Invocation,\n                };\n            }\n        }\n        else {\n            const invocationId = this._invocationId;\n            this._invocationId++;\n            if (streamIds.length !== 0) {\n                return {\n                    arguments: args,\n                    invocationId: invocationId.toString(),\n                    streamIds,\n                    target: methodName,\n                    type: MessageType.Invocation,\n                };\n            }\n            else {\n                return {\n                    arguments: args,\n                    invocationId: invocationId.toString(),\n                    target: methodName,\n                    type: MessageType.Invocation,\n                };\n            }\n        }\n    }\n    _launchStreams(streams, promiseQueue) {\n        if (streams.length === 0) {\n            return;\n        }\n        // Synchronize stream data so they arrive in-order on the server\n        if (!promiseQueue) {\n            promiseQueue = Promise.resolve();\n        }\n        // We want to iterate over the keys, since the keys are the stream ids\n        // eslint-disable-next-line guard-for-in\n        for (const streamId in streams) {\n            streams[streamId].subscribe({\n                complete: () => {\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\n                },\n                error: (err) => {\n                    let message;\n                    if (err instanceof Error) {\n                        message = err.message;\n                    }\n                    else if (err && err.toString) {\n                        message = err.toString();\n                    }\n                    else {\n                        message = \"Unknown error\";\n                    }\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\n                },\n                next: (item) => {\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\n                },\n            });\n        }\n    }\n    _replaceStreamingParams(args) {\n        const streams = [];\n        const streamIds = [];\n        for (let i = 0; i < args.length; i++) {\n            const argument = args[i];\n            if (this._isObservable(argument)) {\n                const streamId = this._invocationId;\n                this._invocationId++;\n                // Store the stream for later use\n                streams[streamId] = argument;\n                streamIds.push(streamId.toString());\n                // remove stream from args\n                args.splice(i, 1);\n            }\n        }\n        return [streams, streamIds];\n    }\n    _isObservable(arg) {\n        // This allows other stream implementations to just work (like rxjs)\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\n    }\n    _createStreamInvocation(methodName, args, streamIds) {\n        const invocationId = this._invocationId;\n        this._invocationId++;\n        if (streamIds.length !== 0) {\n            return {\n                arguments: args,\n                invocationId: invocationId.toString(),\n                streamIds,\n                target: methodName,\n                type: MessageType.StreamInvocation,\n            };\n        }\n        else {\n            return {\n                arguments: args,\n                invocationId: invocationId.toString(),\n                target: methodName,\n                type: MessageType.StreamInvocation,\n            };\n        }\n    }\n    _createCancelInvocation(id) {\n        return {\n            invocationId: id,\n            type: MessageType.CancelInvocation,\n        };\n    }\n    _createStreamItemMessage(id, item) {\n        return {\n            invocationId: id,\n            item,\n            type: MessageType.StreamItem,\n        };\n    }\n    _createCompletionMessage(id, error, result) {\n        if (error) {\n            return {\n                error,\n                invocationId: id,\n                type: MessageType.Completion,\n            };\n        }\n        return {\n            invocationId: id,\n            result,\n            type: MessageType.Completion,\n        };\n    }\n}\n//# sourceMappingURL=HubConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\n// it's a very new API right now.\n// Not exported from index.\n/** @private */\nexport class AbortController {\n    constructor() {\n        this._isAborted = false;\n        this.onabort = null;\n    }\n    abort() {\n        if (!this._isAborted) {\n            this._isAborted = true;\n            if (this.onabort) {\n                this.onabort();\n            }\n        }\n    }\n    get signal() {\n        return this;\n    }\n    get aborted() {\n        return this._isAborted;\n    }\n}\n//# sourceMappingURL=AbortController.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AbortController } from \"./AbortController\";\nimport { HttpError, TimeoutError } from \"./Errors\";\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\n// Not exported from 'index', this type is internal.\n/** @private */\nexport class LongPollingTransport {\n    // This is an internal type, not exported from 'index' so this is really just internal.\n    get pollAborted() {\n        return this._pollAbort.aborted;\n    }\n    constructor(httpClient, logger, options) {\n        this._httpClient = httpClient;\n        this._logger = logger;\n        this._pollAbort = new AbortController();\n        this._options = options;\n        this._running = false;\n        this.onreceive = null;\n        this.onclose = null;\n    }\n    async connect(url, transferFormat) {\n        Arg.isRequired(url, \"url\");\n        Arg.isRequired(transferFormat, \"transferFormat\");\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n        this._url = url;\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\n        if (transferFormat === TransferFormat.Binary &&\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\n        }\n        const [name, value] = getUserAgentHeader();\n        const headers = { [name]: value, ...this._options.headers };\n        const pollOptions = {\n            abortSignal: this._pollAbort.signal,\n            headers,\n            timeout: 100000,\n            withCredentials: this._options.withCredentials,\n        };\n        if (transferFormat === TransferFormat.Binary) {\n            pollOptions.responseType = \"arraybuffer\";\n        }\n        // Make initial long polling request\n        // Server uses first long polling request to finish initializing connection and it returns without data\n        const pollUrl = `${url}&_=${Date.now()}`;\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\n        const response = await this._httpClient.get(pollUrl, pollOptions);\n        if (response.statusCode !== 200) {\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\n            // Mark running as false so that the poll immediately ends and runs the close logic\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\n            this._running = false;\n        }\n        else {\n            this._running = true;\n        }\n        this._receiving = this._poll(this._url, pollOptions);\n    }\n    async _poll(url, pollOptions) {\n        try {\n            while (this._running) {\n                try {\n                    const pollUrl = `${url}&_=${Date.now()}`;\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\n                    if (response.statusCode === 204) {\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\n                        this._running = false;\n                    }\n                    else if (response.statusCode !== 200) {\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\n                        // Unexpected status code\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\n                        this._running = false;\n                    }\n                    else {\n                        // Process the response\n                        if (response.content) {\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\n                            if (this.onreceive) {\n                                this.onreceive(response.content);\n                            }\n                        }\n                        else {\n                            // This is another way timeout manifest.\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\n                        }\n                    }\n                }\n                catch (e) {\n                    if (!this._running) {\n                        // Log but disregard errors that occur after stopping\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\n                    }\n                    else {\n                        if (e instanceof TimeoutError) {\n                            // Ignore timeouts and reissue the poll.\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\n                        }\n                        else {\n                            // Close the connection with the error as the result.\n                            this._closeError = e;\n                            this._running = false;\n                        }\n                    }\n                }\n            }\n        }\n        finally {\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\n            if (!this.pollAborted) {\n                this._raiseOnClose();\n            }\n        }\n    }\n    async send(data) {\n        if (!this._running) {\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\n        }\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\n    }\n    async stop() {\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\n        this._running = false;\n        this._pollAbort.abort();\n        try {\n            await this._receiving;\n            // Send DELETE to clean up long polling on the server\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\n            const headers = {};\n            const [name, value] = getUserAgentHeader();\n            headers[name] = value;\n            const deleteOptions = {\n                headers: { ...headers, ...this._options.headers },\n                timeout: this._options.timeout,\n                withCredentials: this._options.withCredentials,\n            };\n            await this._httpClient.delete(this._url, deleteOptions);\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\n        }\n        finally {\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\n            // Raise close event here instead of in polling\n            // It needs to happen after the DELETE request is sent\n            this._raiseOnClose();\n        }\n    }\n    _raiseOnClose() {\n        if (this.onclose) {\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\n            if (this._closeError) {\n                logMessage += \" Error: \" + this._closeError;\n            }\n            this._logger.log(LogLevel.Trace, logMessage);\n            this.onclose(this._closeError);\n        }\n    }\n}\n//# sourceMappingURL=LongPollingTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\n/** @private */\nexport class ServerSentEventsTransport {\n    constructor(httpClient, accessToken, logger, options) {\n        this._httpClient = httpClient;\n        this._accessToken = accessToken;\n        this._logger = logger;\n        this._options = options;\n        this.onreceive = null;\n        this.onclose = null;\n    }\n    async connect(url, transferFormat) {\n        Arg.isRequired(url, \"url\");\n        Arg.isRequired(transferFormat, \"transferFormat\");\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\n        this._url = url;\n        if (this._accessToken) {\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\n        }\n        return new Promise((resolve, reject) => {\n            let opened = false;\n            if (transferFormat !== TransferFormat.Text) {\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\n                return;\n            }\n            let eventSource;\n            if (Platform.isBrowser || Platform.isWebWorker) {\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\n            }\n            else {\n                // Non-browser passes cookies via the dictionary\n                const cookies = this._httpClient.getCookieString(url);\n                const headers = {};\n                headers.Cookie = cookies;\n                const [name, value] = getUserAgentHeader();\n                headers[name] = value;\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\n            }\n            try {\n                eventSource.onmessage = (e) => {\n                    if (this.onreceive) {\n                        try {\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\n                            this.onreceive(e.data);\n                        }\n                        catch (error) {\n                            this._close(error);\n                            return;\n                        }\n                    }\n                };\n                // @ts-ignore: not using event on purpose\n                eventSource.onerror = (e) => {\n                    // EventSource doesn't give any useful information about server side closes.\n                    if (opened) {\n                        this._close();\n                    }\n                    else {\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\n                    }\n                };\n                eventSource.onopen = () => {\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\n                    this._eventSource = eventSource;\n                    opened = true;\n                    resolve();\n                };\n            }\n            catch (e) {\n                reject(e);\n                return;\n            }\n        });\n    }\n    async send(data) {\n        if (!this._eventSource) {\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\n        }\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\n    }\n    stop() {\n        this._close();\n        return Promise.resolve();\n    }\n    _close(e) {\n        if (this._eventSource) {\n            this._eventSource.close();\n            this._eventSource = undefined;\n            if (this.onclose) {\n                this.onclose(e);\n            }\n        }\n    }\n}\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { HeaderNames } from \"./HeaderNames\";\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\n/** @private */\nexport class WebSocketTransport {\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\n        this._logger = logger;\n        this._accessTokenFactory = accessTokenFactory;\n        this._logMessageContent = logMessageContent;\n        this._webSocketConstructor = webSocketConstructor;\n        this._httpClient = httpClient;\n        this.onreceive = null;\n        this.onclose = null;\n        this._headers = headers;\n    }\n    async connect(url, transferFormat) {\n        Arg.isRequired(url, \"url\");\n        Arg.isRequired(transferFormat, \"transferFormat\");\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\n        let token;\n        if (this._accessTokenFactory) {\n            token = await this._accessTokenFactory();\n        }\n        return new Promise((resolve, reject) => {\n            url = url.replace(/^http/, \"ws\");\n            let webSocket;\n            const cookies = this._httpClient.getCookieString(url);\n            let opened = false;\n            if (Platform.isNode || Platform.isReactNative) {\n                const headers = {};\n                const [name, value] = getUserAgentHeader();\n                headers[name] = value;\n                if (token) {\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\n                }\n                if (cookies) {\n                    headers[HeaderNames.Cookie] = cookies;\n                }\n                // Only pass headers when in non-browser environments\n                webSocket = new this._webSocketConstructor(url, undefined, {\n                    headers: { ...headers, ...this._headers },\n                });\n            }\n            else {\n                if (token) {\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\n                }\n            }\n            if (!webSocket) {\n                // Chrome is not happy with passing 'undefined' as protocol\n                webSocket = new this._webSocketConstructor(url);\n            }\n            if (transferFormat === TransferFormat.Binary) {\n                webSocket.binaryType = \"arraybuffer\";\n            }\n            webSocket.onopen = (_event) => {\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\n                this._webSocket = webSocket;\n                opened = true;\n                resolve();\n            };\n            webSocket.onerror = (event) => {\n                let error = null;\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\n                    error = event.error;\n                }\n                else {\n                    error = \"There was an error with the transport\";\n                }\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\n            };\n            webSocket.onmessage = (message) => {\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\n                if (this.onreceive) {\n                    try {\n                        this.onreceive(message.data);\n                    }\n                    catch (error) {\n                        this._close(error);\n                        return;\n                    }\n                }\n            };\n            webSocket.onclose = (event) => {\n                // Don't call close handler if connection was never established\n                // We'll reject the connect call instead\n                if (opened) {\n                    this._close(event);\n                }\n                else {\n                    let error = null;\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\n                        error = event.error;\n                    }\n                    else {\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\n                            + \" either the endpoint may not be a SignalR endpoint,\"\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\n                    }\n                    reject(new Error(error));\n                }\n            };\n        });\n    }\n    send(data) {\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\n            this._webSocket.send(data);\n            return Promise.resolve();\n        }\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\n    }\n    stop() {\n        if (this._webSocket) {\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\n            this._close(undefined);\n        }\n        return Promise.resolve();\n    }\n    _close(event) {\n        // webSocket will be null if the transport did not start successfully\n        if (this._webSocket) {\n            // Clear websocket handlers because we are considering the socket closed now\n            this._webSocket.onclose = () => { };\n            this._webSocket.onmessage = () => { };\n            this._webSocket.onerror = () => { };\n            this._webSocket.close();\n            this._webSocket = undefined;\n        }\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\n        if (this.onclose) {\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\n            }\n            else if (event instanceof Error) {\n                this.onclose(event);\n            }\n            else {\n                this.onclose();\n            }\n        }\n    }\n    _isCloseEvent(event) {\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\n    }\n}\n//# sourceMappingURL=WebSocketTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\nimport { LogLevel } from \"./ILogger\";\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\nimport { LongPollingTransport } from \"./LongPollingTransport\";\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\nimport { WebSocketTransport } from \"./WebSocketTransport\";\nconst MAX_REDIRECTS = 100;\n/** @private */\nexport class HttpConnection {\n    constructor(url, options = {}) {\n        this._stopPromiseResolver = () => { };\n        this.features = {};\n        this._negotiateVersion = 1;\n        Arg.isRequired(url, \"url\");\n        this._logger = createLogger(options.logger);\n        this.baseUrl = this._resolveUrl(url);\n        options = options || {};\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\n        }\n        else {\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\n        }\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\n        let webSocketModule = null;\n        let eventSourceModule = null;\n        if (Platform.isNode && typeof require !== \"undefined\") {\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\n            // @ts-ignore: TS doesn't know about these names\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n            webSocketModule = requireFunc(\"ws\");\n            eventSourceModule = requireFunc(\"eventsource\");\n        }\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\n            options.WebSocket = WebSocket;\n        }\n        else if (Platform.isNode && !options.WebSocket) {\n            if (webSocketModule) {\n                options.WebSocket = webSocketModule;\n            }\n        }\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\n            options.EventSource = EventSource;\n        }\n        else if (Platform.isNode && !options.EventSource) {\n            if (typeof eventSourceModule !== \"undefined\") {\n                options.EventSource = eventSourceModule;\n            }\n        }\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\n        this._connectionStarted = false;\n        this._options = options;\n        this.onreceive = null;\n        this.onclose = null;\n    }\n    async start(transferFormat) {\n        transferFormat = transferFormat || TransferFormat.Binary;\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\n        if (this._connectionState !== \"Disconnected\" /* ConnectionState.Disconnected */) {\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\n        }\n        this._connectionState = \"Connecting\" /* ConnectionState.Connecting */;\n        this._startInternalPromise = this._startInternal(transferFormat);\n        await this._startInternalPromise;\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\n            // stop() was called and transitioned the client into the Disconnecting state.\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\n            this._logger.log(LogLevel.Error, message);\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\n            await this._stopPromise;\n            return Promise.reject(new AbortError(message));\n        }\n        else if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\n            // stop() was called and transitioned the client into the Disconnecting state.\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\n            this._logger.log(LogLevel.Error, message);\n            return Promise.reject(new AbortError(message));\n        }\n        this._connectionStarted = true;\n    }\n    send(data) {\n        if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\n        }\n        if (!this._sendQueue) {\n            this._sendQueue = new TransportSendQueue(this.transport);\n        }\n        // Transport will not be null if state is connected\n        return this._sendQueue.send(data);\n    }\n    async stop(error) {\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\n            return Promise.resolve();\n        }\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\n            return this._stopPromise;\n        }\n        this._connectionState = \"Disconnecting\" /* ConnectionState.Disconnecting */;\n        this._stopPromise = new Promise((resolve) => {\n            // Don't complete stop() until stopConnection() completes.\n            this._stopPromiseResolver = resolve;\n        });\n        // stopInternal should never throw so just observe it.\n        await this._stopInternal(error);\n        await this._stopPromise;\n    }\n    async _stopInternal(error) {\n        // Set error as soon as possible otherwise there is a race between\n        // the transport closing and providing an error and the error from a close message\n        // We would prefer the close message error.\n        this._stopError = error;\n        try {\n            await this._startInternalPromise;\n        }\n        catch (e) {\n            // This exception is returned to the user as a rejected Promise from the start method.\n        }\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\n        // stop was called during start() and start() failed.\n        if (this.transport) {\n            try {\n                await this.transport.stop();\n            }\n            catch (e) {\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\n                this._stopConnection();\n            }\n            this.transport = undefined;\n        }\n        else {\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\n        }\n    }\n    async _startInternal(transferFormat) {\n        // Store the original base url and the access token factory since they may change\n        // as part of negotiating\n        let url = this.baseUrl;\n        this._accessTokenFactory = this._options.accessTokenFactory;\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\n        try {\n            if (this._options.skipNegotiation) {\n                if (this._options.transport === HttpTransportType.WebSockets) {\n                    // No need to add a connection ID in this case\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\n                    // We should just call connect directly in this case.\n                    // No fallback or negotiate in this case.\n                    await this._startTransport(url, transferFormat);\n                }\n                else {\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\n                }\n            }\n            else {\n                let negotiateResponse = null;\n                let redirects = 0;\n                do {\n                    negotiateResponse = await this._getNegotiationResponse(url);\n                    // the user tries to stop the connection when it is being started\n                    if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */ || this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\n                    }\n                    if (negotiateResponse.error) {\n                        throw new Error(negotiateResponse.error);\n                    }\n                    if (negotiateResponse.ProtocolVersion) {\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\n                    }\n                    if (negotiateResponse.url) {\n                        url = negotiateResponse.url;\n                    }\n                    if (negotiateResponse.accessToken) {\n                        // Replace the current access token factory with one that uses\n                        // the returned access token\n                        const accessToken = negotiateResponse.accessToken;\n                        this._accessTokenFactory = () => accessToken;\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\n                        this._httpClient._accessToken = accessToken;\n                        this._httpClient._accessTokenFactory = undefined;\n                    }\n                    redirects++;\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\n                }\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\n            }\n            if (this.transport instanceof LongPollingTransport) {\n                this.features.inherentKeepAlive = true;\n            }\n            if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\n                this._connectionState = \"Connected\" /* ConnectionState.Connected */;\n            }\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\n        }\n        catch (e) {\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\n            this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\n            this.transport = undefined;\n            // if start fails, any active calls to stop assume that start will complete the stop promise\n            this._stopPromiseResolver();\n            return Promise.reject(e);\n        }\n    }\n    async _getNegotiationResponse(url) {\n        const headers = {};\n        const [name, value] = getUserAgentHeader();\n        headers[name] = value;\n        const negotiateUrl = this._resolveNegotiateUrl(url);\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\n        try {\n            const response = await this._httpClient.post(negotiateUrl, {\n                content: \"\",\n                headers: { ...headers, ...this._options.headers },\n                timeout: this._options.timeout,\n                withCredentials: this._options.withCredentials,\n            });\n            if (response.statusCode !== 200) {\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\n            }\n            const negotiateResponse = JSON.parse(response.content);\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\n                // Negotiate version 0 doesn't use connectionToken\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\n            }\n            return negotiateResponse;\n        }\n        catch (e) {\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\n            if (e instanceof HttpError) {\n                if (e.statusCode === 404) {\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\n                }\n            }\n            this._logger.log(LogLevel.Error, errorMessage);\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\n        }\n    }\n    _createConnectUrl(url, connectionToken) {\n        if (!connectionToken) {\n            return url;\n        }\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\n    }\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\n        if (this._isITransport(requestedTransport)) {\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\n            this.transport = requestedTransport;\n            await this._startTransport(connectUrl, requestedTransferFormat);\n            this.connectionId = negotiateResponse.connectionId;\n            return;\n        }\n        const transportExceptions = [];\n        const transports = negotiateResponse.availableTransports || [];\n        let negotiate = negotiateResponse;\n        for (const endpoint of transports) {\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\n            if (transportOrError instanceof Error) {\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\n                transportExceptions.push(`${endpoint.transport} failed:`);\n                transportExceptions.push(transportOrError);\n            }\n            else if (this._isITransport(transportOrError)) {\n                this.transport = transportOrError;\n                if (!negotiate) {\n                    try {\n                        negotiate = await this._getNegotiationResponse(url);\n                    }\n                    catch (ex) {\n                        return Promise.reject(ex);\n                    }\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\n                }\n                try {\n                    await this._startTransport(connectUrl, requestedTransferFormat);\n                    this.connectionId = negotiate.connectionId;\n                    return;\n                }\n                catch (ex) {\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\n                    negotiate = undefined;\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\n                    if (this._connectionState !== \"Connecting\" /* ConnectionState.Connecting */) {\n                        const message = \"Failed to select transport before stop() was called.\";\n                        this._logger.log(LogLevel.Debug, message);\n                        return Promise.reject(new AbortError(message));\n                    }\n                }\n            }\n        }\n        if (transportExceptions.length > 0) {\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\n        }\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\n    }\n    _constructTransport(transport) {\n        switch (transport) {\n            case HttpTransportType.WebSockets:\n                if (!this._options.WebSocket) {\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\n                }\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\n            case HttpTransportType.ServerSentEvents:\n                if (!this._options.EventSource) {\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\n                }\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\n            case HttpTransportType.LongPolling:\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\n            default:\n                throw new Error(`Unknown transport: ${transport}.`);\n        }\n    }\n    _startTransport(url, transferFormat) {\n        this.transport.onreceive = this.onreceive;\n        this.transport.onclose = (e) => this._stopConnection(e);\n        return this.transport.connect(url, transferFormat);\n    }\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat) {\n        const transport = HttpTransportType[endpoint.transport];\n        if (transport === null || transport === undefined) {\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\n        }\n        else {\n            if (transportMatches(requestedTransport, transport)) {\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\n                    }\n                    else {\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\n                        try {\n                            return this._constructTransport(transport);\n                        }\n                        catch (ex) {\n                            return ex;\n                        }\n                    }\n                }\n                else {\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\n                }\n            }\n            else {\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\n            }\n        }\n    }\n    _isITransport(transport) {\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\n    }\n    _stopConnection(error) {\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\n        this.transport = undefined;\n        // If we have a stopError, it takes precedence over the error from the transport\n        error = this._stopError || error;\n        this._stopError = undefined;\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\n            return;\n        }\n        if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\n        }\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\n            // A call to stop() induced this call to stopConnection and needs to be completed.\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\n            this._stopPromiseResolver();\n        }\n        if (error) {\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\n        }\n        else {\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\n        }\n        if (this._sendQueue) {\n            this._sendQueue.stop().catch((e) => {\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\n            });\n            this._sendQueue = undefined;\n        }\n        this.connectionId = undefined;\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\n        if (this._connectionStarted) {\n            this._connectionStarted = false;\n            try {\n                if (this.onclose) {\n                    this.onclose(error);\n                }\n            }\n            catch (e) {\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\n            }\n        }\n    }\n    _resolveUrl(url) {\n        // startsWith is not supported in IE\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\n            return url;\n        }\n        if (!Platform.isBrowser) {\n            throw new Error(`Cannot resolve '${url}'.`);\n        }\n        // Setting the url to the href propery of an anchor tag handles normalization\n        // for us. There are 3 main cases.\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\n        const aTag = window.document.createElement(\"a\");\n        aTag.href = url;\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\n        return aTag.href;\n    }\n    _resolveNegotiateUrl(url) {\n        const index = url.indexOf(\"?\");\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\n            negotiateUrl += \"/\";\n        }\n        negotiateUrl += \"negotiate\";\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\n            negotiateUrl += \"negotiateVersion=\" + this._negotiateVersion;\n        }\n        return negotiateUrl;\n    }\n}\nfunction transportMatches(requestedTransport, actualTransport) {\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\n}\n/** @private */\nexport class TransportSendQueue {\n    constructor(_transport) {\n        this._transport = _transport;\n        this._buffer = [];\n        this._executing = true;\n        this._sendBufferedData = new PromiseSource();\n        this._transportResult = new PromiseSource();\n        this._sendLoopPromise = this._sendLoop();\n    }\n    send(data) {\n        this._bufferData(data);\n        if (!this._transportResult) {\n            this._transportResult = new PromiseSource();\n        }\n        return this._transportResult.promise;\n    }\n    stop() {\n        this._executing = false;\n        this._sendBufferedData.resolve();\n        return this._sendLoopPromise;\n    }\n    _bufferData(data) {\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\n        }\n        this._buffer.push(data);\n        this._sendBufferedData.resolve();\n    }\n    async _sendLoop() {\n        while (true) {\n            await this._sendBufferedData.promise;\n            if (!this._executing) {\n                if (this._transportResult) {\n                    this._transportResult.reject(\"Connection stopped.\");\n                }\n                break;\n            }\n            this._sendBufferedData = new PromiseSource();\n            const transportResult = this._transportResult;\n            this._transportResult = undefined;\n            const data = typeof (this._buffer[0]) === \"string\" ?\n                this._buffer.join(\"\") :\n                TransportSendQueue._concatBuffers(this._buffer);\n            this._buffer.length = 0;\n            try {\n                await this._transport.send(data);\n                transportResult.resolve();\n            }\n            catch (error) {\n                transportResult.reject(error);\n            }\n        }\n    }\n    static _concatBuffers(arrayBuffers) {\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\n        const result = new Uint8Array(totalLength);\n        let offset = 0;\n        for (const item of arrayBuffers) {\n            result.set(new Uint8Array(item), offset);\n            offset += item.byteLength;\n        }\n        return result.buffer;\n    }\n}\nclass PromiseSource {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\n    }\n    resolve() {\n        this._resolver();\n    }\n    reject(reason) {\n        this._rejecter(reason);\n    }\n}\n//# sourceMappingURL=HttpConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// Not exported from index\n/** @private */\nexport class TextMessageFormat {\n    static write(output) {\n        return `${output}${TextMessageFormat.RecordSeparator}`;\n    }\n    static parse(input) {\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\n            throw new Error(\"Message is incomplete.\");\n        }\n        const messages = input.split(TextMessageFormat.RecordSeparator);\n        messages.pop();\n        return messages;\n    }\n}\nTextMessageFormat.RecordSeparatorCode = 0x1e;\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\n//# sourceMappingURL=TextMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { TextMessageFormat } from \"./TextMessageFormat\";\nimport { isArrayBuffer } from \"./Utils\";\n/** @private */\nexport class HandshakeProtocol {\n    // Handshake request is always JSON\n    writeHandshakeRequest(handshakeRequest) {\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\n    }\n    parseHandshakeResponse(data) {\n        let messageData;\n        let remainingData;\n        if (isArrayBuffer(data)) {\n            // Format is binary but still need to read JSON text from handshake response\n            const binaryData = new Uint8Array(data);\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\n            if (separatorIndex === -1) {\n                throw new Error(\"Message is incomplete.\");\n            }\n            // content before separator is handshake response\n            // optional content after is additional messages\n            const responseLength = separatorIndex + 1;\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\n        }\n        else {\n            const textData = data;\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\n            if (separatorIndex === -1) {\n                throw new Error(\"Message is incomplete.\");\n            }\n            // content before separator is handshake response\n            // optional content after is additional messages\n            const responseLength = separatorIndex + 1;\n            messageData = textData.substring(0, responseLength);\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\n        }\n        // At this point we should have just the single handshake message\n        const messages = TextMessageFormat.parse(messageData);\n        const response = JSON.parse(messages[0]);\n        if (response.type) {\n            throw new Error(\"Expected a handshake response from the server.\");\n        }\n        const responseMessage = response;\n        // multiple messages could have arrived with handshake\n        // return additional data to be parsed as usual, or null if all parsed\n        return [remainingData, responseMessage];\n    }\n}\n//# sourceMappingURL=HandshakeProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { SubjectSubscription } from \"./Utils\";\n/** Stream implementation to stream items to the server. */\nexport class Subject {\n    constructor() {\n        this.observers = [];\n    }\n    next(item) {\n        for (const observer of this.observers) {\n            observer.next(item);\n        }\n    }\n    error(err) {\n        for (const observer of this.observers) {\n            if (observer.error) {\n                observer.error(err);\n            }\n        }\n    }\n    complete() {\n        for (const observer of this.observers) {\n            if (observer.complete) {\n                observer.complete();\n            }\n        }\n    }\n    subscribe(observer) {\n        this.observers.push(observer);\n        return new SubjectSubscription(this, observer);\n    }\n}\n//# sourceMappingURL=Subject.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { MessageType } from \"./IHubProtocol\";\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { NullLogger } from \"./Loggers\";\nimport { TextMessageFormat } from \"./TextMessageFormat\";\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\n/** Implements the JSON Hub Protocol. */\nexport class JsonHubProtocol {\n    constructor() {\n        /** @inheritDoc */\n        this.name = JSON_HUB_PROTOCOL_NAME;\n        /** @inheritDoc */\n        this.version = 1;\n        /** @inheritDoc */\n        this.transferFormat = TransferFormat.Text;\n    }\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\n     *\n     * @param {string} input A string containing the serialized representation.\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\n     */\n    parseMessages(input, logger) {\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\n        if (typeof input !== \"string\") {\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\n        }\n        if (!input) {\n            return [];\n        }\n        if (logger === null) {\n            logger = NullLogger.instance;\n        }\n        // Parse the messages\n        const messages = TextMessageFormat.parse(input);\n        const hubMessages = [];\n        for (const message of messages) {\n            const parsedMessage = JSON.parse(message);\n            if (typeof parsedMessage.type !== \"number\") {\n                throw new Error(\"Invalid payload.\");\n            }\n            switch (parsedMessage.type) {\n                case MessageType.Invocation:\n                    this._isInvocationMessage(parsedMessage);\n                    break;\n                case MessageType.StreamItem:\n                    this._isStreamItemMessage(parsedMessage);\n                    break;\n                case MessageType.Completion:\n                    this._isCompletionMessage(parsedMessage);\n                    break;\n                case MessageType.Ping:\n                    // Single value, no need to validate\n                    break;\n                case MessageType.Close:\n                    // All optional values, no need to validate\n                    break;\n                default:\n                    // Future protocol changes can add message types, old clients can ignore them\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\n                    continue;\n            }\n            hubMessages.push(parsedMessage);\n        }\n        return hubMessages;\n    }\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\n     *\n     * @param {HubMessage} message The message to write.\n     * @returns {string} A string containing the serialized representation of the message.\n     */\n    writeMessage(message) {\n        return TextMessageFormat.write(JSON.stringify(message));\n    }\n    _isInvocationMessage(message) {\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\n        if (message.invocationId !== undefined) {\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\n        }\n    }\n    _isStreamItemMessage(message) {\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\n        if (message.item === undefined) {\n            throw new Error(\"Invalid payload for StreamItem message.\");\n        }\n    }\n    _isCompletionMessage(message) {\n        if (message.result && message.error) {\n            throw new Error(\"Invalid payload for Completion message.\");\n        }\n        if (!message.result && message.error) {\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\n        }\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\n    }\n    _assertNotEmptyString(value, errorMessage) {\n        if (typeof value !== \"string\" || value === \"\") {\n            throw new Error(errorMessage);\n        }\n    }\n}\n//# sourceMappingURL=JsonHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\nimport { HttpConnection } from \"./HttpConnection\";\nimport { HubConnection } from \"./HubConnection\";\nimport { LogLevel } from \"./ILogger\";\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\nimport { NullLogger } from \"./Loggers\";\nimport { Arg, ConsoleLogger } from \"./Utils\";\nconst LogLevelNameMapping = {\n    trace: LogLevel.Trace,\n    debug: LogLevel.Debug,\n    info: LogLevel.Information,\n    information: LogLevel.Information,\n    warn: LogLevel.Warning,\n    warning: LogLevel.Warning,\n    error: LogLevel.Error,\n    critical: LogLevel.Critical,\n    none: LogLevel.None,\n};\nfunction parseLogLevel(name) {\n    // Case-insensitive matching via lower-casing\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\n    if (typeof mapping !== \"undefined\") {\n        return mapping;\n    }\n    else {\n        throw new Error(`Unknown log level: ${name}`);\n    }\n}\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\nexport class HubConnectionBuilder {\n    configureLogging(logging) {\n        Arg.isRequired(logging, \"logging\");\n        if (isLogger(logging)) {\n            this.logger = logging;\n        }\n        else if (typeof logging === \"string\") {\n            const logLevel = parseLogLevel(logging);\n            this.logger = new ConsoleLogger(logLevel);\n        }\n        else {\n            this.logger = new ConsoleLogger(logging);\n        }\n        return this;\n    }\n    withUrl(url, transportTypeOrOptions) {\n        Arg.isRequired(url, \"url\");\n        Arg.isNotEmpty(url, \"url\");\n        this.url = url;\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\n        if (typeof transportTypeOrOptions === \"object\") {\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\n        }\n        else {\n            this.httpConnectionOptions = {\n                ...this.httpConnectionOptions,\n                transport: transportTypeOrOptions,\n            };\n        }\n        return this;\n    }\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\n     *\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\n     */\n    withHubProtocol(protocol) {\n        Arg.isRequired(protocol, \"protocol\");\n        this.protocol = protocol;\n        return this;\n    }\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\n        if (this.reconnectPolicy) {\n            throw new Error(\"A reconnectPolicy has already been set.\");\n        }\n        if (!retryDelaysOrReconnectPolicy) {\n            this.reconnectPolicy = new DefaultReconnectPolicy();\n        }\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\n        }\n        else {\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\n        }\n        return this;\n    }\n    /** Configures {@link @microsoft/signalr.HubConnection.serverTimeoutInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\n     *\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\n     */\n    withServerTimeout(milliseconds) {\n        Arg.isRequired(milliseconds, \"milliseconds\");\n        this._serverTimeoutInMilliseconds = milliseconds;\n        return this;\n    }\n    /** Configures {@link @microsoft/signalr.HubConnection.keepAliveIntervalInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\n     *\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\n     */\n    withKeepAliveInterval(milliseconds) {\n        Arg.isRequired(milliseconds, \"milliseconds\");\n        this._keepAliveIntervalInMilliseconds = milliseconds;\n        return this;\n    }\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\n     *\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\n     */\n    build() {\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\n        // provided to configureLogger\n        const httpConnectionOptions = this.httpConnectionOptions || {};\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\n        if (httpConnectionOptions.logger === undefined) {\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\n            httpConnectionOptions.logger = this.logger;\n        }\n        // Now create the connection\n        if (!this.url) {\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\n        }\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy, this._serverTimeoutInMilliseconds, this._keepAliveIntervalInMilliseconds);\n    }\n}\nfunction isLogger(logger) {\n    return logger.log !== undefined;\n}\n//# sourceMappingURL=HubConnectionBuilder.js.map","// Integer Utility\nexport var UINT32_MAX = 4294967295;\n// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\nexport function setUint64(view, offset, value) {\n    var high = value / 4294967296;\n    var low = value; // high bits are truncated by DataView\n    view.setUint32(offset, high);\n    view.setUint32(offset + 4, low);\n}\nexport function setInt64(view, offset, value) {\n    var high = Math.floor(value / 4294967296);\n    var low = value; // high bits are truncated by DataView\n    view.setUint32(offset, high);\n    view.setUint32(offset + 4, low);\n}\nexport function getInt64(view, offset) {\n    var high = view.getInt32(offset);\n    var low = view.getUint32(offset + 4);\n    return high * 4294967296 + low;\n}\nexport function getUint64(view, offset) {\n    var high = view.getUint32(offset);\n    var low = view.getUint32(offset + 4);\n    return high * 4294967296 + low;\n}\n//# sourceMappingURL=int.mjs.map","var _a, _b, _c;\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { UINT32_MAX } from \"./int.mjs\";\nvar TEXT_ENCODING_AVAILABLE = (typeof process === \"undefined\" || ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a[\"TEXT_ENCODING\"]) !== \"never\") &&\n    typeof TextEncoder !== \"undefined\" &&\n    typeof TextDecoder !== \"undefined\";\nexport function utf8Count(str) {\n    var strLength = str.length;\n    var byteLength = 0;\n    var pos = 0;\n    while (pos < strLength) {\n        var value = str.charCodeAt(pos++);\n        if ((value & 0xffffff80) === 0) {\n            // 1-byte\n            byteLength++;\n            continue;\n        }\n        else if ((value & 0xfffff800) === 0) {\n            // 2-bytes\n            byteLength += 2;\n        }\n        else {\n            // handle surrogate pair\n            if (value >= 0xd800 && value <= 0xdbff) {\n                // high surrogate\n                if (pos < strLength) {\n                    var extra = str.charCodeAt(pos);\n                    if ((extra & 0xfc00) === 0xdc00) {\n                        ++pos;\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                    }\n                }\n            }\n            if ((value & 0xffff0000) === 0) {\n                // 3-byte\n                byteLength += 3;\n            }\n            else {\n                // 4-byte\n                byteLength += 4;\n            }\n        }\n    }\n    return byteLength;\n}\nexport function utf8EncodeJs(str, output, outputOffset) {\n    var strLength = str.length;\n    var offset = outputOffset;\n    var pos = 0;\n    while (pos < strLength) {\n        var value = str.charCodeAt(pos++);\n        if ((value & 0xffffff80) === 0) {\n            // 1-byte\n            output[offset++] = value;\n            continue;\n        }\n        else if ((value & 0xfffff800) === 0) {\n            // 2-bytes\n            output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n        }\n        else {\n            // handle surrogate pair\n            if (value >= 0xd800 && value <= 0xdbff) {\n                // high surrogate\n                if (pos < strLength) {\n                    var extra = str.charCodeAt(pos);\n                    if ((extra & 0xfc00) === 0xdc00) {\n                        ++pos;\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                    }\n                }\n            }\n            if ((value & 0xffff0000) === 0) {\n                // 3-byte\n                output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n                output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n            }\n            else {\n                // 4-byte\n                output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n                output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n                output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n            }\n        }\n        output[offset++] = (value & 0x3f) | 0x80;\n    }\n}\nvar sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport var TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n    ? UINT32_MAX\n    : typeof process !== \"undefined\" && ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b[\"TEXT_ENCODING\"]) !== \"force\"\n        ? 200\n        : 0;\nfunction utf8EncodeTEencode(str, output, outputOffset) {\n    output.set(sharedTextEncoder.encode(str), outputOffset);\n}\nfunction utf8EncodeTEencodeInto(str, output, outputOffset) {\n    sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));\n}\nexport var utf8EncodeTE = (sharedTextEncoder === null || sharedTextEncoder === void 0 ? void 0 : sharedTextEncoder.encodeInto) ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\nvar CHUNK_SIZE = 4096;\nexport function utf8DecodeJs(bytes, inputOffset, byteLength) {\n    var offset = inputOffset;\n    var end = offset + byteLength;\n    var units = [];\n    var result = \"\";\n    while (offset < end) {\n        var byte1 = bytes[offset++];\n        if ((byte1 & 0x80) === 0) {\n            // 1 byte\n            units.push(byte1);\n        }\n        else if ((byte1 & 0xe0) === 0xc0) {\n            // 2 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            units.push(((byte1 & 0x1f) << 6) | byte2);\n        }\n        else if ((byte1 & 0xf0) === 0xe0) {\n            // 3 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            var byte3 = bytes[offset++] & 0x3f;\n            units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n        }\n        else if ((byte1 & 0xf8) === 0xf0) {\n            // 4 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            var byte3 = bytes[offset++] & 0x3f;\n            var byte4 = bytes[offset++] & 0x3f;\n            var unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n            if (unit > 0xffff) {\n                unit -= 0x10000;\n                units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n                unit = 0xdc00 | (unit & 0x3ff);\n            }\n            units.push(unit);\n        }\n        else {\n            units.push(byte1);\n        }\n        if (units.length >= CHUNK_SIZE) {\n            result += String.fromCharCode.apply(String, units);\n            units.length = 0;\n        }\n    }\n    if (units.length > 0) {\n        result += String.fromCharCode.apply(String, units);\n    }\n    return result;\n}\nvar sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport var TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n    ? UINT32_MAX\n    : typeof process !== \"undefined\" && ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c[\"TEXT_DECODER\"]) !== \"force\"\n        ? 200\n        : 0;\nexport function utf8DecodeTD(bytes, inputOffset, byteLength) {\n    var stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n    return sharedTextDecoder.decode(stringBytes);\n}\n//# sourceMappingURL=utf8.mjs.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar DecodeError = /** @class */ (function (_super) {\n    __extends(DecodeError, _super);\n    function DecodeError(message) {\n        var _this = _super.call(this, message) || this;\n        // fix the prototype chain in a cross-platform way\n        var proto = Object.create(DecodeError.prototype);\n        Object.setPrototypeOf(_this, proto);\n        Object.defineProperty(_this, \"name\", {\n            configurable: true,\n            enumerable: false,\n            value: DecodeError.name,\n        });\n        return _this;\n    }\n    return DecodeError;\n}(Error));\nexport { DecodeError };\n//# sourceMappingURL=DecodeError.mjs.map","/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nvar ExtData = /** @class */ (function () {\n    function ExtData(type, data) {\n        this.type = type;\n        this.data = data;\n    }\n    return ExtData;\n}());\nexport { ExtData };\n//# sourceMappingURL=ExtData.mjs.map","// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError.mjs\";\nimport { getInt64, setInt64 } from \"./utils/int.mjs\";\nexport var EXT_TIMESTAMP = -1;\nvar TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nvar TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\nexport function encodeTimeSpecToTimestamp(_a) {\n    var sec = _a.sec, nsec = _a.nsec;\n    if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n        // Here sec >= 0 && nsec >= 0\n        if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n            // timestamp 32 = { sec32 (unsigned) }\n            var rv = new Uint8Array(4);\n            var view = new DataView(rv.buffer);\n            view.setUint32(0, sec);\n            return rv;\n        }\n        else {\n            // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n            var secHigh = sec / 0x100000000;\n            var secLow = sec & 0xffffffff;\n            var rv = new Uint8Array(8);\n            var view = new DataView(rv.buffer);\n            // nsec30 | secHigh2\n            view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n            // secLow32\n            view.setUint32(4, secLow);\n            return rv;\n        }\n    }\n    else {\n        // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n        var rv = new Uint8Array(12);\n        var view = new DataView(rv.buffer);\n        view.setUint32(0, nsec);\n        setInt64(view, 4, sec);\n        return rv;\n    }\n}\nexport function encodeDateToTimeSpec(date) {\n    var msec = date.getTime();\n    var sec = Math.floor(msec / 1e3);\n    var nsec = (msec - sec * 1e3) * 1e6;\n    // Normalizes { sec, nsec } to ensure nsec is unsigned.\n    var nsecInSec = Math.floor(nsec / 1e9);\n    return {\n        sec: sec + nsecInSec,\n        nsec: nsec - nsecInSec * 1e9,\n    };\n}\nexport function encodeTimestampExtension(object) {\n    if (object instanceof Date) {\n        var timeSpec = encodeDateToTimeSpec(object);\n        return encodeTimeSpecToTimestamp(timeSpec);\n    }\n    else {\n        return null;\n    }\n}\nexport function decodeTimestampToTimeSpec(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    // data may be 32, 64, or 96 bits\n    switch (data.byteLength) {\n        case 4: {\n            // timestamp 32 = { sec32 }\n            var sec = view.getUint32(0);\n            var nsec = 0;\n            return { sec: sec, nsec: nsec };\n        }\n        case 8: {\n            // timestamp 64 = { nsec30, sec34 }\n            var nsec30AndSecHigh2 = view.getUint32(0);\n            var secLow32 = view.getUint32(4);\n            var sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n            var nsec = nsec30AndSecHigh2 >>> 2;\n            return { sec: sec, nsec: nsec };\n        }\n        case 12: {\n            // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n            var sec = getInt64(view, 4);\n            var nsec = view.getUint32(0);\n            return { sec: sec, nsec: nsec };\n        }\n        default:\n            throw new DecodeError(\"Unrecognized data size for timestamp (expected 4, 8, or 12): \".concat(data.length));\n    }\n}\nexport function decodeTimestampExtension(data) {\n    var timeSpec = decodeTimestampToTimeSpec(data);\n    return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\nexport var timestampExtension = {\n    type: EXT_TIMESTAMP,\n    encode: encodeTimestampExtension,\n    decode: decodeTimestampExtension,\n};\n//# sourceMappingURL=timestamp.mjs.map","// ExtensionCodec to handle MessagePack extensions\nimport { ExtData } from \"./ExtData.mjs\";\nimport { timestampExtension } from \"./timestamp.mjs\";\nvar ExtensionCodec = /** @class */ (function () {\n    function ExtensionCodec() {\n        // built-in extensions\n        this.builtInEncoders = [];\n        this.builtInDecoders = [];\n        // custom extensions\n        this.encoders = [];\n        this.decoders = [];\n        this.register(timestampExtension);\n    }\n    ExtensionCodec.prototype.register = function (_a) {\n        var type = _a.type, encode = _a.encode, decode = _a.decode;\n        if (type >= 0) {\n            // custom extensions\n            this.encoders[type] = encode;\n            this.decoders[type] = decode;\n        }\n        else {\n            // built-in extensions\n            var index = 1 + type;\n            this.builtInEncoders[index] = encode;\n            this.builtInDecoders[index] = decode;\n        }\n    };\n    ExtensionCodec.prototype.tryToEncode = function (object, context) {\n        // built-in extensions\n        for (var i = 0; i < this.builtInEncoders.length; i++) {\n            var encodeExt = this.builtInEncoders[i];\n            if (encodeExt != null) {\n                var data = encodeExt(object, context);\n                if (data != null) {\n                    var type = -1 - i;\n                    return new ExtData(type, data);\n                }\n            }\n        }\n        // custom extensions\n        for (var i = 0; i < this.encoders.length; i++) {\n            var encodeExt = this.encoders[i];\n            if (encodeExt != null) {\n                var data = encodeExt(object, context);\n                if (data != null) {\n                    var type = i;\n                    return new ExtData(type, data);\n                }\n            }\n        }\n        if (object instanceof ExtData) {\n            // to keep ExtData as is\n            return object;\n        }\n        return null;\n    };\n    ExtensionCodec.prototype.decode = function (data, type, context) {\n        var decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n        if (decodeExt) {\n            return decodeExt(data, type, context);\n        }\n        else {\n            // decode() does not fail, returns ExtData instead.\n            return new ExtData(type, data);\n        }\n    };\n    ExtensionCodec.defaultCodec = new ExtensionCodec();\n    return ExtensionCodec;\n}());\nexport { ExtensionCodec };\n//# sourceMappingURL=ExtensionCodec.mjs.map","export function ensureUint8Array(buffer) {\n    if (buffer instanceof Uint8Array) {\n        return buffer;\n    }\n    else if (ArrayBuffer.isView(buffer)) {\n        return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    }\n    else if (buffer instanceof ArrayBuffer) {\n        return new Uint8Array(buffer);\n    }\n    else {\n        // ArrayLike<number>\n        return Uint8Array.from(buffer);\n    }\n}\nexport function createDataView(buffer) {\n    if (buffer instanceof ArrayBuffer) {\n        return new DataView(buffer);\n    }\n    var bufferView = ensureUint8Array(buffer);\n    return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n//# sourceMappingURL=typedArrays.mjs.map","import { utf8EncodeJs, utf8Count, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8.mjs\";\nimport { ExtensionCodec } from \"./ExtensionCodec.mjs\";\nimport { setInt64, setUint64 } from \"./utils/int.mjs\";\nimport { ensureUint8Array } from \"./utils/typedArrays.mjs\";\nexport var DEFAULT_MAX_DEPTH = 100;\nexport var DEFAULT_INITIAL_BUFFER_SIZE = 2048;\nvar Encoder = /** @class */ (function () {\n    function Encoder(extensionCodec, context, maxDepth, initialBufferSize, sortKeys, forceFloat32, ignoreUndefined, forceIntegerToFloat) {\n        if (extensionCodec === void 0) { extensionCodec = ExtensionCodec.defaultCodec; }\n        if (context === void 0) { context = undefined; }\n        if (maxDepth === void 0) { maxDepth = DEFAULT_MAX_DEPTH; }\n        if (initialBufferSize === void 0) { initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE; }\n        if (sortKeys === void 0) { sortKeys = false; }\n        if (forceFloat32 === void 0) { forceFloat32 = false; }\n        if (ignoreUndefined === void 0) { ignoreUndefined = false; }\n        if (forceIntegerToFloat === void 0) { forceIntegerToFloat = false; }\n        this.extensionCodec = extensionCodec;\n        this.context = context;\n        this.maxDepth = maxDepth;\n        this.initialBufferSize = initialBufferSize;\n        this.sortKeys = sortKeys;\n        this.forceFloat32 = forceFloat32;\n        this.ignoreUndefined = ignoreUndefined;\n        this.forceIntegerToFloat = forceIntegerToFloat;\n        this.pos = 0;\n        this.view = new DataView(new ArrayBuffer(this.initialBufferSize));\n        this.bytes = new Uint8Array(this.view.buffer);\n    }\n    Encoder.prototype.reinitializeState = function () {\n        this.pos = 0;\n    };\n    /**\n     * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n     *\n     * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n     */\n    Encoder.prototype.encodeSharedRef = function (object) {\n        this.reinitializeState();\n        this.doEncode(object, 1);\n        return this.bytes.subarray(0, this.pos);\n    };\n    /**\n     * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n     */\n    Encoder.prototype.encode = function (object) {\n        this.reinitializeState();\n        this.doEncode(object, 1);\n        return this.bytes.slice(0, this.pos);\n    };\n    Encoder.prototype.doEncode = function (object, depth) {\n        if (depth > this.maxDepth) {\n            throw new Error(\"Too deep objects in depth \".concat(depth));\n        }\n        if (object == null) {\n            this.encodeNil();\n        }\n        else if (typeof object === \"boolean\") {\n            this.encodeBoolean(object);\n        }\n        else if (typeof object === \"number\") {\n            this.encodeNumber(object);\n        }\n        else if (typeof object === \"string\") {\n            this.encodeString(object);\n        }\n        else {\n            this.encodeObject(object, depth);\n        }\n    };\n    Encoder.prototype.ensureBufferSizeToWrite = function (sizeToWrite) {\n        var requiredSize = this.pos + sizeToWrite;\n        if (this.view.byteLength < requiredSize) {\n            this.resizeBuffer(requiredSize * 2);\n        }\n    };\n    Encoder.prototype.resizeBuffer = function (newSize) {\n        var newBuffer = new ArrayBuffer(newSize);\n        var newBytes = new Uint8Array(newBuffer);\n        var newView = new DataView(newBuffer);\n        newBytes.set(this.bytes);\n        this.view = newView;\n        this.bytes = newBytes;\n    };\n    Encoder.prototype.encodeNil = function () {\n        this.writeU8(0xc0);\n    };\n    Encoder.prototype.encodeBoolean = function (object) {\n        if (object === false) {\n            this.writeU8(0xc2);\n        }\n        else {\n            this.writeU8(0xc3);\n        }\n    };\n    Encoder.prototype.encodeNumber = function (object) {\n        if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n            if (object >= 0) {\n                if (object < 0x80) {\n                    // positive fixint\n                    this.writeU8(object);\n                }\n                else if (object < 0x100) {\n                    // uint 8\n                    this.writeU8(0xcc);\n                    this.writeU8(object);\n                }\n                else if (object < 0x10000) {\n                    // uint 16\n                    this.writeU8(0xcd);\n                    this.writeU16(object);\n                }\n                else if (object < 0x100000000) {\n                    // uint 32\n                    this.writeU8(0xce);\n                    this.writeU32(object);\n                }\n                else {\n                    // uint 64\n                    this.writeU8(0xcf);\n                    this.writeU64(object);\n                }\n            }\n            else {\n                if (object >= -0x20) {\n                    // negative fixint\n                    this.writeU8(0xe0 | (object + 0x20));\n                }\n                else if (object >= -0x80) {\n                    // int 8\n                    this.writeU8(0xd0);\n                    this.writeI8(object);\n                }\n                else if (object >= -0x8000) {\n                    // int 16\n                    this.writeU8(0xd1);\n                    this.writeI16(object);\n                }\n                else if (object >= -0x80000000) {\n                    // int 32\n                    this.writeU8(0xd2);\n                    this.writeI32(object);\n                }\n                else {\n                    // int 64\n                    this.writeU8(0xd3);\n                    this.writeI64(object);\n                }\n            }\n        }\n        else {\n            // non-integer numbers\n            if (this.forceFloat32) {\n                // float 32\n                this.writeU8(0xca);\n                this.writeF32(object);\n            }\n            else {\n                // float 64\n                this.writeU8(0xcb);\n                this.writeF64(object);\n            }\n        }\n    };\n    Encoder.prototype.writeStringHeader = function (byteLength) {\n        if (byteLength < 32) {\n            // fixstr\n            this.writeU8(0xa0 + byteLength);\n        }\n        else if (byteLength < 0x100) {\n            // str 8\n            this.writeU8(0xd9);\n            this.writeU8(byteLength);\n        }\n        else if (byteLength < 0x10000) {\n            // str 16\n            this.writeU8(0xda);\n            this.writeU16(byteLength);\n        }\n        else if (byteLength < 0x100000000) {\n            // str 32\n            this.writeU8(0xdb);\n            this.writeU32(byteLength);\n        }\n        else {\n            throw new Error(\"Too long string: \".concat(byteLength, \" bytes in UTF-8\"));\n        }\n    };\n    Encoder.prototype.encodeString = function (object) {\n        var maxHeaderSize = 1 + 4;\n        var strLength = object.length;\n        if (strLength > TEXT_ENCODER_THRESHOLD) {\n            var byteLength = utf8Count(object);\n            this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n            this.writeStringHeader(byteLength);\n            utf8EncodeTE(object, this.bytes, this.pos);\n            this.pos += byteLength;\n        }\n        else {\n            var byteLength = utf8Count(object);\n            this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n            this.writeStringHeader(byteLength);\n            utf8EncodeJs(object, this.bytes, this.pos);\n            this.pos += byteLength;\n        }\n    };\n    Encoder.prototype.encodeObject = function (object, depth) {\n        // try to encode objects with custom codec first of non-primitives\n        var ext = this.extensionCodec.tryToEncode(object, this.context);\n        if (ext != null) {\n            this.encodeExtension(ext);\n        }\n        else if (Array.isArray(object)) {\n            this.encodeArray(object, depth);\n        }\n        else if (ArrayBuffer.isView(object)) {\n            this.encodeBinary(object);\n        }\n        else if (typeof object === \"object\") {\n            this.encodeMap(object, depth);\n        }\n        else {\n            // symbol, function and other special object come here unless extensionCodec handles them.\n            throw new Error(\"Unrecognized object: \".concat(Object.prototype.toString.apply(object)));\n        }\n    };\n    Encoder.prototype.encodeBinary = function (object) {\n        var size = object.byteLength;\n        if (size < 0x100) {\n            // bin 8\n            this.writeU8(0xc4);\n            this.writeU8(size);\n        }\n        else if (size < 0x10000) {\n            // bin 16\n            this.writeU8(0xc5);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // bin 32\n            this.writeU8(0xc6);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large binary: \".concat(size));\n        }\n        var bytes = ensureUint8Array(object);\n        this.writeU8a(bytes);\n    };\n    Encoder.prototype.encodeArray = function (object, depth) {\n        var size = object.length;\n        if (size < 16) {\n            // fixarray\n            this.writeU8(0x90 + size);\n        }\n        else if (size < 0x10000) {\n            // array 16\n            this.writeU8(0xdc);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // array 32\n            this.writeU8(0xdd);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large array: \".concat(size));\n        }\n        for (var _i = 0, object_1 = object; _i < object_1.length; _i++) {\n            var item = object_1[_i];\n            this.doEncode(item, depth + 1);\n        }\n    };\n    Encoder.prototype.countWithoutUndefined = function (object, keys) {\n        var count = 0;\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            if (object[key] !== undefined) {\n                count++;\n            }\n        }\n        return count;\n    };\n    Encoder.prototype.encodeMap = function (object, depth) {\n        var keys = Object.keys(object);\n        if (this.sortKeys) {\n            keys.sort();\n        }\n        var size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n        if (size < 16) {\n            // fixmap\n            this.writeU8(0x80 + size);\n        }\n        else if (size < 0x10000) {\n            // map 16\n            this.writeU8(0xde);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // map 32\n            this.writeU8(0xdf);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large map object: \".concat(size));\n        }\n        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n            var key = keys_2[_i];\n            var value = object[key];\n            if (!(this.ignoreUndefined && value === undefined)) {\n                this.encodeString(key);\n                this.doEncode(value, depth + 1);\n            }\n        }\n    };\n    Encoder.prototype.encodeExtension = function (ext) {\n        var size = ext.data.length;\n        if (size === 1) {\n            // fixext 1\n            this.writeU8(0xd4);\n        }\n        else if (size === 2) {\n            // fixext 2\n            this.writeU8(0xd5);\n        }\n        else if (size === 4) {\n            // fixext 4\n            this.writeU8(0xd6);\n        }\n        else if (size === 8) {\n            // fixext 8\n            this.writeU8(0xd7);\n        }\n        else if (size === 16) {\n            // fixext 16\n            this.writeU8(0xd8);\n        }\n        else if (size < 0x100) {\n            // ext 8\n            this.writeU8(0xc7);\n            this.writeU8(size);\n        }\n        else if (size < 0x10000) {\n            // ext 16\n            this.writeU8(0xc8);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // ext 32\n            this.writeU8(0xc9);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large extension object: \".concat(size));\n        }\n        this.writeI8(ext.type);\n        this.writeU8a(ext.data);\n    };\n    Encoder.prototype.writeU8 = function (value) {\n        this.ensureBufferSizeToWrite(1);\n        this.view.setUint8(this.pos, value);\n        this.pos++;\n    };\n    Encoder.prototype.writeU8a = function (values) {\n        var size = values.length;\n        this.ensureBufferSizeToWrite(size);\n        this.bytes.set(values, this.pos);\n        this.pos += size;\n    };\n    Encoder.prototype.writeI8 = function (value) {\n        this.ensureBufferSizeToWrite(1);\n        this.view.setInt8(this.pos, value);\n        this.pos++;\n    };\n    Encoder.prototype.writeU16 = function (value) {\n        this.ensureBufferSizeToWrite(2);\n        this.view.setUint16(this.pos, value);\n        this.pos += 2;\n    };\n    Encoder.prototype.writeI16 = function (value) {\n        this.ensureBufferSizeToWrite(2);\n        this.view.setInt16(this.pos, value);\n        this.pos += 2;\n    };\n    Encoder.prototype.writeU32 = function (value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setUint32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeI32 = function (value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setInt32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeF32 = function (value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setFloat32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeF64 = function (value) {\n        this.ensureBufferSizeToWrite(8);\n        this.view.setFloat64(this.pos, value);\n        this.pos += 8;\n    };\n    Encoder.prototype.writeU64 = function (value) {\n        this.ensureBufferSizeToWrite(8);\n        setUint64(this.view, this.pos, value);\n        this.pos += 8;\n    };\n    Encoder.prototype.writeI64 = function (value) {\n        this.ensureBufferSizeToWrite(8);\n        setInt64(this.view, this.pos, value);\n        this.pos += 8;\n    };\n    return Encoder;\n}());\nexport { Encoder };\n//# sourceMappingURL=Encoder.mjs.map","export function prettyByte(byte) {\n    return \"\".concat(byte < 0 ? \"-\" : \"\", \"0x\").concat(Math.abs(byte).toString(16).padStart(2, \"0\"));\n}\n//# sourceMappingURL=prettyByte.mjs.map","import { utf8DecodeJs } from \"./utils/utf8.mjs\";\nvar DEFAULT_MAX_KEY_LENGTH = 16;\nvar DEFAULT_MAX_LENGTH_PER_KEY = 16;\nvar CachedKeyDecoder = /** @class */ (function () {\n    function CachedKeyDecoder(maxKeyLength, maxLengthPerKey) {\n        if (maxKeyLength === void 0) { maxKeyLength = DEFAULT_MAX_KEY_LENGTH; }\n        if (maxLengthPerKey === void 0) { maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY; }\n        this.maxKeyLength = maxKeyLength;\n        this.maxLengthPerKey = maxLengthPerKey;\n        this.hit = 0;\n        this.miss = 0;\n        // avoid `new Array(N)`, which makes a sparse array,\n        // because a sparse array is typically slower than a non-sparse array.\n        this.caches = [];\n        for (var i = 0; i < this.maxKeyLength; i++) {\n            this.caches.push([]);\n        }\n    }\n    CachedKeyDecoder.prototype.canBeCached = function (byteLength) {\n        return byteLength > 0 && byteLength <= this.maxKeyLength;\n    };\n    CachedKeyDecoder.prototype.find = function (bytes, inputOffset, byteLength) {\n        var records = this.caches[byteLength - 1];\n        FIND_CHUNK: for (var _i = 0, records_1 = records; _i < records_1.length; _i++) {\n            var record = records_1[_i];\n            var recordBytes = record.bytes;\n            for (var j = 0; j < byteLength; j++) {\n                if (recordBytes[j] !== bytes[inputOffset + j]) {\n                    continue FIND_CHUNK;\n                }\n            }\n            return record.str;\n        }\n        return null;\n    };\n    CachedKeyDecoder.prototype.store = function (bytes, value) {\n        var records = this.caches[bytes.length - 1];\n        var record = { bytes: bytes, str: value };\n        if (records.length >= this.maxLengthPerKey) {\n            // `records` are full!\n            // Set `record` to an arbitrary position.\n            records[(Math.random() * records.length) | 0] = record;\n        }\n        else {\n            records.push(record);\n        }\n    };\n    CachedKeyDecoder.prototype.decode = function (bytes, inputOffset, byteLength) {\n        var cachedValue = this.find(bytes, inputOffset, byteLength);\n        if (cachedValue != null) {\n            this.hit++;\n            return cachedValue;\n        }\n        this.miss++;\n        var str = utf8DecodeJs(bytes, inputOffset, byteLength);\n        // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n        var slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n        this.store(slicedCopyOfBytes, str);\n        return str;\n    };\n    return CachedKeyDecoder;\n}());\nexport { CachedKeyDecoder };\n//# sourceMappingURL=CachedKeyDecoder.mjs.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { prettyByte } from \"./utils/prettyByte.mjs\";\nimport { ExtensionCodec } from \"./ExtensionCodec.mjs\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int.mjs\";\nimport { utf8DecodeJs, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8.mjs\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays.mjs\";\nimport { CachedKeyDecoder } from \"./CachedKeyDecoder.mjs\";\nimport { DecodeError } from \"./DecodeError.mjs\";\nvar isValidMapKeyType = function (key) {\n    var keyType = typeof key;\n    return keyType === \"string\" || keyType === \"number\";\n};\nvar HEAD_BYTE_REQUIRED = -1;\nvar EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nvar EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport var DataViewIndexOutOfBoundsError = (function () {\n    try {\n        // IE11: The spec says it should throw RangeError,\n        // IE11: but in IE11 it throws TypeError.\n        EMPTY_VIEW.getInt8(0);\n    }\n    catch (e) {\n        return e.constructor;\n    }\n    throw new Error(\"never reached\");\n})();\nvar MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\nvar sharedCachedKeyDecoder = new CachedKeyDecoder();\nvar Decoder = /** @class */ (function () {\n    function Decoder(extensionCodec, context, maxStrLength, maxBinLength, maxArrayLength, maxMapLength, maxExtLength, keyDecoder) {\n        if (extensionCodec === void 0) { extensionCodec = ExtensionCodec.defaultCodec; }\n        if (context === void 0) { context = undefined; }\n        if (maxStrLength === void 0) { maxStrLength = UINT32_MAX; }\n        if (maxBinLength === void 0) { maxBinLength = UINT32_MAX; }\n        if (maxArrayLength === void 0) { maxArrayLength = UINT32_MAX; }\n        if (maxMapLength === void 0) { maxMapLength = UINT32_MAX; }\n        if (maxExtLength === void 0) { maxExtLength = UINT32_MAX; }\n        if (keyDecoder === void 0) { keyDecoder = sharedCachedKeyDecoder; }\n        this.extensionCodec = extensionCodec;\n        this.context = context;\n        this.maxStrLength = maxStrLength;\n        this.maxBinLength = maxBinLength;\n        this.maxArrayLength = maxArrayLength;\n        this.maxMapLength = maxMapLength;\n        this.maxExtLength = maxExtLength;\n        this.keyDecoder = keyDecoder;\n        this.totalPos = 0;\n        this.pos = 0;\n        this.view = EMPTY_VIEW;\n        this.bytes = EMPTY_BYTES;\n        this.headByte = HEAD_BYTE_REQUIRED;\n        this.stack = [];\n    }\n    Decoder.prototype.reinitializeState = function () {\n        this.totalPos = 0;\n        this.headByte = HEAD_BYTE_REQUIRED;\n        this.stack.length = 0;\n        // view, bytes, and pos will be re-initialized in setBuffer()\n    };\n    Decoder.prototype.setBuffer = function (buffer) {\n        this.bytes = ensureUint8Array(buffer);\n        this.view = createDataView(this.bytes);\n        this.pos = 0;\n    };\n    Decoder.prototype.appendBuffer = function (buffer) {\n        if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n            this.setBuffer(buffer);\n        }\n        else {\n            var remainingData = this.bytes.subarray(this.pos);\n            var newData = ensureUint8Array(buffer);\n            // concat remainingData + newData\n            var newBuffer = new Uint8Array(remainingData.length + newData.length);\n            newBuffer.set(remainingData);\n            newBuffer.set(newData, remainingData.length);\n            this.setBuffer(newBuffer);\n        }\n    };\n    Decoder.prototype.hasRemaining = function (size) {\n        return this.view.byteLength - this.pos >= size;\n    };\n    Decoder.prototype.createExtraByteError = function (posToShow) {\n        var _a = this, view = _a.view, pos = _a.pos;\n        return new RangeError(\"Extra \".concat(view.byteLength - pos, \" of \").concat(view.byteLength, \" byte(s) found at buffer[\").concat(posToShow, \"]\"));\n    };\n    /**\n     * @throws {@link DecodeError}\n     * @throws {@link RangeError}\n     */\n    Decoder.prototype.decode = function (buffer) {\n        this.reinitializeState();\n        this.setBuffer(buffer);\n        var object = this.doDecodeSync();\n        if (this.hasRemaining(1)) {\n            throw this.createExtraByteError(this.pos);\n        }\n        return object;\n    };\n    Decoder.prototype.decodeMulti = function (buffer) {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    this.reinitializeState();\n                    this.setBuffer(buffer);\n                    _a.label = 1;\n                case 1:\n                    if (!this.hasRemaining(1)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, this.doDecodeSync()];\n                case 2:\n                    _a.sent();\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    Decoder.prototype.decodeAsync = function (stream) {\n        var stream_1, stream_1_1;\n        var e_1, _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var decoded, object, buffer, e_1_1, _b, headByte, pos, totalPos;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        decoded = false;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 6, 7, 12]);\n                        stream_1 = __asyncValues(stream);\n                        _c.label = 2;\n                    case 2: return [4 /*yield*/, stream_1.next()];\n                    case 3:\n                        if (!(stream_1_1 = _c.sent(), !stream_1_1.done)) return [3 /*break*/, 5];\n                        buffer = stream_1_1.value;\n                        if (decoded) {\n                            throw this.createExtraByteError(this.totalPos);\n                        }\n                        this.appendBuffer(buffer);\n                        try {\n                            object = this.doDecodeSync();\n                            decoded = true;\n                        }\n                        catch (e) {\n                            if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n                                throw e; // rethrow\n                            }\n                            // fallthrough\n                        }\n                        this.totalPos += this.pos;\n                        _c.label = 4;\n                    case 4: return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 12];\n                    case 6:\n                        e_1_1 = _c.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 12];\n                    case 7:\n                        _c.trys.push([7, , 10, 11]);\n                        if (!(stream_1_1 && !stream_1_1.done && (_a = stream_1.return))) return [3 /*break*/, 9];\n                        return [4 /*yield*/, _a.call(stream_1)];\n                    case 8:\n                        _c.sent();\n                        _c.label = 9;\n                    case 9: return [3 /*break*/, 11];\n                    case 10:\n                        if (e_1) throw e_1.error;\n                        return [7 /*endfinally*/];\n                    case 11: return [7 /*endfinally*/];\n                    case 12:\n                        if (decoded) {\n                            if (this.hasRemaining(1)) {\n                                throw this.createExtraByteError(this.totalPos);\n                            }\n                            return [2 /*return*/, object];\n                        }\n                        _b = this, headByte = _b.headByte, pos = _b.pos, totalPos = _b.totalPos;\n                        throw new RangeError(\"Insufficient data in parsing \".concat(prettyByte(headByte), \" at \").concat(totalPos, \" (\").concat(pos, \" in the current buffer)\"));\n                }\n            });\n        });\n    };\n    Decoder.prototype.decodeArrayStream = function (stream) {\n        return this.decodeMultiAsync(stream, true);\n    };\n    Decoder.prototype.decodeStream = function (stream) {\n        return this.decodeMultiAsync(stream, false);\n    };\n    Decoder.prototype.decodeMultiAsync = function (stream, isArray) {\n        return __asyncGenerator(this, arguments, function decodeMultiAsync_1() {\n            var isArrayHeaderRequired, arrayItemsLeft, stream_2, stream_2_1, buffer, e_2, e_3_1;\n            var e_3, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        isArrayHeaderRequired = isArray;\n                        arrayItemsLeft = -1;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 13, 14, 19]);\n                        stream_2 = __asyncValues(stream);\n                        _b.label = 2;\n                    case 2: return [4 /*yield*/, __await(stream_2.next())];\n                    case 3:\n                        if (!(stream_2_1 = _b.sent(), !stream_2_1.done)) return [3 /*break*/, 12];\n                        buffer = stream_2_1.value;\n                        if (isArray && arrayItemsLeft === 0) {\n                            throw this.createExtraByteError(this.totalPos);\n                        }\n                        this.appendBuffer(buffer);\n                        if (isArrayHeaderRequired) {\n                            arrayItemsLeft = this.readArraySize();\n                            isArrayHeaderRequired = false;\n                            this.complete();\n                        }\n                        _b.label = 4;\n                    case 4:\n                        _b.trys.push([4, 9, , 10]);\n                        _b.label = 5;\n                    case 5:\n                        if (!true) return [3 /*break*/, 8];\n                        return [4 /*yield*/, __await(this.doDecodeSync())];\n                    case 6: return [4 /*yield*/, _b.sent()];\n                    case 7:\n                        _b.sent();\n                        if (--arrayItemsLeft === 0) {\n                            return [3 /*break*/, 8];\n                        }\n                        return [3 /*break*/, 5];\n                    case 8: return [3 /*break*/, 10];\n                    case 9:\n                        e_2 = _b.sent();\n                        if (!(e_2 instanceof DataViewIndexOutOfBoundsError)) {\n                            throw e_2; // rethrow\n                        }\n                        return [3 /*break*/, 10];\n                    case 10:\n                        this.totalPos += this.pos;\n                        _b.label = 11;\n                    case 11: return [3 /*break*/, 2];\n                    case 12: return [3 /*break*/, 19];\n                    case 13:\n                        e_3_1 = _b.sent();\n                        e_3 = { error: e_3_1 };\n                        return [3 /*break*/, 19];\n                    case 14:\n                        _b.trys.push([14, , 17, 18]);\n                        if (!(stream_2_1 && !stream_2_1.done && (_a = stream_2.return))) return [3 /*break*/, 16];\n                        return [4 /*yield*/, __await(_a.call(stream_2))];\n                    case 15:\n                        _b.sent();\n                        _b.label = 16;\n                    case 16: return [3 /*break*/, 18];\n                    case 17:\n                        if (e_3) throw e_3.error;\n                        return [7 /*endfinally*/];\n                    case 18: return [7 /*endfinally*/];\n                    case 19: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Decoder.prototype.doDecodeSync = function () {\n        DECODE: while (true) {\n            var headByte = this.readHeadByte();\n            var object = void 0;\n            if (headByte >= 0xe0) {\n                // negative fixint (111x xxxx) 0xe0 - 0xff\n                object = headByte - 0x100;\n            }\n            else if (headByte < 0xc0) {\n                if (headByte < 0x80) {\n                    // positive fixint (0xxx xxxx) 0x00 - 0x7f\n                    object = headByte;\n                }\n                else if (headByte < 0x90) {\n                    // fixmap (1000 xxxx) 0x80 - 0x8f\n                    var size = headByte - 0x80;\n                    if (size !== 0) {\n                        this.pushMapState(size);\n                        this.complete();\n                        continue DECODE;\n                    }\n                    else {\n                        object = {};\n                    }\n                }\n                else if (headByte < 0xa0) {\n                    // fixarray (1001 xxxx) 0x90 - 0x9f\n                    var size = headByte - 0x90;\n                    if (size !== 0) {\n                        this.pushArrayState(size);\n                        this.complete();\n                        continue DECODE;\n                    }\n                    else {\n                        object = [];\n                    }\n                }\n                else {\n                    // fixstr (101x xxxx) 0xa0 - 0xbf\n                    var byteLength = headByte - 0xa0;\n                    object = this.decodeUtf8String(byteLength, 0);\n                }\n            }\n            else if (headByte === 0xc0) {\n                // nil\n                object = null;\n            }\n            else if (headByte === 0xc2) {\n                // false\n                object = false;\n            }\n            else if (headByte === 0xc3) {\n                // true\n                object = true;\n            }\n            else if (headByte === 0xca) {\n                // float 32\n                object = this.readF32();\n            }\n            else if (headByte === 0xcb) {\n                // float 64\n                object = this.readF64();\n            }\n            else if (headByte === 0xcc) {\n                // uint 8\n                object = this.readU8();\n            }\n            else if (headByte === 0xcd) {\n                // uint 16\n                object = this.readU16();\n            }\n            else if (headByte === 0xce) {\n                // uint 32\n                object = this.readU32();\n            }\n            else if (headByte === 0xcf) {\n                // uint 64\n                object = this.readU64();\n            }\n            else if (headByte === 0xd0) {\n                // int 8\n                object = this.readI8();\n            }\n            else if (headByte === 0xd1) {\n                // int 16\n                object = this.readI16();\n            }\n            else if (headByte === 0xd2) {\n                // int 32\n                object = this.readI32();\n            }\n            else if (headByte === 0xd3) {\n                // int 64\n                object = this.readI64();\n            }\n            else if (headByte === 0xd9) {\n                // str 8\n                var byteLength = this.lookU8();\n                object = this.decodeUtf8String(byteLength, 1);\n            }\n            else if (headByte === 0xda) {\n                // str 16\n                var byteLength = this.lookU16();\n                object = this.decodeUtf8String(byteLength, 2);\n            }\n            else if (headByte === 0xdb) {\n                // str 32\n                var byteLength = this.lookU32();\n                object = this.decodeUtf8String(byteLength, 4);\n            }\n            else if (headByte === 0xdc) {\n                // array 16\n                var size = this.readU16();\n                if (size !== 0) {\n                    this.pushArrayState(size);\n                    this.complete();\n                    continue DECODE;\n                }\n                else {\n                    object = [];\n                }\n            }\n            else if (headByte === 0xdd) {\n                // array 32\n                var size = this.readU32();\n                if (size !== 0) {\n                    this.pushArrayState(size);\n                    this.complete();\n                    continue DECODE;\n                }\n                else {\n                    object = [];\n                }\n            }\n            else if (headByte === 0xde) {\n                // map 16\n                var size = this.readU16();\n                if (size !== 0) {\n                    this.pushMapState(size);\n                    this.complete();\n                    continue DECODE;\n                }\n                else {\n                    object = {};\n                }\n            }\n            else if (headByte === 0xdf) {\n                // map 32\n                var size = this.readU32();\n                if (size !== 0) {\n                    this.pushMapState(size);\n                    this.complete();\n                    continue DECODE;\n                }\n                else {\n                    object = {};\n                }\n            }\n            else if (headByte === 0xc4) {\n                // bin 8\n                var size = this.lookU8();\n                object = this.decodeBinary(size, 1);\n            }\n            else if (headByte === 0xc5) {\n                // bin 16\n                var size = this.lookU16();\n                object = this.decodeBinary(size, 2);\n            }\n            else if (headByte === 0xc6) {\n                // bin 32\n                var size = this.lookU32();\n                object = this.decodeBinary(size, 4);\n            }\n            else if (headByte === 0xd4) {\n                // fixext 1\n                object = this.decodeExtension(1, 0);\n            }\n            else if (headByte === 0xd5) {\n                // fixext 2\n                object = this.decodeExtension(2, 0);\n            }\n            else if (headByte === 0xd6) {\n                // fixext 4\n                object = this.decodeExtension(4, 0);\n            }\n            else if (headByte === 0xd7) {\n                // fixext 8\n                object = this.decodeExtension(8, 0);\n            }\n            else if (headByte === 0xd8) {\n                // fixext 16\n                object = this.decodeExtension(16, 0);\n            }\n            else if (headByte === 0xc7) {\n                // ext 8\n                var size = this.lookU8();\n                object = this.decodeExtension(size, 1);\n            }\n            else if (headByte === 0xc8) {\n                // ext 16\n                var size = this.lookU16();\n                object = this.decodeExtension(size, 2);\n            }\n            else if (headByte === 0xc9) {\n                // ext 32\n                var size = this.lookU32();\n                object = this.decodeExtension(size, 4);\n            }\n            else {\n                throw new DecodeError(\"Unrecognized type byte: \".concat(prettyByte(headByte)));\n            }\n            this.complete();\n            var stack = this.stack;\n            while (stack.length > 0) {\n                // arrays and maps\n                var state = stack[stack.length - 1];\n                if (state.type === 0 /* State.ARRAY */) {\n                    state.array[state.position] = object;\n                    state.position++;\n                    if (state.position === state.size) {\n                        stack.pop();\n                        object = state.array;\n                    }\n                    else {\n                        continue DECODE;\n                    }\n                }\n                else if (state.type === 1 /* State.MAP_KEY */) {\n                    if (!isValidMapKeyType(object)) {\n                        throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\n                    }\n                    if (object === \"__proto__\") {\n                        throw new DecodeError(\"The key __proto__ is not allowed\");\n                    }\n                    state.key = object;\n                    state.type = 2 /* State.MAP_VALUE */;\n                    continue DECODE;\n                }\n                else {\n                    // it must be `state.type === State.MAP_VALUE` here\n                    state.map[state.key] = object;\n                    state.readCount++;\n                    if (state.readCount === state.size) {\n                        stack.pop();\n                        object = state.map;\n                    }\n                    else {\n                        state.key = null;\n                        state.type = 1 /* State.MAP_KEY */;\n                        continue DECODE;\n                    }\n                }\n            }\n            return object;\n        }\n    };\n    Decoder.prototype.readHeadByte = function () {\n        if (this.headByte === HEAD_BYTE_REQUIRED) {\n            this.headByte = this.readU8();\n            // console.log(\"headByte\", prettyByte(this.headByte));\n        }\n        return this.headByte;\n    };\n    Decoder.prototype.complete = function () {\n        this.headByte = HEAD_BYTE_REQUIRED;\n    };\n    Decoder.prototype.readArraySize = function () {\n        var headByte = this.readHeadByte();\n        switch (headByte) {\n            case 0xdc:\n                return this.readU16();\n            case 0xdd:\n                return this.readU32();\n            default: {\n                if (headByte < 0xa0) {\n                    return headByte - 0x90;\n                }\n                else {\n                    throw new DecodeError(\"Unrecognized array type byte: \".concat(prettyByte(headByte)));\n                }\n            }\n        }\n    };\n    Decoder.prototype.pushMapState = function (size) {\n        if (size > this.maxMapLength) {\n            throw new DecodeError(\"Max length exceeded: map length (\".concat(size, \") > maxMapLengthLength (\").concat(this.maxMapLength, \")\"));\n        }\n        this.stack.push({\n            type: 1 /* State.MAP_KEY */,\n            size: size,\n            key: null,\n            readCount: 0,\n            map: {},\n        });\n    };\n    Decoder.prototype.pushArrayState = function (size) {\n        if (size > this.maxArrayLength) {\n            throw new DecodeError(\"Max length exceeded: array length (\".concat(size, \") > maxArrayLength (\").concat(this.maxArrayLength, \")\"));\n        }\n        this.stack.push({\n            type: 0 /* State.ARRAY */,\n            size: size,\n            array: new Array(size),\n            position: 0,\n        });\n    };\n    Decoder.prototype.decodeUtf8String = function (byteLength, headerOffset) {\n        var _a;\n        if (byteLength > this.maxStrLength) {\n            throw new DecodeError(\"Max length exceeded: UTF-8 byte length (\".concat(byteLength, \") > maxStrLength (\").concat(this.maxStrLength, \")\"));\n        }\n        if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n            throw MORE_DATA;\n        }\n        var offset = this.pos + headerOffset;\n        var object;\n        if (this.stateIsMapKey() && ((_a = this.keyDecoder) === null || _a === void 0 ? void 0 : _a.canBeCached(byteLength))) {\n            object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n        }\n        else if (byteLength > TEXT_DECODER_THRESHOLD) {\n            object = utf8DecodeTD(this.bytes, offset, byteLength);\n        }\n        else {\n            object = utf8DecodeJs(this.bytes, offset, byteLength);\n        }\n        this.pos += headerOffset + byteLength;\n        return object;\n    };\n    Decoder.prototype.stateIsMapKey = function () {\n        if (this.stack.length > 0) {\n            var state = this.stack[this.stack.length - 1];\n            return state.type === 1 /* State.MAP_KEY */;\n        }\n        return false;\n    };\n    Decoder.prototype.decodeBinary = function (byteLength, headOffset) {\n        if (byteLength > this.maxBinLength) {\n            throw new DecodeError(\"Max length exceeded: bin length (\".concat(byteLength, \") > maxBinLength (\").concat(this.maxBinLength, \")\"));\n        }\n        if (!this.hasRemaining(byteLength + headOffset)) {\n            throw MORE_DATA;\n        }\n        var offset = this.pos + headOffset;\n        var object = this.bytes.subarray(offset, offset + byteLength);\n        this.pos += headOffset + byteLength;\n        return object;\n    };\n    Decoder.prototype.decodeExtension = function (size, headOffset) {\n        if (size > this.maxExtLength) {\n            throw new DecodeError(\"Max length exceeded: ext length (\".concat(size, \") > maxExtLength (\").concat(this.maxExtLength, \")\"));\n        }\n        var extType = this.view.getInt8(this.pos + headOffset);\n        var data = this.decodeBinary(size, headOffset + 1 /* extType */);\n        return this.extensionCodec.decode(data, extType, this.context);\n    };\n    Decoder.prototype.lookU8 = function () {\n        return this.view.getUint8(this.pos);\n    };\n    Decoder.prototype.lookU16 = function () {\n        return this.view.getUint16(this.pos);\n    };\n    Decoder.prototype.lookU32 = function () {\n        return this.view.getUint32(this.pos);\n    };\n    Decoder.prototype.readU8 = function () {\n        var value = this.view.getUint8(this.pos);\n        this.pos++;\n        return value;\n    };\n    Decoder.prototype.readI8 = function () {\n        var value = this.view.getInt8(this.pos);\n        this.pos++;\n        return value;\n    };\n    Decoder.prototype.readU16 = function () {\n        var value = this.view.getUint16(this.pos);\n        this.pos += 2;\n        return value;\n    };\n    Decoder.prototype.readI16 = function () {\n        var value = this.view.getInt16(this.pos);\n        this.pos += 2;\n        return value;\n    };\n    Decoder.prototype.readU32 = function () {\n        var value = this.view.getUint32(this.pos);\n        this.pos += 4;\n        return value;\n    };\n    Decoder.prototype.readI32 = function () {\n        var value = this.view.getInt32(this.pos);\n        this.pos += 4;\n        return value;\n    };\n    Decoder.prototype.readU64 = function () {\n        var value = getUint64(this.view, this.pos);\n        this.pos += 8;\n        return value;\n    };\n    Decoder.prototype.readI64 = function () {\n        var value = getInt64(this.view, this.pos);\n        this.pos += 8;\n        return value;\n    };\n    Decoder.prototype.readF32 = function () {\n        var value = this.view.getFloat32(this.pos);\n        this.pos += 4;\n        return value;\n    };\n    Decoder.prototype.readF64 = function () {\n        var value = this.view.getFloat64(this.pos);\n        this.pos += 8;\n        return value;\n    };\n    return Decoder;\n}());\nexport { Decoder };\n//# sourceMappingURL=Decoder.mjs.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// Not exported from index.\n/** @private */\nexport class BinaryMessageFormat {\n    // The length prefix of binary messages is encoded as VarInt. Read the comment in\n    // the BinaryMessageParser.TryParseMessage for details.\n    static write(output) {\n        let size = output.byteLength || output.length;\n        const lenBuffer = [];\n        do {\n            let sizePart = size & 0x7f;\n            size = size >> 7;\n            if (size > 0) {\n                sizePart |= 0x80;\n            }\n            lenBuffer.push(sizePart);\n        } while (size > 0);\n        size = output.byteLength || output.length;\n        const buffer = new Uint8Array(lenBuffer.length + size);\n        buffer.set(lenBuffer, 0);\n        buffer.set(output, lenBuffer.length);\n        return buffer.buffer;\n    }\n    static parse(input) {\n        const result = [];\n        const uint8Array = new Uint8Array(input);\n        const maxLengthPrefixSize = 5;\n        const numBitsToShift = [0, 7, 14, 21, 28];\n        for (let offset = 0; offset < input.byteLength;) {\n            let numBytes = 0;\n            let size = 0;\n            let byteRead;\n            do {\n                byteRead = uint8Array[offset + numBytes];\n                size = size | ((byteRead & 0x7f) << (numBitsToShift[numBytes]));\n                numBytes++;\n            } while (numBytes < Math.min(maxLengthPrefixSize, input.byteLength - offset) && (byteRead & 0x80) !== 0);\n            if ((byteRead & 0x80) !== 0 && numBytes < maxLengthPrefixSize) {\n                throw new Error(\"Cannot read message size.\");\n            }\n            if (numBytes === maxLengthPrefixSize && byteRead > 7) {\n                throw new Error(\"Messages bigger than 2GB are not supported.\");\n            }\n            if (uint8Array.byteLength >= (offset + numBytes + size)) {\n                // IE does not support .slice() so use subarray\n                result.push(uint8Array.slice\n                    ? uint8Array.slice(offset + numBytes, offset + numBytes + size)\n                    : uint8Array.subarray(offset + numBytes, offset + numBytes + size));\n            }\n            else {\n                throw new Error(\"Incomplete message.\");\n            }\n            offset = offset + numBytes + size;\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=BinaryMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { Encoder, Decoder } from \"@msgpack/msgpack\";\nimport { LogLevel, MessageType, NullLogger, TransferFormat, } from \"@microsoft/signalr\";\nimport { BinaryMessageFormat } from \"./BinaryMessageFormat\";\nimport { isArrayBuffer } from \"./Utils\";\n// TypeDoc's @inheritDoc and @link don't work across modules :(\n// constant encoding of the ping message\n// see: https://github.com/aspnet/SignalR/blob/dev/specs/HubProtocol.md#ping-message-encoding-1\n// Don't use Uint8Array.from as IE does not support it\nconst SERIALIZED_PING_MESSAGE = new Uint8Array([0x91, MessageType.Ping]);\n/** Implements the MessagePack Hub Protocol */\nexport class MessagePackHubProtocol {\n    /**\n     *\n     * @param messagePackOptions MessagePack options passed to @msgpack/msgpack\n     */\n    constructor(messagePackOptions) {\n        /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\n        this.name = \"messagepack\";\n        /** The version of the protocol. */\n        this.version = 1;\n        /** The TransferFormat of the protocol. */\n        this.transferFormat = TransferFormat.Binary;\n        this._errorResult = 1;\n        this._voidResult = 2;\n        this._nonVoidResult = 3;\n        messagePackOptions = messagePackOptions || {};\n        this._encoder = new Encoder(messagePackOptions.extensionCodec, messagePackOptions.context, messagePackOptions.maxDepth, messagePackOptions.initialBufferSize, messagePackOptions.sortKeys, messagePackOptions.forceFloat32, messagePackOptions.ignoreUndefined, messagePackOptions.forceIntegerToFloat);\n        this._decoder = new Decoder(messagePackOptions.extensionCodec, messagePackOptions.context, messagePackOptions.maxStrLength, messagePackOptions.maxBinLength, messagePackOptions.maxArrayLength, messagePackOptions.maxMapLength, messagePackOptions.maxExtLength);\n    }\n    /** Creates an array of HubMessage objects from the specified serialized representation.\n     *\n     * @param {ArrayBuffer} input An ArrayBuffer containing the serialized representation.\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\n     */\n    parseMessages(input, logger) {\n        // The interface does allow \"string\" to be passed in, but this implementation does not. So let's throw a useful error.\n        if (!(isArrayBuffer(input))) {\n            throw new Error(\"Invalid input for MessagePack hub protocol. Expected an ArrayBuffer.\");\n        }\n        if (logger === null) {\n            logger = NullLogger.instance;\n        }\n        const messages = BinaryMessageFormat.parse(input);\n        const hubMessages = [];\n        for (const message of messages) {\n            const parsedMessage = this._parseMessage(message, logger);\n            // Can be null for an unknown message. Unknown message is logged in parseMessage\n            if (parsedMessage) {\n                hubMessages.push(parsedMessage);\n            }\n        }\n        return hubMessages;\n    }\n    /** Writes the specified HubMessage to an ArrayBuffer and returns it.\n     *\n     * @param {HubMessage} message The message to write.\n     * @returns {ArrayBuffer} An ArrayBuffer containing the serialized representation of the message.\n     */\n    writeMessage(message) {\n        switch (message.type) {\n            case MessageType.Invocation:\n                return this._writeInvocation(message);\n            case MessageType.StreamInvocation:\n                return this._writeStreamInvocation(message);\n            case MessageType.StreamItem:\n                return this._writeStreamItem(message);\n            case MessageType.Completion:\n                return this._writeCompletion(message);\n            case MessageType.Ping:\n                return BinaryMessageFormat.write(SERIALIZED_PING_MESSAGE);\n            case MessageType.CancelInvocation:\n                return this._writeCancelInvocation(message);\n            default:\n                throw new Error(\"Invalid message type.\");\n        }\n    }\n    _parseMessage(input, logger) {\n        if (input.length === 0) {\n            throw new Error(\"Invalid payload.\");\n        }\n        const properties = this._decoder.decode(input);\n        if (properties.length === 0 || !(properties instanceof Array)) {\n            throw new Error(\"Invalid payload.\");\n        }\n        const messageType = properties[0];\n        switch (messageType) {\n            case MessageType.Invocation:\n                return this._createInvocationMessage(this._readHeaders(properties), properties);\n            case MessageType.StreamItem:\n                return this._createStreamItemMessage(this._readHeaders(properties), properties);\n            case MessageType.Completion:\n                return this._createCompletionMessage(this._readHeaders(properties), properties);\n            case MessageType.Ping:\n                return this._createPingMessage(properties);\n            case MessageType.Close:\n                return this._createCloseMessage(properties);\n            default:\n                // Future protocol changes can add message types, old clients can ignore them\n                logger.log(LogLevel.Information, \"Unknown message type '\" + messageType + \"' ignored.\");\n                return null;\n        }\n    }\n    _createCloseMessage(properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 2) {\n            throw new Error(\"Invalid payload for Close message.\");\n        }\n        return {\n            // Close messages have no headers.\n            allowReconnect: properties.length >= 3 ? properties[2] : undefined,\n            error: properties[1],\n            type: MessageType.Close,\n        };\n    }\n    _createPingMessage(properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 1) {\n            throw new Error(\"Invalid payload for Ping message.\");\n        }\n        return {\n            // Ping messages have no headers.\n            type: MessageType.Ping,\n        };\n    }\n    _createInvocationMessage(headers, properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 5) {\n            throw new Error(\"Invalid payload for Invocation message.\");\n        }\n        const invocationId = properties[2];\n        if (invocationId) {\n            return {\n                arguments: properties[4],\n                headers,\n                invocationId,\n                streamIds: [],\n                target: properties[3],\n                type: MessageType.Invocation,\n            };\n        }\n        else {\n            return {\n                arguments: properties[4],\n                headers,\n                streamIds: [],\n                target: properties[3],\n                type: MessageType.Invocation,\n            };\n        }\n    }\n    _createStreamItemMessage(headers, properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 4) {\n            throw new Error(\"Invalid payload for StreamItem message.\");\n        }\n        return {\n            headers,\n            invocationId: properties[2],\n            item: properties[3],\n            type: MessageType.StreamItem,\n        };\n    }\n    _createCompletionMessage(headers, properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 4) {\n            throw new Error(\"Invalid payload for Completion message.\");\n        }\n        const resultKind = properties[3];\n        if (resultKind !== this._voidResult && properties.length < 5) {\n            throw new Error(\"Invalid payload for Completion message.\");\n        }\n        let error;\n        let result;\n        switch (resultKind) {\n            case this._errorResult:\n                error = properties[4];\n                break;\n            case this._nonVoidResult:\n                result = properties[4];\n                break;\n        }\n        const completionMessage = {\n            error,\n            headers,\n            invocationId: properties[2],\n            result,\n            type: MessageType.Completion,\n        };\n        return completionMessage;\n    }\n    _writeInvocation(invocationMessage) {\n        let payload;\n        if (invocationMessage.streamIds) {\n            payload = this._encoder.encode([MessageType.Invocation, invocationMessage.headers || {}, invocationMessage.invocationId || null,\n                invocationMessage.target, invocationMessage.arguments, invocationMessage.streamIds]);\n        }\n        else {\n            payload = this._encoder.encode([MessageType.Invocation, invocationMessage.headers || {}, invocationMessage.invocationId || null,\n                invocationMessage.target, invocationMessage.arguments]);\n        }\n        return BinaryMessageFormat.write(payload.slice());\n    }\n    _writeStreamInvocation(streamInvocationMessage) {\n        let payload;\n        if (streamInvocationMessage.streamIds) {\n            payload = this._encoder.encode([MessageType.StreamInvocation, streamInvocationMessage.headers || {}, streamInvocationMessage.invocationId,\n                streamInvocationMessage.target, streamInvocationMessage.arguments, streamInvocationMessage.streamIds]);\n        }\n        else {\n            payload = this._encoder.encode([MessageType.StreamInvocation, streamInvocationMessage.headers || {}, streamInvocationMessage.invocationId,\n                streamInvocationMessage.target, streamInvocationMessage.arguments]);\n        }\n        return BinaryMessageFormat.write(payload.slice());\n    }\n    _writeStreamItem(streamItemMessage) {\n        const payload = this._encoder.encode([MessageType.StreamItem, streamItemMessage.headers || {}, streamItemMessage.invocationId,\n            streamItemMessage.item]);\n        return BinaryMessageFormat.write(payload.slice());\n    }\n    _writeCompletion(completionMessage) {\n        const resultKind = completionMessage.error ? this._errorResult :\n            (completionMessage.result !== undefined) ? this._nonVoidResult : this._voidResult;\n        let payload;\n        switch (resultKind) {\n            case this._errorResult:\n                payload = this._encoder.encode([MessageType.Completion, completionMessage.headers || {}, completionMessage.invocationId, resultKind, completionMessage.error]);\n                break;\n            case this._voidResult:\n                payload = this._encoder.encode([MessageType.Completion, completionMessage.headers || {}, completionMessage.invocationId, resultKind]);\n                break;\n            case this._nonVoidResult:\n                payload = this._encoder.encode([MessageType.Completion, completionMessage.headers || {}, completionMessage.invocationId, resultKind, completionMessage.result]);\n                break;\n        }\n        return BinaryMessageFormat.write(payload.slice());\n    }\n    _writeCancelInvocation(cancelInvocationMessage) {\n        const payload = this._encoder.encode([MessageType.CancelInvocation, cancelInvocationMessage.headers || {}, cancelInvocationMessage.invocationId]);\n        return BinaryMessageFormat.write(payload.slice());\n    }\n    _readHeaders(properties) {\n        const headers = properties[1];\n        if (typeof headers !== \"object\") {\n            throw new Error(\"Invalid headers.\");\n        }\n        return headers;\n    }\n}\n//# sourceMappingURL=MessagePackHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// Copied from signalr/Utils.ts\n/** @private */\nexport function isArrayBuffer(val) {\n    return val && typeof ArrayBuffer !== \"undefined\" &&\n        (val instanceof ArrayBuffer ||\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\n}\n//# sourceMappingURL=Utils.js.map","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nlet hasFailed = false;\n\nexport function showErrorNotification(): void {\n  const errorUi = document.querySelector('#blazor-error-ui') as HTMLElement;\n  if (errorUi) {\n    errorUi.style.display = 'block';\n  }\n\n  if (!hasFailed) {\n    hasFailed = true;\n    const errorUiReloads = document.querySelectorAll<HTMLElement>('#blazor-error-ui .reload');\n    errorUiReloads.forEach(reload => {\n      reload.onclick = function(e) {\n        location.reload();\n        e.preventDefault();\n      };\n    });\n\n    const errorUiDismiss = document.querySelectorAll<HTMLElement>('#blazor-error-ui .dismiss');\n    errorUiDismiss.forEach(dismiss => {\n      dismiss.onclick = function(e) {\n        const errorUi = document.querySelector<HTMLElement>('#blazor-error-ui');\n        if (errorUi) {\n          errorUi.style.display = 'none';\n        }\n        e.preventDefault();\n      };\n    });\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nconst nativeDecoder = typeof TextDecoder === 'function'\n  ? new TextDecoder('utf-8')\n  : null;\n\nexport const decodeUtf8: (bytes: Uint8Array) => string\n  = nativeDecoder ? nativeDecoder.decode.bind(nativeDecoder) : decodeImpl;\n\n/* !\nLogic in decodeImpl is derived from fast-text-encoding\nhttps://github.com/samthor/fast-text-encoding\n\nLicense for fast-text-encoding: Apache 2.0\nhttps://github.com/samthor/fast-text-encoding/blob/master/LICENSE\n*/\n\nfunction decodeImpl(bytes: Uint8Array): string {\n  let pos = 0;\n  const len = bytes.length;\n  const out: number[] = [];\n  const substrings: string[] = [];\n\n  while (pos < len) {\n    const byte1 = bytes[pos++];\n    if (byte1 === 0) {\n      break; // NULL\n    }\n\n    if ((byte1 & 0x80) === 0) { // 1-byte\n      out.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) { // 2-byte\n      const byte2 = bytes[pos++] & 0x3f;\n      out.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      const byte2 = bytes[pos++] & 0x3f;\n      const byte3 = bytes[pos++] & 0x3f;\n      out.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      const byte2 = bytes[pos++] & 0x3f;\n      const byte3 = bytes[pos++] & 0x3f;\n      const byte4 = bytes[pos++] & 0x3f;\n\n      // this can be > 0xffff, so possibly generate surrogates\n      let codepoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (codepoint > 0xffff) {\n        // codepoint &= ~0x10000;\n        codepoint -= 0x10000;\n        out.push((codepoint >>> 10) & 0x3ff | 0xd800);\n        codepoint = 0xdc00 | codepoint & 0x3ff;\n      }\n      out.push(codepoint);\n    } else {\n      // FIXME: we're ignoring this\n    }\n\n    // As a workaround for https://github.com/samthor/fast-text-encoding/issues/1,\n    // make sure the 'out' array never gets too long. When it reaches a limit, we\n    // stringify what we have so far and append to a list of outputs.\n    if (out.length > 1024) {\n      substrings.push(String.fromCharCode.apply(null, out));\n      out.length = 0;\n    }\n  }\n\n  substrings.push(String.fromCharCode.apply(null, out));\n  return substrings.join('');\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nconst uint64HighPartShift = Math.pow(2, 32);\nconst maxSafeNumberHighPart = Math.pow(2, 21) - 1; // The high-order int32 from Number.MAX_SAFE_INTEGER\n\nexport function readInt32LE(buffer: Uint8Array, position: number): any {\n  return (buffer[position])\n        | (buffer[position + 1] << 8)\n        | (buffer[position + 2] << 16)\n        | (buffer[position + 3] << 24);\n}\n\nexport function readUint32LE(buffer: Uint8Array, position: number): any {\n  return (buffer[position])\n        + (buffer[position + 1] << 8)\n        + (buffer[position + 2] << 16)\n        + ((buffer[position + 3] << 24) >>> 0); // The >>> 0 coerces the value to unsigned\n}\n\nexport function readUint64LE(buffer: Uint8Array, position: number): any {\n  // This cannot be done using bit-shift operators in JavaScript, because\n  // those all implicitly convert to int32\n  const highPart = readUint32LE(buffer, position + 4);\n  if (highPart > maxSafeNumberHighPart) {\n    throw new Error(`Cannot read uint64 with high order part ${highPart}, because the result would exceed Number.MAX_SAFE_INTEGER.`);\n  }\n\n  return (highPart * uint64HighPartShift) + readUint32LE(buffer, position);\n}\n\nexport function readLEB128(buffer: Uint8Array, position: number): number {\n  let result = 0;\n  let shift = 0;\n  for (let index = 0; index < 4; index++) {\n    const byte = buffer[position + index];\n    result |= (byte & 127) << shift;\n    if (byte < 128) {\n      break;\n    }\n    shift += 7;\n  }\n  return result;\n}\n\nexport function numLEB128Bytes(value: number): 1 | 2 | 3 | 4 {\n  return value < 128 ? 1\n    : value < 16384 ? 2\n      : value < 2097152 ? 3 : 4;\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { RenderBatch, ArrayRange, RenderTreeDiff, ArrayValues, RenderTreeEdit, RenderTreeFrame, RenderTreeDiffReader, RenderTreeFrameReader, RenderTreeEditReader, ArrayRangeReader, ArrayBuilderSegmentReader, ArrayBuilderSegment } from './RenderBatch';\nimport { decodeUtf8 } from '../../Utf8Decoder';\nimport { readInt32LE, readUint64LE, readLEB128, numLEB128Bytes } from '../../BinaryDecoder';\n\nconst updatedComponentsEntryLength = 4; // Each is a single int32 giving the location of the data\nconst referenceFramesEntryLength = 20; // 1 int for frame type, then 16 bytes for type-specific data\nconst disposedComponentIdsEntryLength = 4; // Each is an int32 giving the ID\nconst disposedEventHandlerIdsEntryLength = 8; // Each is an int64 giving the ID\nconst editsEntryLength = 16; // 4 ints\nconst stringTableEntryLength = 4; // Each is an int32 giving the string data location, or -1 for null\n\nexport class OutOfProcessRenderBatch implements RenderBatch {\n  constructor(private batchData: Uint8Array) {\n    const stringReader = new OutOfProcessStringReader(batchData);\n\n    this.arrayRangeReader = new OutOfProcessArrayRangeReader(batchData);\n    this.arrayBuilderSegmentReader = new OutOfProcessArrayBuilderSegmentReader(batchData);\n    this.diffReader = new OutOfProcessRenderTreeDiffReader(batchData);\n    this.editReader = new OutOfProcessRenderTreeEditReader(batchData, stringReader);\n    this.frameReader = new OutOfProcessRenderTreeFrameReader(batchData, stringReader);\n  }\n\n  updatedComponents(): ArrayRange<RenderTreeDiff> {\n    return readInt32LE(this.batchData, this.batchData.length - 20); // 5th-from-last int32\n  }\n\n  referenceFrames(): ArrayRange<RenderTreeFrame> {\n    return readInt32LE(this.batchData, this.batchData.length - 16); // 4th-from-last int32\n  }\n\n  disposedComponentIds(): ArrayRange<number> {\n    return readInt32LE(this.batchData, this.batchData.length - 12); // 3rd-from-last int32\n  }\n\n  disposedEventHandlerIds(): ArrayRange<number> {\n    return readInt32LE(this.batchData, this.batchData.length - 8); // 2th-from-last int32\n  }\n\n  updatedComponentsEntry(values: ArrayValues<RenderTreeDiff>, index: number): RenderTreeDiff {\n    const tableEntryPos = (values as any) + index * updatedComponentsEntryLength;\n    return readInt32LE(this.batchData, tableEntryPos);\n  }\n\n  referenceFramesEntry(values: ArrayValues<RenderTreeFrame>, index: number): RenderTreeFrame {\n    return (values as any) + index * referenceFramesEntryLength as any;\n  }\n\n  disposedComponentIdsEntry(values: ArrayValues<number>, index: number): number {\n    const entryPos = (values as any) + index * disposedComponentIdsEntryLength;\n    return readInt32LE(this.batchData, entryPos);\n  }\n\n  disposedEventHandlerIdsEntry(values: ArrayValues<number>, index: number): number {\n    const entryPos = (values as any) + index * disposedEventHandlerIdsEntryLength;\n    return readUint64LE(this.batchData, entryPos);\n  }\n\n  diffReader: RenderTreeDiffReader;\n\n  editReader: RenderTreeEditReader;\n\n  frameReader: RenderTreeFrameReader;\n\n  arrayRangeReader: ArrayRangeReader;\n\n  arrayBuilderSegmentReader: ArrayBuilderSegmentReader;\n}\n\nclass OutOfProcessRenderTreeDiffReader implements RenderTreeDiffReader {\n  constructor(private batchDataUint8: Uint8Array) {\n  }\n\n  componentId(diff: RenderTreeDiff) {\n    // First int32 is componentId\n    return readInt32LE(this.batchDataUint8, diff as any);\n  }\n\n  edits(diff: RenderTreeDiff) {\n    // Entries data starts after the componentId (which is a 4-byte int)\n    return (diff as any + 4);\n  }\n\n  editsEntry(values: ArrayValues<RenderTreeEdit>, index: number) {\n    return (values as any) + index * editsEntryLength;\n  }\n}\n\nclass OutOfProcessRenderTreeEditReader implements RenderTreeEditReader {\n  constructor(private batchDataUint8: Uint8Array, private stringReader: OutOfProcessStringReader) {\n  }\n\n  editType(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any); // 1st int\n  }\n\n  siblingIndex(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any + 4); // 2nd int\n  }\n\n  newTreeIndex(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any + 8); // 3rd int\n  }\n\n  moveToSiblingIndex(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any + 8); // 3rd int\n  }\n\n  removedAttributeName(edit: RenderTreeEdit) {\n    const stringIndex = readInt32LE(this.batchDataUint8, edit as any + 12); // 4th int\n    return this.stringReader.readString(stringIndex);\n  }\n}\n\nclass OutOfProcessRenderTreeFrameReader implements RenderTreeFrameReader {\n  constructor(private batchDataUint8: Uint8Array, private stringReader: OutOfProcessStringReader) {\n  }\n\n  // For render frames, the 2nd-4th ints have different meanings depending on frameType.\n  // It's the caller's responsibility not to evaluate properties that aren't applicable to the frameType.\n\n  frameType(frame: RenderTreeFrame) {\n    return readInt32LE(this.batchDataUint8, frame as any); // 1st int\n  }\n\n  subtreeLength(frame: RenderTreeFrame) {\n    return readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n  }\n\n  elementReferenceCaptureId(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  componentId(frame: RenderTreeFrame) {\n    return readInt32LE(this.batchDataUint8, frame as any + 8); // 3rd int\n  }\n\n  elementName(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 8); // 3rd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  textContent(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  markupContent(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex)!;\n  }\n\n  attributeName(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  attributeValue(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 8); // 3rd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  attributeEventHandlerId(frame: RenderTreeFrame) {\n    return readUint64LE(this.batchDataUint8, frame as any + 12); // Bytes 12-19\n  }\n}\n\nclass OutOfProcessStringReader {\n  private stringTableStartIndex: number;\n\n  constructor(private batchDataUint8: Uint8Array) {\n    // Final int gives start position of the string table\n    this.stringTableStartIndex = readInt32LE(batchDataUint8, batchDataUint8.length - 4);\n  }\n\n  readString(index: number): string | null {\n    if (index === -1) { // Special value encodes 'null'\n      return null;\n    } else {\n      const stringTableEntryPos = readInt32LE(this.batchDataUint8, this.stringTableStartIndex + index * stringTableEntryLength);\n\n      // By default, .NET's BinaryWriter gives LEB128-length-prefixed UTF-8 data.\n      // This is convenient enough to decode in JavaScript.\n      const numUtf8Bytes = readLEB128(this.batchDataUint8, stringTableEntryPos);\n      const charsStart = stringTableEntryPos + numLEB128Bytes(numUtf8Bytes);\n      const utf8Data = new Uint8Array(\n        this.batchDataUint8.buffer,\n        this.batchDataUint8.byteOffset + charsStart,\n        numUtf8Bytes\n      );\n      return decodeUtf8(utf8Data);\n    }\n  }\n}\n\nclass OutOfProcessArrayRangeReader implements ArrayRangeReader {\n  constructor(private batchDataUint8: Uint8Array) {\n  }\n\n  count<T>(arrayRange: ArrayRange<T>) {\n    // First int is count\n    return readInt32LE(this.batchDataUint8, arrayRange as any);\n  }\n\n  values<T>(arrayRange: ArrayRange<T>) {\n    // Entries data starts after the 'count' int (i.e., after 4 bytes)\n    return arrayRange as any + 4;\n  }\n}\n\nclass OutOfProcessArrayBuilderSegmentReader implements ArrayBuilderSegmentReader {\n  constructor(private batchDataUint8: Uint8Array) {\n  }\n\n  offset<T>(_arrayBuilderSegment: ArrayBuilderSegment<T>): number {\n    // Not used by the out-of-process representation of RenderBatch data.\n    // This only exists on the ArrayBuilderSegmentReader for the shared-memory representation.\n    return 0;\n  }\n\n  count<T>(arrayBuilderSegment: ArrayBuilderSegment<T>) {\n    // First int is count\n    return readInt32LE(this.batchDataUint8, arrayBuilderSegment as any);\n  }\n\n  values<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): ArrayValues<T> {\n    // Entries data starts after the 'count' int (i.e., after 4 bytes)\n    return arrayBuilderSegment as any + 4;\n  }\n}\n\n\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\n/** Indicates the severity of a log message.\n *\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\n */\nexport enum LogLevel {\n  /** Log level for very low severity diagnostic messages. */\n  Trace = 0,\n  /** Log level for low severity diagnostic messages. */\n  Debug = 1,\n  /** Log level for informational diagnostic messages. */\n  Information = 2,\n  /** Log level for diagnostic messages that indicate a non-fatal problem. */\n  Warning = 3,\n  /** Log level for diagnostic messages that indicate a failure in the current operation. */\n  Error = 4,\n  /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\n  Critical = 5,\n  /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\n  None = 6,\n}\n\n/** An abstraction that provides a sink for diagnostic messages. */\nexport interface Logger {\n  /** Called by the framework to emit a diagnostic message.\n   *\n   * @param {LogLevel} logLevel The severity level of the message.\n   * @param {string} message The message.\n   */\n  log(logLevel: LogLevel, message: string | Error): void;\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { renderBatch } from '../../Rendering/Renderer';\nimport { OutOfProcessRenderBatch } from '../../Rendering/RenderBatch/OutOfProcessRenderBatch';\nimport { Logger, LogLevel } from '../Logging/Logger';\nimport { HubConnection } from '@microsoft/signalr';\n\nexport class RenderQueue {\n  private static instance: RenderQueue;\n\n  private nextBatchId = 2;\n\n  private fatalError?: string;\n\n  public browserRendererId: number;\n\n  public logger: Logger;\n\n  public constructor(browserRendererId: number, logger: Logger) {\n    this.browserRendererId = browserRendererId;\n    this.logger = logger;\n  }\n\n  public static getOrCreate(logger: Logger): RenderQueue {\n    if (!RenderQueue.instance) {\n      RenderQueue.instance = new RenderQueue(0, logger);\n    }\n\n    return this.instance;\n  }\n\n  public async processBatch(receivedBatchId: number, batchData: Uint8Array, connection: HubConnection): Promise<void> {\n    if (receivedBatchId < this.nextBatchId) {\n      // SignalR delivers messages in order, but it does not guarantee that the message gets delivered.\n      // For that reason, if the server re-sends a batch (for example during a reconnection because it didn't get an ack)\n      // we simply acknowledge it to get back in sync with the server.\n      await this.completeBatch(connection, receivedBatchId);\n      this.logger.log(LogLevel.Debug, `Batch ${receivedBatchId} already processed. Waiting for batch ${this.nextBatchId}.`);\n      return;\n    }\n\n    if (receivedBatchId > this.nextBatchId) {\n      if (this.fatalError) {\n        this.logger.log(LogLevel.Debug, `Received a new batch ${receivedBatchId} but errored out on a previous batch ${this.nextBatchId - 1}`);\n        await connection.send('OnRenderCompleted', this.nextBatchId - 1, this.fatalError.toString());\n        return;\n      }\n\n      this.logger.log(LogLevel.Debug, `Waiting for batch ${this.nextBatchId}. Batch ${receivedBatchId} not processed.`);\n      return;\n    }\n\n    try {\n      this.nextBatchId++;\n      this.logger.log(LogLevel.Debug, `Applying batch ${receivedBatchId}.`);\n      renderBatch(this.browserRendererId, new OutOfProcessRenderBatch(batchData));\n      await this.completeBatch(connection, receivedBatchId);\n    } catch (error) {\n      this.fatalError = (error as Error).toString();\n      this.logger.log(LogLevel.Error, `There was an error applying batch ${receivedBatchId}.`);\n\n      // If there's a rendering exception, notify server *and* throw on client\n      connection.send('OnRenderCompleted', receivedBatchId, (error as Error).toString());\n      throw error;\n    }\n  }\n\n  public getLastBatchid(): number {\n    return this.nextBatchId - 1;\n  }\n\n  private async completeBatch(connection: signalR.HubConnection, batchId: number): Promise<void> {\n    try {\n      await connection.send('OnRenderCompleted', batchId, null);\n    } catch {\n      this.logger.log(LogLevel.Warning, `Failed to deliver completion notification for render '${batchId}'.`);\n    }\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\n/* eslint-disable no-console */\n\nimport { Logger, LogLevel } from './Logger';\n\nexport class NullLogger implements Logger {\n  public static instance: Logger = new NullLogger();\n\n  public log(_logLevel: LogLevel, _message: string): void { // eslint-disable-line @typescript-eslint/no-unused-vars\n  }\n}\n\nexport class ConsoleLogger implements Logger {\n  private readonly minLevel: LogLevel;\n\n  public constructor(minimumLogLevel: LogLevel) {\n    this.minLevel = minimumLogLevel;\n  }\n\n  public log(logLevel: LogLevel, message: string | Error): void {\n    if (logLevel >= this.minLevel) {\n      const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\n      switch (logLevel) {\n        case LogLevel.Critical:\n        case LogLevel.Error:\n          console.error(msg);\n          break;\n        case LogLevel.Warning:\n          console.warn(msg);\n          break;\n        case LogLevel.Information:\n          console.info(msg);\n          break;\n        default:\n          // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n          console.log(msg);\n          break;\n      }\n    }\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { internalFunctions as navigationManagerFunctions } from '../../Services/NavigationManager';\nimport { toLogicalRootCommentElement, LogicalElement, toLogicalElement } from '../../Rendering/LogicalElements';\nimport { ServerComponentDescriptor } from '../../Services/ComponentDescriptorDiscovery';\nimport { HubConnectionState } from '@microsoft/signalr';\nimport { getAndRemovePendingRootComponentContainer } from '../../Rendering/JSRootComponents';\n\nexport class CircuitDescriptor {\n  public circuitId?: string;\n\n  public components: ServerComponentDescriptor[];\n\n  public applicationState: string;\n\n  public constructor(components: ServerComponentDescriptor[], appState: string) {\n    this.circuitId = undefined;\n    this.components = components;\n    this.applicationState = appState;\n  }\n\n  public reconnect(reconnection: signalR.HubConnection): Promise<boolean> {\n    if (!this.circuitId) {\n      throw new Error('Circuit host not initialized.');\n    }\n\n    if (reconnection.state !== HubConnectionState.Connected) {\n      return Promise.resolve(false);\n    }\n    return reconnection.invoke<boolean>('ConnectCircuit', this.circuitId);\n  }\n\n  public initialize(circuitId: string): void {\n    if (this.circuitId) {\n      throw new Error(`Circuit host '${this.circuitId}' already initialized.`);\n    }\n\n    this.circuitId = circuitId;\n  }\n\n  public async startCircuit(connection: signalR.HubConnection): Promise<boolean> {\n    if (connection.state !== HubConnectionState.Connected) {\n      return false;\n    }\n    const result = await connection.invoke<string>(\n      'StartCircuit',\n      navigationManagerFunctions.getBaseURI(),\n      navigationManagerFunctions.getLocationHref(),\n      JSON.stringify(this.components.map(c => c.toRecord())),\n      this.applicationState || ''\n    );\n\n    if (result) {\n      this.initialize(result);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public resolveElement(sequenceOrIdentifier: string): LogicalElement {\n    // It may be a root component added by JS\n    const jsAddedComponentContainer = getAndRemovePendingRootComponentContainer(sequenceOrIdentifier);\n    if (jsAddedComponentContainer) {\n      return toLogicalElement(jsAddedComponentContainer, true);\n    }\n\n    // ... or it may be a root component added by .NET\n    const parsedSequence = Number.parseInt(sequenceOrIdentifier);\n    if (!Number.isNaN(parsedSequence)) {\n      return toLogicalRootCommentElement(this.components[parsedSequence].start as Comment, this.components[parsedSequence].end as Comment);\n    }\n\n    throw new Error(`Invalid sequence number or identifier '${sequenceOrIdentifier}'.`);\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { LogLevel } from '../Logging/Logger';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\n\nexport interface CircuitStartOptions {\n  configureSignalR: (builder: HubConnectionBuilder) => void;\n  logLevel: LogLevel;\n  reconnectionOptions: ReconnectionOptions;\n  reconnectionHandler?: ReconnectionHandler;\n}\n\nexport function resolveOptions(userOptions?: Partial<CircuitStartOptions>): CircuitStartOptions {\n  const result = { ...defaultOptions, ...userOptions };\n\n  // The spread operator can't be used for a deep merge, so do the same for subproperties\n  if (userOptions && userOptions.reconnectionOptions) {\n    result.reconnectionOptions = { ...defaultOptions.reconnectionOptions, ...userOptions.reconnectionOptions };\n  }\n\n  return result;\n}\n\nexport interface ReconnectionOptions {\n  maxRetries: number;\n  retryIntervalMilliseconds: number;\n  dialogId: string;\n}\n\nexport interface ReconnectionHandler {\n  onConnectionDown(options: ReconnectionOptions, error?: Error): void;\n  onConnectionUp(): void;\n}\n\nconst defaultOptions: CircuitStartOptions = {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  configureSignalR: (_) => { },\n  logLevel: LogLevel.Warning,\n  reconnectionOptions: {\n    maxRetries: 8,\n    retryIntervalMilliseconds: 20000,\n    dialogId: 'components-reconnect-modal',\n  },\n};\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { ReconnectDisplay } from './ReconnectDisplay';\nimport { Logger, LogLevel } from '../Logging/Logger';\nimport { Blazor } from '../../GlobalExports';\n\nexport class DefaultReconnectDisplay implements ReconnectDisplay {\n  modal: HTMLDivElement;\n\n  message: HTMLHeadingElement;\n\n  button: HTMLButtonElement;\n\n  addedToDom = false;\n\n  reloadParagraph: HTMLParagraphElement;\n\n  loader: HTMLDivElement;\n\n  constructor(dialogId: string, private readonly maxRetries: number, private readonly document: Document, private readonly logger: Logger) {\n    this.modal = this.document.createElement('div');\n    this.modal.id = dialogId;\n    this.maxRetries = maxRetries;\n\n    const modalStyles = [\n      'position: fixed',\n      'top: 0',\n      'right: 0',\n      'bottom: 0',\n      'left: 0',\n      'z-index: 1050',\n      'display: none',\n      'overflow: hidden',\n      'background-color: #fff',\n      'opacity: 0.8',\n      'text-align: center',\n      'font-weight: bold',\n      'transition: visibility 0s linear 500ms',\n    ];\n\n    this.modal.style.cssText = modalStyles.join(';');\n\n    this.message = this.document.createElement('h5') as HTMLHeadingElement;\n    this.message.style.cssText = 'margin-top: 20px';\n\n    this.button = this.document.createElement('button') as HTMLButtonElement;\n    this.button.style.cssText = 'margin:5px auto 5px';\n    this.button.textContent = 'Retry';\n\n    const link = this.document.createElement('a');\n    link.addEventListener('click', () => location.reload());\n    link.textContent = 'reload';\n\n    this.reloadParagraph = this.document.createElement('p') as HTMLParagraphElement;\n    this.reloadParagraph.textContent = 'Alternatively, ';\n    this.reloadParagraph.appendChild(link);\n\n    this.modal.appendChild(this.message);\n    this.modal.appendChild(this.button);\n    this.modal.appendChild(this.reloadParagraph);\n\n    this.loader = this.getLoader();\n\n    this.message.after(this.loader);\n\n    this.button.addEventListener('click', async () => {\n      this.show();\n\n      try {\n        // reconnect will asynchronously return:\n        // - true to mean success\n        // - false to mean we reached the server, but it rejected the connection (e.g., unknown circuit ID)\n        // - exception to mean we didn't reach the server (this can be sync or async)\n        const successful = await Blazor.reconnect!();\n        if (!successful) {\n          this.rejected();\n        }\n      } catch (err: unknown) {\n        // We got an exception, server is currently unavailable\n        this.logger.log(LogLevel.Error, err as Error);\n        this.failed();\n      }\n    });\n  }\n\n  show(): void {\n    if (!this.addedToDom) {\n      this.addedToDom = true;\n      this.document.body.appendChild(this.modal);\n    }\n    this.modal.style.display = 'block';\n    this.loader.style.display = 'inline-block';\n    this.button.style.display = 'none';\n    this.reloadParagraph.style.display = 'none';\n    this.message.textContent = 'Attempting to reconnect to the server...';\n\n    // The visibility property has a transition so it takes effect after a delay.\n    // This is to prevent it appearing momentarily when navigating away. For the\n    // transition to take effect, we have to apply the visibility asynchronously.\n    this.modal.style.visibility = 'hidden';\n    setTimeout(() => {\n      this.modal.style.visibility = 'visible';\n    }, 0);\n  }\n\n  update(currentAttempt: number): void {\n    this.message.textContent = `Attempting to reconnect to the server: ${currentAttempt} of ${this.maxRetries}`;\n  }\n\n  hide(): void {\n    this.modal.style.display = 'none';\n  }\n\n  failed(): void {\n    this.button.style.display = 'block';\n    this.reloadParagraph.style.display = 'none';\n    this.loader.style.display = 'none';\n\n    const errorDescription = this.document.createTextNode('Reconnection failed. Try ');\n\n    const link = this.document.createElement('a');\n    link.textContent = 'reloading';\n    link.setAttribute('href', '');\n    link.addEventListener('click', () => location.reload());\n\n    const errorInstructions = this.document.createTextNode(' the page if you\\'re unable to reconnect.');\n\n    this.message.replaceChildren(errorDescription, link, errorInstructions);\n  }\n\n  rejected(): void {\n    this.button.style.display = 'none';\n    this.reloadParagraph.style.display = 'none';\n    this.loader.style.display = 'none';\n\n    const errorDescription = this.document.createTextNode('Could not reconnect to the server. ');\n\n    const link = this.document.createElement('a');\n    link.textContent = 'Reload';\n    link.setAttribute('href', '');\n    link.addEventListener('click', () => location.reload());\n\n    const errorInstructions = this.document.createTextNode(' the page to restore functionality.');\n\n    this.message.replaceChildren(errorDescription, link, errorInstructions);\n  }\n\n  private getLoader(): HTMLDivElement {\n    const loader = this.document.createElement('div');\n\n    const loaderStyles = [\n      'border: 0.3em solid #f3f3f3',\n      'border-top: 0.3em solid #3498db',\n      'border-radius: 50%',\n      'width: 2em',\n      'height: 2em',\n      'display: inline-block',\n    ];\n\n    loader.style.cssText = loaderStyles.join(';');\n    loader.animate([{ transform: 'rotate(0deg)' }, { transform: 'rotate(360deg)' }], {\n      duration: 2000,\n      iterations: Infinity,\n    });\n\n    return loader;\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { ReconnectDisplay } from './ReconnectDisplay';\nexport class UserSpecifiedDisplay implements ReconnectDisplay {\n  static readonly ShowClassName = 'components-reconnect-show';\n\n  static readonly HideClassName = 'components-reconnect-hide';\n\n  static readonly FailedClassName = 'components-reconnect-failed';\n\n  static readonly RejectedClassName = 'components-reconnect-rejected';\n\n  static readonly MaxRetriesId = 'components-reconnect-max-retries';\n\n  static readonly CurrentAttemptId = 'components-reconnect-current-attempt';\n\n  constructor(private dialog: HTMLElement, private readonly maxRetries: number, private readonly document: Document) {\n    this.document = document;\n\n    const maxRetriesElement = this.document.getElementById(UserSpecifiedDisplay.MaxRetriesId);\n\n    if (maxRetriesElement) {\n      maxRetriesElement.innerText = this.maxRetries.toString();\n    }\n  }\n\n  show(): void {\n    this.removeClasses();\n    this.dialog.classList.add(UserSpecifiedDisplay.ShowClassName);\n  }\n\n  update(currentAttempt: number): void {\n    const currentAttemptElement = this.document.getElementById(UserSpecifiedDisplay.CurrentAttemptId);\n\n    if (currentAttemptElement) {\n      currentAttemptElement.innerText = currentAttempt.toString();\n    }\n  }\n\n  hide(): void {\n    this.removeClasses();\n    this.dialog.classList.add(UserSpecifiedDisplay.HideClassName);\n  }\n\n  failed(): void {\n    this.removeClasses();\n    this.dialog.classList.add(UserSpecifiedDisplay.FailedClassName);\n  }\n\n  rejected(): void {\n    this.removeClasses();\n    this.dialog.classList.add(UserSpecifiedDisplay.RejectedClassName);\n  }\n\n  private removeClasses() {\n    this.dialog.classList.remove(UserSpecifiedDisplay.ShowClassName, UserSpecifiedDisplay.HideClassName, UserSpecifiedDisplay.FailedClassName, UserSpecifiedDisplay.RejectedClassName);\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { ReconnectionHandler, ReconnectionOptions } from './CircuitStartOptions';\nimport { ReconnectDisplay } from './ReconnectDisplay';\nimport { DefaultReconnectDisplay } from './DefaultReconnectDisplay';\nimport { UserSpecifiedDisplay } from './UserSpecifiedDisplay';\nimport { Logger, LogLevel } from '../Logging/Logger';\nimport { Blazor } from '../../GlobalExports';\n\nexport class DefaultReconnectionHandler implements ReconnectionHandler {\n  private readonly _logger: Logger;\n\n  private readonly _reconnectCallback: () => Promise<boolean>;\n\n  private _currentReconnectionProcess: ReconnectionProcess | null = null;\n\n  private _reconnectionDisplay?: ReconnectDisplay;\n\n  constructor(logger: Logger, overrideDisplay?: ReconnectDisplay, reconnectCallback?: () => Promise<boolean>) {\n    this._logger = logger;\n    this._reconnectionDisplay = overrideDisplay;\n    this._reconnectCallback = reconnectCallback || Blazor.reconnect!;\n  }\n\n  onConnectionDown(options: ReconnectionOptions, _error?: Error): void {\n    if (!this._reconnectionDisplay) {\n      const modal = document.getElementById(options.dialogId);\n      this._reconnectionDisplay = modal\n        ? new UserSpecifiedDisplay(modal, options.maxRetries, document)\n        : new DefaultReconnectDisplay(options.dialogId, options.maxRetries, document, this._logger);\n    }\n\n    if (!this._currentReconnectionProcess) {\n      this._currentReconnectionProcess = new ReconnectionProcess(options, this._logger, this._reconnectCallback, this._reconnectionDisplay);\n    }\n  }\n\n  onConnectionUp(): void {\n    if (this._currentReconnectionProcess) {\n      this._currentReconnectionProcess.dispose();\n      this._currentReconnectionProcess = null;\n    }\n  }\n}\n\nclass ReconnectionProcess {\n  static readonly MaximumFirstRetryInterval = 3000;\n\n  readonly reconnectDisplay: ReconnectDisplay;\n\n  isDisposed = false;\n\n  constructor(options: ReconnectionOptions, private logger: Logger, private reconnectCallback: () => Promise<boolean>, display: ReconnectDisplay) {\n    this.reconnectDisplay = display;\n    this.reconnectDisplay.show();\n    this.attemptPeriodicReconnection(options);\n  }\n\n  public dispose() {\n    this.isDisposed = true;\n    this.reconnectDisplay.hide();\n  }\n\n  async attemptPeriodicReconnection(options: ReconnectionOptions) {\n    for (let i = 0; i < options.maxRetries; i++) {\n      this.reconnectDisplay.update(i + 1);\n\n      const delayDuration = i === 0 && options.retryIntervalMilliseconds > ReconnectionProcess.MaximumFirstRetryInterval\n        ? ReconnectionProcess.MaximumFirstRetryInterval\n        : options.retryIntervalMilliseconds;\n      await this.delay(delayDuration);\n\n      if (this.isDisposed) {\n        break;\n      }\n\n      try {\n        // reconnectCallback will asynchronously return:\n        // - true to mean success\n        // - false to mean we reached the server, but it rejected the connection (e.g., unknown circuit ID)\n        // - exception to mean we didn't reach the server (this can be sync or async)\n        const result = await this.reconnectCallback();\n        if (!result) {\n          // If the server responded and refused to reconnect, stop auto-retrying.\n          this.reconnectDisplay.rejected();\n          return;\n        }\n        return;\n      } catch (err: unknown) {\n        // We got an exception so will try again momentarily\n        this.logger.log(LogLevel.Error, err as Error);\n      }\n    }\n\n    this.reconnectDisplay.failed();\n  }\n\n  delay(durationMilliseconds: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, durationMilliseconds));\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nexport function discoverComponents(document: Document, type: 'webassembly' | 'server'): ServerComponentDescriptor[] | WebAssemblyComponentDescriptor[] {\n  switch (type){\n    case 'webassembly':\n      return discoverWebAssemblyComponents(document);\n    case 'server':\n      return discoverServerComponents(document);\n  }\n}\n\nfunction discoverServerComponents(document: Document): ServerComponentDescriptor[] {\n  const componentComments = resolveComponentComments(document, 'server') as ServerComponentComment[];\n  const discoveredComponents: ServerComponentDescriptor[] = [];\n  for (let i = 0; i < componentComments.length; i++) {\n    const componentComment = componentComments[i];\n    const entry = new ServerComponentDescriptor(\n      componentComment.type,\n      componentComment.start,\n      componentComment.end,\n      componentComment.sequence,\n      componentComment.descriptor,\n    );\n\n    discoveredComponents.push(entry);\n  }\n\n  return discoveredComponents.sort((a, b): number => a.sequence - b.sequence);\n}\n\nconst blazorStateCommentRegularExpression = /^\\s*Blazor-Component-State:(?<state>[a-zA-Z0-9+/=]+)$/;\n\nexport function discoverPersistedState(node: Node): string | null | undefined {\n  if (node.nodeType === Node.COMMENT_NODE) {\n    const content = node.textContent || '';\n    const parsedState = blazorStateCommentRegularExpression.exec(content);\n    const value = parsedState && parsedState.groups && parsedState.groups['state'];\n    if (value){\n      node.parentNode?.removeChild(node);\n    }\n    return value;\n  }\n\n  if (!node.hasChildNodes()) {\n    return;\n  }\n\n  const nodes = node.childNodes;\n  for (let index = 0; index < nodes.length; index++) {\n    const candidate = nodes[index];\n    const result = discoverPersistedState(candidate);\n    if (result){\n      return result;\n    }\n  }\n\n  return;\n}\n\nfunction discoverWebAssemblyComponents(document: Document): WebAssemblyComponentDescriptor[] {\n  const componentComments = resolveComponentComments(document, 'webassembly') as WebAssemblyComponentDescriptor[];\n  const discoveredComponents: WebAssemblyComponentDescriptor[] = [];\n  for (let i = 0; i < componentComments.length; i++) {\n    const componentComment = componentComments[i];\n    const entry = new WebAssemblyComponentDescriptor(\n      componentComment.type,\n      componentComment.start,\n      componentComment.end,\n      componentComment.assembly,\n      componentComment.typeName,\n      componentComment.parameterDefinitions,\n      componentComment.parameterValues,\n    );\n\n    discoveredComponents.push(entry);\n  }\n\n  return discoveredComponents.sort((a, b): number => a.id - b.id);\n}\n\ninterface ComponentComment {\n  type: 'server' | 'webassembly';\n  prerenderId?: string;\n}\n\ninterface ServerComponentComment {\n  type: 'server';\n  sequence: number;\n  descriptor: string;\n  start: Node;\n  end?: Node;\n  prerenderId?: string;\n}\n\ninterface WebAssemblyComponentComment {\n  type: 'webassembly';\n  typeName: string;\n  assembly: string;\n  parameterDefinitions?: string;\n  parameterValues?: string;\n  prerenderId?: string;\n  start: Node;\n  end?: Node;\n}\n\nfunction resolveComponentComments(node: Node, type: 'webassembly' | 'server'): ComponentComment[] {\n  if (!node.hasChildNodes()) {\n    return [];\n  }\n\n  const result: ComponentComment[] = [];\n  const childNodeIterator = new ComponentCommentIterator(node.childNodes);\n  while (childNodeIterator.next() && childNodeIterator.currentElement) {\n    const componentComment = getComponentComment(childNodeIterator, type);\n    if (componentComment) {\n      result.push(componentComment);\n    } else {\n      const childResults = resolveComponentComments(childNodeIterator.currentElement, type);\n      for (let j = 0; j < childResults.length; j++) {\n        const childResult = childResults[j];\n        result.push(childResult);\n      }\n    }\n  }\n\n  return result;\n}\n\nconst blazorCommentRegularExpression = new RegExp(/^\\s*Blazor:[^{]*(?<descriptor>.*)$/);\n\nfunction getComponentComment(commentNodeIterator: ComponentCommentIterator, type: 'webassembly' | 'server'): ComponentComment | undefined {\n  const candidateStart = commentNodeIterator.currentElement;\n\n  if (!candidateStart || candidateStart.nodeType !== Node.COMMENT_NODE) {\n    return;\n  }\n  if (candidateStart.textContent) {\n    const definition = blazorCommentRegularExpression.exec(candidateStart.textContent);\n    const json = definition && definition.groups && definition.groups['descriptor'];\n\n    if (json) {\n      try {\n        const componentComment = parseCommentPayload(json);\n        switch (type) {\n          case 'webassembly':\n            return createWebAssemblyComponentComment(componentComment as WebAssemblyComponentComment, candidateStart, commentNodeIterator);\n          case 'server':\n            return createServerComponentComment(componentComment as ServerComponentComment, candidateStart, commentNodeIterator);\n        }\n      } catch (error) {\n        throw new Error(`Found malformed component comment at ${candidateStart.textContent}`);\n      }\n    } else {\n      return;\n    }\n  }\n}\n\nfunction parseCommentPayload(json: string): ComponentComment {\n  const payload = JSON.parse(json) as ComponentComment;\n  const { type } = payload;\n  if (type !== 'server' && type !== 'webassembly') {\n    throw new Error(`Invalid component type '${type}'.`);\n  }\n\n  return payload;\n}\n\nfunction createServerComponentComment(payload: ServerComponentComment, start: Node, iterator: ComponentCommentIterator): ServerComponentComment | undefined {\n  const { type, descriptor, sequence, prerenderId } = payload;\n\n  // Regardless of whether this comment matches the type we're looking for (i.e., 'server'), we still need to move the iterator\n  // on to its end position since we don't want to recurse into unrelated prerendered components, nor do we want to get confused\n  // by the end marker.\n  const end = prerenderId ? getComponentEndComment(prerenderId, iterator) : undefined;\n  if (prerenderId && !end) {\n    throw new Error(`Could not find an end component comment for '${start}'.`);\n  }\n\n  if (type !== 'server') {\n    return undefined;\n  }\n\n  if (!descriptor) {\n    throw new Error('descriptor must be defined when using a descriptor.');\n  }\n\n  if (sequence === undefined) {\n    throw new Error('sequence must be defined when using a descriptor.');\n  }\n\n  if (!Number.isInteger(sequence)) {\n    throw new Error(`Error parsing the sequence '${sequence}' for component '${JSON.stringify(payload)}'`);\n  }\n\n  return {\n    type,\n    sequence,\n    descriptor,\n    start,\n    prerenderId,\n    end,\n  };\n}\n\nfunction createWebAssemblyComponentComment(payload: WebAssemblyComponentComment, start: Node, iterator: ComponentCommentIterator): WebAssemblyComponentComment | undefined {\n  const { type, assembly, typeName, parameterDefinitions, parameterValues, prerenderId } = payload;\n\n  // Regardless of whether this comment matches the type we're looking for (i.e., 'webassembly'), we still need to move the iterator\n  // on to its end position since we don't want to recurse into unrelated prerendered components, nor do we want to get confused\n  // by the end marker.\n  const end = prerenderId ? getComponentEndComment(prerenderId, iterator) : undefined;\n  if (prerenderId && !end) {\n    throw new Error(`Could not find an end component comment for '${start}'.`);\n  }\n\n  if (type !== 'webassembly') {\n    return undefined;\n  }\n\n  if (!assembly) {\n    throw new Error('assembly must be defined when using a descriptor.');\n  }\n\n  if (!typeName) {\n    throw new Error('typeName must be defined when using a descriptor.');\n  }\n\n  return {\n    type,\n    assembly,\n    typeName,\n    // Parameter definitions and values come Base64 encoded from the server, since they contain random data and can make the\n    // comment invalid. We could unencode them in .NET Code, but that would be slower to do and we can leverage the fact that\n    // JS provides a native function that will be much faster and that we are doing this work while we are fetching\n    // blazor.boot.json\n    parameterDefinitions: parameterDefinitions && atob(parameterDefinitions),\n    parameterValues: parameterValues && atob(parameterValues),\n    start,\n    prerenderId,\n    end,\n  };\n}\n\nfunction getComponentEndComment(prerenderedId: string, iterator: ComponentCommentIterator): ChildNode | undefined {\n  while (iterator.next() && iterator.currentElement) {\n    const node = iterator.currentElement;\n    if (node.nodeType !== Node.COMMENT_NODE) {\n      continue;\n    }\n    if (!node.textContent) {\n      continue;\n    }\n\n    const definition = blazorCommentRegularExpression.exec(node.textContent);\n    const json = definition && definition[1];\n    if (!json) {\n      continue;\n    }\n\n    validateEndComponentPayload(json, prerenderedId);\n\n    return node;\n  }\n\n  return undefined;\n}\n\nfunction validateEndComponentPayload(json: string, prerenderedId: string): void {\n  const payload = JSON.parse(json) as ComponentComment;\n  if (Object.keys(payload).length !== 1) {\n    throw new Error(`Invalid end of component comment: '${json}'`);\n  }\n  const prerenderedEndId = payload.prerenderId;\n  if (!prerenderedEndId) {\n    throw new Error(`End of component comment must have a value for the prerendered property: '${json}'`);\n  }\n  if (prerenderedEndId !== prerenderedId) {\n    throw new Error(`End of component comment prerendered property must match the start comment prerender id: '${prerenderedId}', '${prerenderedEndId}'`);\n  }\n}\n\nclass ComponentCommentIterator {\n\n  private childNodes: NodeListOf<ChildNode>;\n\n  private currentIndex: number;\n\n  private length: number;\n\n  public currentElement: ChildNode | undefined;\n\n  public constructor(childNodes: NodeListOf<ChildNode>) {\n    this.childNodes = childNodes;\n    this.currentIndex = -1;\n    this.length = childNodes.length;\n  }\n\n  public next(): boolean {\n    this.currentIndex++;\n    if (this.currentIndex < this.length) {\n      this.currentElement = this.childNodes[this.currentIndex];\n      return true;\n    } else {\n      this.currentElement = undefined;\n      return false;\n    }\n  }\n}\n\ninterface ServerComponentMarker {\n  type: string;\n  sequence: number;\n  descriptor: string;\n}\n\nexport class ServerComponentDescriptor {\n  public type: string;\n\n  public start: Node;\n\n  public end?: Node;\n\n  public sequence: number;\n\n  public descriptor: string;\n\n  public constructor(type: string, start: Node, end: Node | undefined, sequence: number, descriptor: string) {\n    this.type = type;\n    this.start = start;\n    this.end = end;\n    this.sequence = sequence;\n    this.descriptor = descriptor;\n  }\n\n  public toRecord(): ServerComponentMarker {\n    const result = { type: this.type, sequence: this.sequence, descriptor: this.descriptor };\n    return result;\n  }\n}\n\nexport class WebAssemblyComponentDescriptor {\n  private static globalId = 1;\n\n  public type: 'webassembly';\n\n  public typeName: string;\n\n  public assembly: string;\n\n  public parameterDefinitions?: string;\n\n  public parameterValues?: string;\n\n  public id: number;\n\n  public start: Node;\n\n  public end?: Node;\n\n  public constructor(type: 'webassembly', start: Node, end: Node | undefined, assembly: string, typeName: string, parameterDefinitions?: string, parameterValues?: string) {\n    this.id = WebAssemblyComponentDescriptor.globalId++;\n    this.type = type;\n    this.assembly = assembly;\n    this.typeName = typeName;\n    this.parameterDefinitions = parameterDefinitions;\n    this.parameterValues = parameterValues;\n    this.start = start;\n    this.end = end;\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { Blazor } from '../GlobalExports';\nimport { rendererAttached } from \"../Rendering/WebRendererInteropMethods\";\n\ntype BeforeBlazorStartedCallback = (...args: unknown[]) => Promise<void>;\nexport type AfterBlazorStartedCallback = (blazor: typeof Blazor) => Promise<void>;\ntype BlazorInitializer = { beforeStart: BeforeBlazorStartedCallback, afterStarted: AfterBlazorStartedCallback };\n\nexport class JSInitializer {\n  private afterStartedCallbacks: AfterBlazorStartedCallback[] = [];\n\n  async importInitializersAsync(initializerFiles: string[], initializerArguments: unknown[]): Promise<void> {\n    await Promise.all(initializerFiles.map(f => importAndInvokeInitializer(this, f)));\n\n    function adjustPath(path: string): string {\n      // This is the same we do in JS interop with the import callback\n      const base = document.baseURI;\n      path = base.endsWith('/') ? `${base}${path}` : `${base}/${path}`;\n      return path;\n    }\n\n    async function importAndInvokeInitializer(jsInitializer: JSInitializer, path: string): Promise<void> {\n      const adjustedPath = adjustPath(path);\n      const initializer = await import(/* webpackIgnore: true */ adjustedPath) as Partial<BlazorInitializer>;\n      if (initializer === undefined) {\n        return;\n      }\n      const { beforeStart: beforeStart, afterStarted: afterStarted } = initializer;\n      if (afterStarted) {\n        jsInitializer.afterStartedCallbacks.push(afterStarted);\n      }\n\n      if (beforeStart) {\n        return beforeStart(...initializerArguments);\n      }\n    }\n  }\n\n  async invokeAfterStartedCallbacks(blazor: typeof Blazor): Promise<void> {\n    await rendererAttached;\n    await Promise.all(this.afterStartedCallbacks.map(callback => callback(blazor)));\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { DotNet } from '@microsoft/dotnet-js-interop';\nimport { Blazor } from './GlobalExports';\nimport { HubConnectionBuilder, HubConnection, HttpTransportType } from '@microsoft/signalr';\nimport { MessagePackHubProtocol } from '@microsoft/signalr-protocol-msgpack';\nimport { showErrorNotification } from './BootErrors';\nimport { RenderQueue } from './Platform/Circuits/RenderQueue';\nimport { ConsoleLogger } from './Platform/Logging/Loggers';\nimport { LogLevel, Logger } from './Platform/Logging/Logger';\nimport { CircuitDescriptor } from './Platform/Circuits/CircuitManager';\nimport { resolveOptions, CircuitStartOptions } from './Platform/Circuits/CircuitStartOptions';\nimport { DefaultReconnectionHandler } from './Platform/Circuits/DefaultReconnectionHandler';\nimport { attachRootComponentToLogicalElement } from './Rendering/Renderer';\nimport { discoverPersistedState, ServerComponentDescriptor } from './Services/ComponentDescriptorDiscovery';\nimport { sendJSDataStream } from './Platform/Circuits/CircuitStreamingInterop';\nimport { fetchAndInvokeInitializers } from './JSInitializers/JSInitializers.Server';\n\nlet renderingFailed = false;\nlet connection: HubConnection;\nlet circuit: CircuitDescriptor;\nlet dispatcher: DotNet.ICallDispatcher;\n\nexport async function startCircuit(userOptions?: Partial<CircuitStartOptions>, components?: ServerComponentDescriptor[]): Promise<void> {\n  // Establish options to be used\n  const options = resolveOptions(userOptions);\n  const jsInitializer = await fetchAndInvokeInitializers(options);\n\n  const logger = new ConsoleLogger(options.logLevel);\n\n  Blazor.reconnect = async (existingConnection?: HubConnection): Promise<boolean> => {\n    if (renderingFailed) {\n      // We can't reconnect after a failure, so exit early.\n      return false;\n    }\n\n    const reconnection = existingConnection || await initializeConnection(options, logger, circuit);\n    if (!(await circuit.reconnect(reconnection))) {\n      logger.log(LogLevel.Information, 'Reconnection attempt to the circuit was rejected by the server. This may indicate that the associated state is no longer available on the server.');\n      return false;\n    }\n\n    options.reconnectionHandler!.onConnectionUp();\n\n    return true;\n  };\n  Blazor.defaultReconnectionHandler = new DefaultReconnectionHandler(logger);\n\n  options.reconnectionHandler = options.reconnectionHandler || Blazor.defaultReconnectionHandler;\n  logger.log(LogLevel.Information, 'Starting up Blazor server-side application.');\n\n  const appState = discoverPersistedState(document);\n  circuit = new CircuitDescriptor(components || [], appState || '');\n\n  // Configure navigation via SignalR\n  Blazor._internal.navigationManager.listenForNavigationEvents((uri: string, state: string | undefined, intercepted: boolean): Promise<void> => {\n    return connection.send('OnLocationChanged', uri, state, intercepted);\n  }, (callId: number, uri: string, state: string | undefined, intercepted: boolean): Promise<void> => {\n    return connection.send('OnLocationChanging', callId, uri, state, intercepted);\n  });\n\n  Blazor._internal.forceCloseConnection = () => connection.stop();\n  Blazor._internal.sendJSDataStream = (data: ArrayBufferView | Blob, streamId: number, chunkSize: number) => sendJSDataStream(connection, data, streamId, chunkSize);\n\n  dispatcher = DotNet.attachDispatcher({\n    beginInvokeDotNetFromJS: (callId, assemblyName, methodIdentifier, dotNetObjectId, argsJson): void => {\n      connection.send('BeginInvokeDotNetFromJS', callId ? callId.toString() : null, assemblyName, methodIdentifier, dotNetObjectId || 0, argsJson);\n    },\n    endInvokeJSFromDotNet: (asyncHandle, succeeded, argsJson): void => {\n      connection.send('EndInvokeJSFromDotNet', asyncHandle, succeeded, argsJson);\n    },\n    sendByteArray: (id: number, data: Uint8Array): void => {\n      connection.send('ReceiveByteArray', id, data);\n    },\n  });\n\n  const initialConnection = await initializeConnection(options, logger, circuit);\n  const circuitStarted = await circuit.startCircuit(initialConnection);\n  if (!circuitStarted) {\n    logger.log(LogLevel.Error, 'Failed to start the circuit.');\n    return;\n  }\n\n  let disconnectSent = false;\n  const cleanup = () => {\n    if (!disconnectSent) {\n      const data = new FormData();\n      const circuitId = circuit.circuitId!;\n      data.append('circuitId', circuitId);\n      disconnectSent = navigator.sendBeacon('_blazor/disconnect', data);\n    }\n  };\n\n  Blazor.disconnect = cleanup;\n\n  window.addEventListener('unload', cleanup, { capture: false, once: true });\n\n  logger.log(LogLevel.Information, 'Blazor server-side application started.');\n\n  jsInitializer.invokeAfterStartedCallbacks(Blazor);\n}\n\nasync function initializeConnection(options: CircuitStartOptions, logger: Logger, circuit: CircuitDescriptor): Promise<HubConnection> {\n  const hubProtocol = new MessagePackHubProtocol();\n  (hubProtocol as unknown as { name: string }).name = 'blazorpack';\n\n  const connectionBuilder = new HubConnectionBuilder()\n    .withUrl('_blazor')\n    .withHubProtocol(hubProtocol);\n\n  options.configureSignalR(connectionBuilder);\n\n  const newConnection = connectionBuilder.build();\n\n  newConnection.on('JS.AttachComponent', (componentId, selector) => attachRootComponentToLogicalElement(0, circuit.resolveElement(selector), componentId, false));\n  newConnection.on('JS.BeginInvokeJS', dispatcher.beginInvokeJSFromDotNet.bind(dispatcher));\n  newConnection.on('JS.EndInvokeDotNet', dispatcher.endInvokeDotNetFromJS.bind(dispatcher));\n  newConnection.on('JS.ReceiveByteArray', dispatcher.receiveByteArray.bind(dispatcher));\n\n  newConnection.on('JS.BeginTransmitStream', (streamId: number) => {\n    const readableStream = new ReadableStream({\n      start(controller) {\n        newConnection.stream('SendDotNetStreamToJS', streamId).subscribe({\n          next: (chunk: Uint8Array) => controller.enqueue(chunk),\n          complete: () => controller.close(),\n          error: (err) => controller.error(err),\n        });\n      },\n    });\n\n    dispatcher.supplyDotNetStream(streamId, readableStream);\n  });\n\n  const renderQueue = RenderQueue.getOrCreate(logger);\n  newConnection.on('JS.RenderBatch', (batchId: number, batchData: Uint8Array) => {\n    logger.log(LogLevel.Debug, `Received render batch with id ${batchId} and ${batchData.byteLength} bytes.`);\n    renderQueue.processBatch(batchId, batchData, newConnection);\n  });\n\n  newConnection.on('JS.EndLocationChanging', Blazor._internal.navigationManager.endLocationChanging);\n\n  newConnection.onclose(error => !renderingFailed && options.reconnectionHandler!.onConnectionDown(options.reconnectionOptions, error));\n  newConnection.on('JS.Error', error => {\n    renderingFailed = true;\n    unhandledError(newConnection, error, logger);\n    showErrorNotification();\n  });\n\n  try {\n    await newConnection.start();\n    connection = newConnection;\n  } catch (ex: any) {\n    unhandledError(newConnection, ex as Error, logger);\n\n    if (ex.errorType === 'FailedToNegotiateWithServerError') {\n      // Connection with the server has been interrupted, and we're in the process of reconnecting.\n      // Throw this exception so it can be handled at the reconnection layer, and don't show the\n      // error notification.\n      throw ex;\n    } else {\n      showErrorNotification();\n    }\n\n    if (ex.innerErrors) {\n      if (ex.innerErrors.some(e => e.errorType === 'UnsupportedTransportError' && e.transport === HttpTransportType.WebSockets)) {\n        logger.log(LogLevel.Error, 'Unable to connect, please ensure you are using an updated browser that supports WebSockets.');\n      } else if (ex.innerErrors.some(e => e.errorType === 'FailedToStartTransportError' && e.transport === HttpTransportType.WebSockets)) {\n        logger.log(LogLevel.Error, 'Unable to connect, please ensure WebSockets are available. A VPN or proxy may be blocking the connection.');\n      } else if (ex.innerErrors.some(e => e.errorType === 'DisabledTransportError' && e.transport === HttpTransportType.LongPolling)) {\n        logger.log(LogLevel.Error, 'Unable to initiate a SignalR connection to the server. This might be because the server is not configured to support WebSockets. For additional details, visit https://aka.ms/blazor-server-websockets-error.');\n      }\n    }\n  }\n\n  // Check if the connection is established using the long polling transport,\n  // using the `features.inherentKeepAlive` property only present with long polling.\n  if ((newConnection as any).connection?.features?.inherentKeepAlive) {\n    logger.log(LogLevel.Warning, 'Failed to connect via WebSockets, using the Long Polling fallback transport. This may be due to a VPN or proxy blocking the connection. To troubleshoot this, visit https://aka.ms/blazor-server-using-fallback-long-polling.');\n  }\n\n  return newConnection;\n}\n\nfunction unhandledError(connection: HubConnection, err: Error, logger: Logger): void {\n  logger.log(LogLevel.Error, err);\n\n  // Disconnect on errors.\n  //\n  // Trying to call methods on the connection after its been closed will throw.\n  if (connection) {\n    connection.stop();\n  }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { CircuitStartOptions } from '../Platform/Circuits/CircuitStartOptions';\nimport { JSInitializer } from './JSInitializers';\n\nexport async function fetchAndInvokeInitializers(options: Partial<CircuitStartOptions>) : Promise<JSInitializer> {\n  const jsInitializersResponse = await fetch('_blazor/initializers', {\n    method: 'GET',\n    credentials: 'include',\n    cache: 'no-cache',\n  });\n\n  const initializers: string[] = await jsInitializersResponse.json();\n  const jsInitializer = new JSInitializer();\n  await jsInitializer.importInitializersAsync(initializers, [options]);\n  return jsInitializer;\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { HubConnection } from '@microsoft/signalr';\nimport { getNextChunk } from '../../StreamingInterop';\n\nexport function sendJSDataStream(connection: HubConnection, data: ArrayBufferView | Blob, streamId: number, chunkSize: number): void {\n  // Run the rest in the background, without delaying the completion of the call to sendJSDataStream\n  // otherwise we'll deadlock (.NET can't begin reading until this completes, but it won't complete\n  // because nobody's reading the pipe)\n  setTimeout(async () => {\n    const maxMillisecondsBetweenAcks = 500;\n    let numChunksUntilNextAck = 5;\n    let lastAckTime = new Date().valueOf();\n    try {\n      const byteLength = data instanceof Blob ? data.size : data.byteLength;\n      let position = 0;\n      let chunkId = 0;\n\n      while (position < byteLength) {\n        const nextChunkSize = Math.min(chunkSize, byteLength - position);\n        const nextChunkData = await getNextChunk(data, position, nextChunkSize);\n\n        numChunksUntilNextAck--;\n        if (numChunksUntilNextAck > 1) {\n          // Most of the time just send and buffer within the network layer\n          await connection.send('ReceiveJSDataChunk', streamId, chunkId, nextChunkData, null);\n        } else {\n          // But regularly, wait for an ACK, so other events can be interleaved\n          // The use of \"invoke\" (not \"send\") here is what prevents the JS side from queuing up chunks\n          // faster than the .NET side can receive them. It means that if there are other user interactions\n          // while the transfer is in progress, they would get inserted in the middle, so it would be\n          // possible to navigate away or cancel without first waiting for all the remaining chunks.\n          const streamIsAlive = await connection.invoke<boolean>('ReceiveJSDataChunk', streamId, chunkId, nextChunkData, null);\n\n          // Checks to see if we should continue streaming or if the stream has been cancelled/disposed.\n          if (!streamIsAlive) {\n            break;\n          }\n\n          // Estimate the number of chunks we should send before the next ack to achieve the desired\n          // interactivity rate.\n          const timeNow = new Date().valueOf();\n          const msSinceAck = timeNow - lastAckTime;\n          lastAckTime = timeNow;\n          numChunksUntilNextAck = Math.max(1, Math.round(maxMillisecondsBetweenAcks / Math.max(1, msSinceAck)));\n        }\n\n        position += nextChunkSize;\n        chunkId++;\n      }\n    } catch (error) {\n      await connection.send('ReceiveJSDataChunk', streamId, -1, null, (error as Error).toString());\n    }\n  }, 0);\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nimport { Blazor } from './GlobalExports';\nimport { shouldAutoStart } from './BootCommon';\nimport { CircuitStartOptions } from './Platform/Circuits/CircuitStartOptions';\nimport { startCircuit } from './Boot.Server.Common';\nimport { ServerComponentDescriptor, discoverComponents } from './Services/ComponentDescriptorDiscovery';\nimport { DotNet } from '@microsoft/dotnet-js-interop';\n\nlet started = false;\n\nfunction boot(userOptions?: Partial<CircuitStartOptions>): Promise<void> {\n  if (started) {\n    throw new Error('Blazor has already started.');\n  }\n  started = true;\n\n  const serverComponents = discoverComponents(document, 'server') as ServerComponentDescriptor[];\n  return startCircuit(userOptions, serverComponents);\n}\n\nBlazor.start = boot;\nwindow['DotNet'] = DotNet;\n\nif (shouldAutoStart()) {\n  boot();\n}\n","// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\n// Tells you if the script was added without <script src=\"...\" autostart=\"false\"></script>\nexport function shouldAutoStart(): boolean {\n  return !!(document &&\n    document.currentScript &&\n    document.currentScript.getAttribute('autostart') !== 'false');\n}\n"],"names":["DotNet","EditType","FrameType","__webpack_require__","g","globalThis","this","Function","e","window","jsonRevivers","jsObjectIdKey","dotNetObjectRefKey","byteArrayRefKey","dotNetStreamRefKey","jsStreamReferenceLengthKey","defaultCallDispatcher","currentCallDispatcher","JSObject","constructor","_jsObject","_cachedFunctions","Map","findFunction","identifier","cachedFunction","get","lastSegmentValue","result","split","forEach","segment","Error","bind","set","getWrappedObject","cachedJSObjectsById","url","startsWith","URL","substr","document","baseURI","toString","import","JSCallResultType","nextJsObjectId","attachReviver","reviver","push","createJSObjectReference","jsObject","createJSStreamReference","streamReference","length","ArrayBuffer","Uint8Array","Blob","size","buffer","undefined","byteLength","jsObjectReference","error","parseJsonWithRevivers","callDispatcher","json","JSON","parse","key","initialValue","reduce","latestValue","getDefaultCallDispatcher","attachDispatcher","dotNetCallDispatcher","CallDispatcher","invokeMethod","assemblyName","methodIdentifier","args","invokeDotNetStaticMethod","invokeMethodAsync","invokeDotNetStaticMethodAsync","disposeJSObjectReference","id","disposeJSObjectReferenceById","_dotNetCallDispatcher","_byteArraysToBeRevived","_pendingDotNetToJSStreams","_pendingAsyncCalls","_nextAsyncCallId","getDotNetCallDispatcher","invokeJSFromDotNet","argsJson","resultType","targetInstanceId","createJSCallResult","findJSFunction","jsFunction","stringifyArgs","beginInvokeJSFromDotNet","asyncHandle","promise","Promise","resolve","then","endInvokeJSFromDotNet","stringify","formatError","endInvokeDotNetFromJS","asyncCallId","success","resultJsonOrExceptionMessage","resultOrError","completePendingCall","parseInt","invokeDotNetMethod","invokeDotNetMethodAsync","dotNetObjectId","invokeDotNetFromJS","resultJson","resultPromise","reject","beginInvokeDotNetFromJS","ex","receiveByteArray","data","processByteArray","delete","supplyDotNetStream","streamId","stream","has","pendingStream","PendingStream","getDotNetStreamPromise","streamPromise","hasOwnProperty","asyncCall","message","stack","targetInstance","DotNetObject","_id","_callDispatcher","dispose","catch","console","serializeAsArg","value","index","byteArray","DotNetStream","_streamPromise","async","Response","arrayBuffer","returnValue","Default","JSObjectReference","JSStreamReference","JSVoidResult","nextByteArrayIndex","argReplacer","sendByteArray","jsonValue","EventFieldInfo","componentId","fieldValue","static","event","elem","target","Element","fieldData","HTMLInputElement","type","toLowerCase","checked","HTMLSelectElement","HTMLTextAreaElement","getFormFieldData","eventTypeRegistry","browserEventNamesToAliases","eventNameAliasRegisteredCallbacks","getEventTypeOptions","eventName","getBrowserEventName","possibleAliasEventName","eventOptions","browserEventName","registerBuiltInEventType","eventNames","options","parseTouch","touchList","touches","i","touch","clientX","clientY","screenX","screenY","pageX","pageY","parseMouseEvent","detail","offsetX","offsetY","movementX","movementY","button","buttons","ctrlKey","shiftKey","altKey","metaKey","createEventArgs","element","timeBasedInputs","indexOf","getAttribute","isTimeBasedInput","normalizedValue","normalizeTimeBasedValue","isMultipleSelectInput","selectElement","Array","from","filter","option","selected","map","targetIsCheckbox","tagName","isCheckbox","parseDragEvent","dataTransfer","dropEffect","effectAllowed","files","f","name","items","kind","types","parseKeyboardEvent","code","location","repeat","parseErrorEvent","filename","lineno","colno","parseProgressEvent","lengthComputable","loaded","total","parseTouchEvent","targetTouches","changedTouches","parsePointerEvent","pointerId","width","height","pressure","tiltX","tiltY","pointerType","isPrimary","parseWheelEvent","deltaX","deltaY","deltaZ","deltaMode","pendingRootComponentContainers","manager","jsComponentParametersByIdentifier","nextPendingDynamicRootComponentIdentifier","RootComponentsFunctions","toElement","componentIdentifier","initialParameters","containerIdentifier","getRequiredManager","component","DynamicRootComponent","setParameters","EventCallbackWrapper","invoke","arg","_callback","setCallback","callback","_selfJSObjectReference","getJSObjectReference","parameters","_jsEventCallbackWrappers","_componentId","parameter","mappedParameters","entries","Object","parameterCount","callbackWrapper","jsEventCallbackWrapper","values","interopMethodsByRendererId","resolveRendererAttached","rendererAttached","dispatchEvent","browserRendererId","eventDescriptor","eventArgs","dispatchEventMiddleware","eventHandlerId","getInteropMethods","rendererId","interopMethods","continuation","nonBubblingEvents","toLookup","alwaysPreventDefaultEvents","submit","disableableEventNames","EventDelegator","afterClickCallbacks","eventDelegatorId","nextEventDelegatorId","eventsCollectionKey","eventInfoStore","EventInfoStore","onGlobalEvent","setListener","renderingComponentId","infoForElement","getEventHandlerInfosForElement","existingHandler","getHandler","update","newInfo","add","setHandler","removeListener","info","remove","elementEventInfos","removeHandler","notifyAfterClick","addGlobalListener","setStopPropagation","stopPropagation","setPreventDefault","preventDefault","evt","dispatchGlobalEventToAllElements","eventNameAliases","alias","browserEvent","path","composedPath","candidateEventTarget","shift","eventArgsIsPopulated","eventIsNonBubbling","prototype","call","stopPropagationWasRequested","candidateElement","handlerInfos","handlerInfo","rawBrowserEventName","HTMLButtonElement","disabled","eventOptionsIfRegistered","eventFieldInfo","fromEvent","createIfNeeded","EventHandlerInfosForElement","globalListener","infosByEventHandlerId","countByEventName","handleEventNameAliasAdded","useCapture","addEventListener","oldEventHandlerId","newEventHandlerId","removeEventListener","aliasEventName","countByAliasEventName","handlers","preventDefaultFlags","stopPropagationFlags","handler","setValue","logicalChildrenPropname","createSymbolOrFallback","logicalParentPropname","logicalEndSiblingPropname","allowExistingContents","childNodes","createAndInsertLogicalContainer","parent","childIndex","containerElement","createComment","insertLogicalChild","child","childAsLogicalElement","Comment","getLogicalChildrenArray","getLogicalParent","newSiblings","nextSibling","parentNode","insertBefore","splice","appendDomNode","removeLogicalChild","childToRemove","grandchildrenArray","domNodeToRemove","removeChild","getLogicalChild","isSvgElement","closestElement","getClosestDomElement","namespaceURI","permuteLogicalChildren","permutationList","siblings","listEntry","moveRangeStart","fromSiblingIndex","moveRangeEnd","findLastDomNodeInRange","marker","moveToBeforeMarker","insertBeforeNode","toSiblingIndex","parentDomNode","elementToMove","moveEndNode","nextToMove","nextNext","logicalElement","DocumentFragment","getLogicalNextSibling","appendChild","parentLogicalNextSibling","previousSibling","logicalParent","lastChild","fallback","Symbol","getCaptureIdAttributeName","referenceCaptureId","elementRefKey","selector","querySelector","getElementByCaptureId","deferredValuePropname","sharedTemplateElemForParsing","createElement","sharedSvgElemForParsing","createElementNS","elementsToClearOnRootComponentRender","internalAttributeNamePrefix","eventPreventDefaultAttributeNamePrefix","eventStopPropagationAttributeNamePrefix","BrowserRenderer","rootComponentIds","Set","childComponentLocations","eventDelegator","hasEnabledNavigationInterception","eventHasSpecialKey","defaultPrevented","anchorTarget","candidate","findClosestAnchorAncestorLegacy","findAnchorTarget","targetAttributeValue","hasAttribute","canProcessAnchor","absoluteHref","toAbsoluteUri","isWithinBaseUriSpace","performInternalNavigation","attachRootComponentToLogicalElement","appendContent","attachComponentToElement","updateComponent","batch","edits","referenceFrames","rootElementToClear","rootElementToClearEnd","getLogicalSiblingEnd","start","end","children","removeStart","endIndex","textContent","clearBetween","childNode","firstChild","clearElement","ownerDocument","getRootNode","activeElementBefore","activeElement","applyEdits","HTMLElement","focus","disposeComponent","childrenArray","emptyLogicalElement","disposeEventHandler","currentDepth","childIndexAtCurrentDepth","arrayBuilderSegmentReader","editReader","frameReader","editsValues","editsOffset","offset","maxEditIndexExcl","count","editIndex","edit","diffReader","editsEntry","editType","prependFrame","frameIndex","newTreeIndex","frame","referenceFramesEntry","siblingIndex","insertFrame","removeFrame","setAttribute","applyAttribute","removeAttribute","attributeName","removedAttributeName","tryApplySpecialProperty","updateText","textNode","Text","updateMarkup","insertMarkup","stepIn","stepOut","permutationListEntry","moveToSiblingIndex","permutationListEnd","frames","frameType","insertElement","text","insertText","attribute","insertComponent","region","insertFrameRange","subtreeLength","elementReferenceCapture","elementReferenceCaptureId","markup","elementName","newDomElementRaw","newElement","inserted","descendantsEndIndexExcl","descendantIndex","descendantFrame","HTMLOptionElement","trySetSelectValueFromOptionElement","setDeferredElementValue","optionElement","selectElem","findClosestAncestorSelectElement","isBlazorSelectElement","isMultipleSelectElement","_blazorDeferredValue","setSingleSelectElementValue","childComponentId","textFrame","createTextNode","markupFrame","markupContainer","parsedMarkup","markupContent","innerHTML","content","logicalSiblingIndex","toDomElement","attributeFrame","attributeEventHandlerId","stripOnPrefix","attributeValue","tryApplyValueProperty","tryApplyCheckedProperty","applyInternalAttribute","substring","internalAttributeName","endsWith","normalizeInputValue","parentElement","startIndex","endIndexExcl","origChildIndex","countDescendantFrames","setMultipleSelectElementValue","browserRenderers","shouldResetScrollAfterNextBatch","hasRegisteredNavigationEventListeners","hasLocationChangingEventListeners","currentHistoryIndex","currentLocationChangingCallId","notifyLocationChangedCallback","notifyLocationChangingCallback","popStateCallback","state","ignorePendingNavigation","_index","userState","delta","uri","href","navigateHistoryWithoutPopStateCallback","notifyLocationChanging","notifyLocationChanged","resolveCurrentNavigation","internalFunctions","listenForNavigationEvents","locationChangedCallback","locationChangingCallback","onPopState","history","enableNavigationInterception","setHasLocationChangingListeners","hasListeners","endLocationChanging","callId","shouldContinueNavigation","navigateTo","navigateToCore","getBaseURI","getLocationHref","scrollToElement","getElementById","scrollIntoView","skipLocationChangingCallback","absoluteUri","forceLoad","replaceHistoryEntry","historyEntryState","replace","temporaryUri","replaceState","performExternalNavigation","absoluteInternalHref","interceptedLink","hashIndex","hash","isSamePageWithHash","saveToBrowserHistory","performScrollToElementOnTheSamePage","pushState","oldPopStateCallback","go","intercepted","testAnchor","relativeUri","baseUriWithoutTrailingSlash","baseUri","lastIndexOf","nextChar","charAt","domFunctions","preventScroll","SVGElement","focusBySelector","tabIndex","Virtualize","init","dotNetHelper","spacerBefore","spacerAfter","rootMargin","scrollContainer","findClosestScrollContainer","documentElement","style","overflowAnchor","rangeBetweenSpacers","createRange","isValidTableElement","display","intersectionObserver","IntersectionObserver","entry","isIntersecting","setStartAfter","setEndBefore","spacerSeparation","getBoundingClientRect","containerSize","rootBounds","intersectionRect","top","boundingClientRect","offsetHeight","bottom","root","observe","mutationObserverBefore","createSpacerMutationObserver","mutationObserverAfter","spacer","observerOptions","attributes","mutationObserver","MutationObserver","mutations","observer","disconnect","unobserve","HTMLTableElement","HTMLTableSectionElement","observersByDotNetId","observers","body","getComputedStyle","overflowY","PageTitle","getAndRemoveExistingTitle","titleElements","head","getElementsByTagName","existingTitle","currentTitleElement","InputFile","_blazorInputFileNextFileId","_blazorFilesById","fileList","file","lastModified","Date","toISOString","contentType","readPromise","blob","toImageFile","fileId","format","maxWidth","maxHeight","originalFile","getFileById","loadedImage","originalFileImage","Image","onload","revokeObjectURL","src","onerror","createObjectURL","resizedImageBlob","desiredWidthRatio","Math","min","desiredHeightRatio","chosenSizeRatio","canvas","round","getContext","drawImage","toBlob","readFileData","registeredLocks","NavigationLock","enableNavigationPrompt","onBeforeUnload","disableNavigationPrompt","getNextChunk","position","nextChunkSize","chunkBlob","slice","getChunkFromBlob","byteOffset","getChunkFromArrayBufferView","Blazor","forceLoadOrOptions","replaceIfUsingOldOverload","registerCustomEventType","aliasGroup","rootComponents","_internal","navigationManager","domWrapper","getJSDataStreamChunk","attachWebRendererInterop","jsComponentParameters","jsComponentInitializers","keys","managerInstance","initializerIdentifier","componentIdentifiers","initializerFunc","enableJSRootComponents","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","_retryDelays","nextRetryDelayInMilliseconds","retryContext","previousRetryCount","HeaderNames","Authorization","Cookie","HttpResponse","statusCode","statusText","HttpClient","send","method","post","getCookieString","AccessTokenHttpClient","innerClient","accessTokenFactory","super","_innerClient","_accessTokenFactory","request","allowRetry","_accessToken","_setAuthorizationHeader","response","headers","HttpError","errorMessage","trueProto","__proto__","TimeoutError","AbortError","UnsupportedTransportError","transport","errorType","DisabledTransportError","FailedToStartTransportError","FailedToNegotiateWithServerError","AggregateErrors","innerErrors","LogLevel","NullLogger","log","_logLevel","_message","instance","VERSION","Arg","val","match","Platform","isBrowser","isWebWorker","self","isReactNative","isNode","getDataDetail","includeContent","isArrayBuffer","view","str","num","formatArrayBuffer","sendMessage","logger","transportName","httpClient","getUserAgentHeader","Trace","logMessageContent","responseType","timeout","withCredentials","SubjectSubscription","subject","_subject","_observer","cancelCallback","_","ConsoleLogger","minimumLogLevel","_minLevel","out","logLevel","msg","Critical","Warning","warn","Information","userAgentHeaderName","constructUserAgent","getOsName","getRuntimeVersion","version","os","runtime","runtimeVersion","userAgent","majorAndMinor","process","platform","versions","node","getErrorString","FetchHttpClient","_logger","fetch","requireFunc","_jar","CookieJar","_fetchType","getGlobalThis","AbortController","_abortControllerType","abortSignal","aborted","abortController","onabort","abort","timeoutId","msTimeout","setTimeout","cache","credentials","mode","redirect","signal","clearTimeout","ok","deserializeContent","status","payload","XhrHttpClient","xhr","XMLHttpRequest","open","setRequestHeader","header","responseText","ontimeout","DefaultHttpClient","_httpClient","HttpTransportType","TransferFormat","MessageType","HubConnectionState","_isAborted","LongPollingTransport","pollAborted","_pollAbort","_options","_running","onreceive","onclose","transferFormat","isRequired","isIn","_url","Binary","pollOptions","pollUrl","now","_closeError","_receiving","_poll","_raiseOnClose","deleteOptions","logMessage","ServerSentEventsTransport","accessToken","encodeURIComponent","eventSource","opened","EventSource","cookies","onmessage","_close","onopen","_eventSource","stop","close","WebSocketTransport","webSocketConstructor","_logMessageContent","_webSocketConstructor","_headers","token","webSocket","binaryType","_event","_webSocket","ErrorEvent","readyState","OPEN","_isCloseEvent","wasClean","reason","HttpConnection","_stopPromiseResolver","features","_negotiateVersion","baseUrl","_resolveUrl","WebSocket","_connectionState","_connectionStarted","Debug","_startInternalPromise","_startInternal","_stopPromise","_sendQueue","TransportSendQueue","_stopInternal","_stopError","_stopConnection","skipNegotiation","WebSockets","_constructTransport","_startTransport","negotiateResponse","redirects","_getNegotiationResponse","ProtocolVersion","_createTransport","inherentKeepAlive","negotiateUrl","_resolveNegotiateUrl","negotiateVersion","connectionToken","connectionId","_createConnectUrl","requestedTransport","requestedTransferFormat","connectUrl","_isITransport","transportExceptions","transports","availableTransports","negotiate","endpoint","transportOrError","_resolveTransportOrError","join","ServerSentEvents","LongPolling","connect","actualTransport","transportMatches","transferFormats","s","aTag","_transport","_buffer","_executing","_sendBufferedData","PromiseSource","_transportResult","_sendLoopPromise","_sendLoop","_bufferData","transportResult","_concatBuffers","arrayBuffers","totalLength","b","a","item","_resolver","_rejecter","TextMessageFormat","output","RecordSeparator","input","messages","pop","RecordSeparatorCode","String","fromCharCode","HandshakeProtocol","writeHandshakeRequest","handshakeRequest","write","parseHandshakeResponse","messageData","remainingData","binaryData","separatorIndex","responseLength","apply","textData","Subject","next","err","complete","subscribe","HubConnection","connection","protocol","reconnectPolicy","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","_nextKeepAlive","_freezeEventListener","_protocol","_reconnectPolicy","_handshakeProtocol","_processIncomingData","_connectionClosed","_callbacks","_methods","_closedCallbacks","_reconnectingCallbacks","_reconnectedCallbacks","_invocationId","_receivedHandshakeResponse","Disconnected","_cachedPingMessage","writeMessage","Ping","Reconnecting","_startPromise","_startWithStateTransitions","Connecting","Connected","_stopDuringStartError","handshakePromise","_handshakeResolver","_handshakeRejecter","_sendMessage","_cleanupTimeout","_resetTimeoutPeriod","_resetKeepAliveInterval","_cleanupPingTimer","startPromise","Disconnecting","_reconnectDelayHandle","_completeClose","methodName","streams","streamIds","_replaceStreamingParams","invocationDescriptor","_createStreamInvocation","promiseQueue","cancelInvocation","_createCancelInvocation","invocationId","_sendWithProtocol","invocationEvent","Completion","_launchStreams","sendPromise","_createInvocation","on","newMethod","off","removeIdx","onreconnecting","onreconnected","_processHandshakeResponse","parseMessages","Invocation","_invokeClientMethod","StreamItem","Close","allowReconnect","responseMessage","getTime","_timeoutHandle","serverTimeout","_pingServerHandle","nextPing","invocationMessage","methods","_createCompletionMessage","methodsCopy","expectsResponse","res","exception","completionMessage","m","prevRes","arguments","_cancelCallbacksWithError","_reconnect","c","reconnectStartTime","previousReconnectAttempts","retryError","nextRetryDelay","_getNextRetryDelay","elapsedMilliseconds","retryReason","callbacks","nonblocking","_createStreamItemMessage","argument","_isObservable","StreamInvocation","CancelInvocation","JsonHubProtocol","hubMessages","parsedMessage","_isInvocationMessage","_isStreamItemMessage","_isCompletionMessage","_assertNotEmptyString","LogLevelNameMapping","trace","debug","information","warning","critical","none","None","HubConnectionBuilder","configureLogging","logging","mapping","parseLogLevel","withUrl","transportTypeOrOptions","isNotEmpty","httpConnectionOptions","withHubProtocol","withAutomaticReconnect","retryDelaysOrReconnectPolicy","isArray","withServerTimeout","milliseconds","_serverTimeoutInMilliseconds","withKeepAliveInterval","_keepAliveIntervalInMilliseconds","build","create","_a","_b","_c","UINT32_MAX","setInt64","high","floor","low","setUint32","getInt64","getInt32","getUint32","TEXT_ENCODING_AVAILABLE","env","TextEncoder","TextDecoder","utf8Count","strLength","pos","charCodeAt","extra","sharedTextEncoder","TEXT_ENCODER_THRESHOLD","utf8EncodeTE","encodeInto","outputOffset","subarray","encode","CHUNK_SIZE","utf8DecodeJs","bytes","inputOffset","units","byte1","byte2","byte3","unit","extendStatics","sharedTextDecoder","TEXT_DECODER_THRESHOLD","ExtData","__extends","d","setPrototypeOf","p","TypeError","__","DecodeError","_super","_this","proto","defineProperty","configurable","enumerable","timestampExtension","object","msec","sec","nsec","nsecInSec","rv","DataView","secHigh","secLow","encodeTimeSpecToTimestamp","decode","timeSpec","nsec30AndSecHigh2","concat","decodeTimestampToTimeSpec","ExtensionCodec","builtInEncoders","builtInDecoders","encoders","decoders","register","tryToEncode","context","encodeExt","decodeExt","defaultCodec","ensureUint8Array","isView","DEFAULT_MAX_DEPTH","DEFAULT_INITIAL_BUFFER_SIZE","Encoder","extensionCodec","maxDepth","initialBufferSize","sortKeys","forceFloat32","ignoreUndefined","forceIntegerToFloat","reinitializeState","encodeSharedRef","doEncode","depth","encodeNil","encodeBoolean","encodeNumber","encodeString","encodeObject","ensureBufferSizeToWrite","sizeToWrite","requiredSize","resizeBuffer","newSize","newBuffer","newBytes","newView","writeU8","Number","isSafeInteger","writeU16","writeU32","writeU64","writeI8","writeI16","writeI32","writeI64","writeF32","writeF64","writeStringHeader","utf8EncodeJs","ext","encodeExtension","encodeArray","encodeBinary","encodeMap","writeU8a","_i","object_1","countWithoutUndefined","keys_1","sort","keys_2","setUint8","setInt8","setUint16","setInt16","setInt32","setFloat32","setFloat64","setUint64","prettyByte","byte","abs","padStart","DEFAULT_MAX_KEY_LENGTH","DEFAULT_MAX_LENGTH_PER_KEY","CachedKeyDecoder","maxKeyLength","maxLengthPerKey","hit","miss","caches","canBeCached","find","FIND_CHUNK","records_1","record","recordBytes","j","store","records","random","cachedValue","slicedCopyOfBytes","__generator","thisArg","y","t","label","sent","trys","ops","verb","iterator","n","v","op","done","step","__asyncValues","o","asyncIterator","__values","settle","__await","__asyncGenerator","_arguments","generator","q","resume","r","fulfill","HEAD_BYTE_REQUIRED","EMPTY_VIEW","EMPTY_BYTES","DataViewIndexOutOfBoundsError","getInt8","MORE_DATA","sharedCachedKeyDecoder","Decoder","maxStrLength","maxBinLength","maxArrayLength","maxMapLength","maxExtLength","keyDecoder","totalPos","headByte","setBuffer","bufferView","createDataView","appendBuffer","hasRemaining","newData","createExtraByteError","posToShow","RangeError","doDecodeSync","decodeMulti","decodeAsync","stream_1","stream_1_1","e_1","P","decoded","e_1_1","return","fulfilled","rejected","decodeArrayStream","decodeMultiAsync","decodeStream","isArrayHeaderRequired","arrayItemsLeft","stream_2","stream_2_1","e_2","e_3_1","e_3","readArraySize","DECODE","readHeadByte","pushMapState","pushArrayState","decodeUtf8String","readF32","readF64","readU8","readU16","readU32","readU64","readI8","readI16","readI32","readI64","lookU8","lookU16","lookU32","decodeBinary","decodeExtension","array","keyType","readCount","headerOffset","stateIsMapKey","stringBytes","utf8DecodeTD","headOffset","extType","getUint8","getUint16","getInt16","getFloat32","getFloat64","BinaryMessageFormat","lenBuffer","sizePart","uint8Array","numBitsToShift","byteRead","numBytes","SERIALIZED_PING_MESSAGE","MessagePackHubProtocol","messagePackOptions","_errorResult","_voidResult","_nonVoidResult","_encoder","_decoder","_parseMessage","_writeInvocation","_writeStreamInvocation","_writeStreamItem","_writeCompletion","_writeCancelInvocation","properties","messageType","_createInvocationMessage","_readHeaders","_createPingMessage","_createCloseMessage","resultKind","streamInvocationMessage","streamItemMessage","cancelInvocationMessage","hasFailed","showErrorNotification","errorUi","querySelectorAll","reload","onclick","dismiss","nativeDecoder","decodeUtf8","len","substrings","codepoint","uint64HighPartShift","pow","maxSafeNumberHighPart","readInt32LE","readUint32LE","readUint64LE","highPart","OutOfProcessRenderBatch","batchData","stringReader","OutOfProcessStringReader","arrayRangeReader","OutOfProcessArrayRangeReader","OutOfProcessArrayBuilderSegmentReader","OutOfProcessRenderTreeDiffReader","OutOfProcessRenderTreeEditReader","OutOfProcessRenderTreeFrameReader","updatedComponents","disposedComponentIds","disposedEventHandlerIds","updatedComponentsEntry","tableEntryPos","disposedComponentIdsEntry","entryPos","disposedEventHandlerIdsEntry","batchDataUint8","diff","stringIndex","readString","stringTableStartIndex","stringTableEntryPos","numUtf8Bytes","readLEB128","charsStart","utf8Data","arrayRange","_arrayBuilderSegment","arrayBuilderSegment","RenderQueue","nextBatchId","receivedBatchId","completeBatch","fatalError","browserRenderer","updatedComponentsRange","updatedComponentsValues","updatedComponentsLength","referenceFramesValues","disposedComponentIdsRange","disposedComponentIdsValues","disposedComponentIdsLength","disposedEventHandlerIdsRange","disposedEventHandlerIdsValues","disposedEventHandlerIdsLength","scrollTo","renderBatch","getLastBatchid","batchId","minLevel","CircuitDescriptor","components","appState","circuitId","applicationState","reconnect","reconnection","initialize","toRecord","resolveElement","sequenceOrIdentifier","jsAddedComponentContainer","container","parsedSequence","isNaN","parentLogicalElement","toLogicalRootCommentElement","defaultOptions","configureSignalR","reconnectionOptions","maxRetries","retryIntervalMilliseconds","dialogId","DefaultReconnectDisplay","addedToDom","modal","cssText","link","reloadParagraph","loader","getLoader","after","show","failed","visibility","currentAttempt","hide","errorDescription","errorInstructions","replaceChildren","animate","transform","duration","iterations","Infinity","UserSpecifiedDisplay","dialog","maxRetriesElement","MaxRetriesId","innerText","removeClasses","classList","ShowClassName","currentAttemptElement","CurrentAttemptId","HideClassName","FailedClassName","RejectedClassName","DefaultReconnectionHandler","overrideDisplay","reconnectCallback","_currentReconnectionProcess","_reconnectionDisplay","_reconnectCallback","onConnectionDown","_error","ReconnectionProcess","onConnectionUp","isDisposed","reconnectDisplay","attemptPeriodicReconnection","delayDuration","MaximumFirstRetryInterval","delay","durationMilliseconds","blazorStateCommentRegularExpression","discoverPersistedState","nodeType","Node","COMMENT_NODE","parsedState","exec","groups","hasChildNodes","nodes","resolveComponentComments","childNodeIterator","ComponentCommentIterator","currentElement","componentComment","getComponentComment","childResults","childResult","blazorCommentRegularExpression","RegExp","commentNodeIterator","candidateStart","definition","parseCommentPayload","assembly","typeName","parameterDefinitions","parameterValues","prerenderId","getComponentEndComment","atob","createWebAssemblyComponentComment","descriptor","sequence","isInteger","createServerComponentComment","prerenderedId","validateEndComponentPayload","prerenderedEndId","currentIndex","ServerComponentDescriptor","WebAssemblyComponentDescriptor","globalId","JSInitializer","afterStartedCallbacks","initializerFiles","initializerArguments","all","jsInitializer","adjustedPath","base","adjustPath","initializer","beforeStart","afterStarted","importAndInvokeInitializer","blazor","circuit","dispatcher","renderingFailed","startCircuit","userOptions","resolveOptions","jsInitializersResponse","initializers","importInitializersAsync","fetchAndInvokeInitializers","existingConnection","initializeConnection","reconnectionHandler","defaultReconnectionHandler","forceCloseConnection","sendJSDataStream","chunkSize","numChunksUntilNextAck","lastAckTime","valueOf","chunkId","nextChunkData","timeNow","msSinceAck","max","succeeded","initialConnection","disconnectSent","cleanup","FormData","append","navigator","sendBeacon","capture","once","invokeAfterStartedCallbacks","hubProtocol","connectionBuilder","newConnection","readableStream","ReadableStream","controller","chunk","enqueue","renderQueue","getOrCreate","processBatch","unhandledError","some","started","boot","componentComments","discoveredComponents","discoverServerComponents","discoverComponents","currentScript"],"sourceRoot":""}